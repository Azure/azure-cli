{
  "swagger": "2.0",
  "info": {
    "version": "2016-02-03",
    "title": "iotHubClient",
    "description": "API for using the IoT Hub Features."
  },
  "host": "management.azure.com",
  "schemes": [ "https" ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get an IotHub.",
        "description": "Get an IotHub.",
        "operationId": "IotHubResource_Get",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "PUT" ],
        "summary": "Create or update an IotHub.",
        "description": "Create or update an IotHub.",
        "operationId": "IotHubResource_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "iotHubDescription",
            "in": "body",
            "description": "The Iot hub description.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [ "DELETE" ],
        "summary": "Delete an IotHub.",
        "description": "Delete an IotHub.",
        "operationId": "IotHubResource_Delete",
        "x-ms-long-running-operation": true,
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get all IotHubs in a subscription.",
        "description": "Get all IotHubs in a subscription.",
        "operationId": "IotHubResource_ListBySubscription",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubDescriptionListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get all IotHubs in a Resourcegroup.",
        "description": "Get all IotHubs in a Resource group.",
        "operationId": "IotHubResource_ListByResourceGroup",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubDescriptionListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get IotHub Stats.",
        "description": "Get IotHub Stats.",
        "operationId": "IotHubResource_GetStats",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegistryStatistics"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get Valid Skus.",
        "description": "Get Valid Skus.",
        "operationId": "IotHubResource_GetValidSkus",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubSkuDescriptionListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get EventHub Consumer Groups for an IotHub.",
        "description": "Get EventHub Consumer Groups for an IotHub.",
        "operationId": "IotHubResource_ListEventHubConsumerGroups",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the event hub endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupsListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get EventHub Consumer Group for an IotHub.",
        "description": "Get EventHub Consumer Group for an IotHub.",
        "operationId": "IotHubResource_GetEventHubConsumerGroup",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the event hub endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "PUT" ],
        "summary": "Add an EventHub Consumer Group to an IotHub.",
        "description": "Add an EventHub Consumer Group to an IotHub.",
        "operationId": "IotHubResource_CreateEventHubConsumerGroup",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the event hub endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [ "DELETE" ],
        "summary": "Delete EventHub Consumer Group for an IotHub.",
        "description": "Delete EventHub Consumer Group for an IotHub.",
        "operationId": "IotHubResource_DeleteEventHubConsumerGroup",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the event hub endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get all the jobs in an IotHub.",
        "description": "Get all the jobs in an IotHub.",
        "operationId": "IotHubResource_ListJobs",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResponseListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get a job in an IotHub.",
        "description": "Get a job in an IotHub.",
        "operationId": "IotHubResource_GetJob",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics": {
      "get": {
        "tags": [ "GET" ],
        "summary": "Get quota metrics for an IotHub.",
        "description": "Get quota metrics for an IotHub.",
        "operationId": "IotHubResource_GetQuotaMetrics",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubQuotaMetricInfoListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability": {
      "post": {
        "tags": [ "POST" ],
        "summary": "Check if an IotHub name is available.",
        "description": "Check if an IotHub name is available.",
        "operationId": "IotHubResource_CheckNameAvailability",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "operationInputs",
            "in": "body",
            "description": "The operation inputs. Set the name parameter in the operationInputs structure to the desired iothub name.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotHubNameAvailabilityInfo"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys": {
      "post": {
        "tags": [ "POST" ],
        "summary": "Get all keys for an IotHub.",
        "description": "Get all keys for an IotHub.",
        "operationId": "IotHubResource_ListKeys",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys": {
      "post": {
        "tags": [ "POST" ],
        "summary": "Get the Key given a specific KeyName for an IotHub.",
        "description": "Get the Key given a specific KeyName for an IotHub.",
        "operationId": "IotHubResource_GetKeysForKeyName",
        "consumes": [ ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices": {
      "post": {
        "tags": [ "POST" ],
        "summary": "Export all the devices in an IotHub.",
        "description": "Export all the devices in an IotHub.",
        "operationId": "IotHubResource_ExportDevices",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportDevicesParameters",
            "in": "body",
            "description": "The export devices parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices": {
      "post": {
        "tags": [ "POST" ],
        "summary": "Import all the devices in an IotHub.",
        "description": "Import all the devices in an IotHub.",
        "operationId": "IotHubResource_ImportDevices",
        "consumes": [ "application/json", "text/json" ],
        "produces": [ "application/json", "text/json" ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "importDevicesParameters",
            "in": "body",
            "description": "The import devices parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "SharedAccessSignatureAuthorizationRule": {
      "description": "The properties that describe the keys to access the IotHub artifacts.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the key.",
          "type": "string"
        },
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        },
        "rights": {
          "description": "The access rights.",
          "enum": [
            "RegistryRead",
            "RegistryWrite",
            "ServiceConnect",
            "DeviceConnect",
            "RegistryRead, RegistryWrite",
            "RegistryRead, ServiceConnect",
            "RegistryRead, DeviceConnect",
            "RegistryWrite, ServiceConnect",
            "RegistryWrite, DeviceConnect",
            "ServiceConnect, DeviceConnect",
            "RegistryRead, RegistryWrite, ServiceConnect",
            "RegistryRead, RegistryWrite, DeviceConnect",
            "RegistryRead, ServiceConnect, DeviceConnect",
            "RegistryWrite, ServiceConnect, DeviceConnect",
            "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessRights",
            "modelAsString": false
          }
        }
      }
    },
    "IotHubProperties": {
      "description": "The Iot Hub properties.",
      "type": "object",
      "properties": {
        "state": {
          "description": "IoT Hub state.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provision state.",
          "type": "string"
        },
        "authorizationPolicies": {
          "description": "The authorization rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
          }
        },
        "hostName": {
          "description": "The name of the host.",
          "type": "string"
        },
        "eventHubEndpoints": {
          "description": "The event hub endpoint properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EventHubProperties"
          }
        },
        "storageEndpoints": {
          "description": "The list of storage end points where files can be uploaded. Currently only one storage account can be configured.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StorageEndpointProperties"
          }
        },
        "messagingEndpoints": {
          "description": "The list of messaging end points configured.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MessagingEndpointProperties"
          }
        },
        "enableFileUploadNotifications": {
          "description": "The flag which indicates whether file upload notification should be enabled. This is optional at iot hub level. When enabled upload notifications will be available.",
          "type": "boolean"
        },
        "cloudToDevice": {
          "$ref": "#/definitions/CloudToDeviceProperties"
        },
        "comments": {
          "description": "The comments.",
          "type": "string"
        },
        "operationsMonitoringProperties": {
          "$ref": "#/definitions/OperationsMonitoringProperties"
        },
        "features": {
          "description": "The Capabilities/Features that need to be enabled for the Hub.",
          "enum": [ "None", "DeviceManagement" ],
          "type": "string",
          "x-ms-enum": {
            "name": "Capabilities",
            "modelAsString": true
          }
        }
      }
    },
    "IotHubSkuInfo": {
      "description": "The Sku related information for the hub.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the Sku.",
          "enum": [ "F1", "S1", "S2", "S3" ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubSku",
            "modelAsString": true
          }
        },
        "tier": {
          "description": "The tier.",
          "enum": [ "Free", "Standard" ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "IotHubSkuTier",
            "modelAsString": false
          }
        },
        "capacity": {
          "format": "int64",
          "description": "The number of units being provisioned. Range of values [For F1: 1-1, S1: 1-200, S2: 1-200, S3: 1-10]. To go above this range, call support.",
          "type": "integer"
        }
      }
    },
    "EventHubProperties": {
      "description": "The properties of the provisioned event hub used by the Iot Hub.",
      "type": "object",
      "properties": {
        "retentionTimeInDays": {
          "format": "int64",
          "description": "The retention time in days. Range of values [For F1: 1-1, S1: 1-7, S2: 1-7, S3: 1-7].",
          "type": "integer"
        },
        "partitionCount": {
          "format": "int32",
          "description": "The partition count. Range of values [For F1: 2-2, S1: 2-128, S2: 2-128, S3: 2-128].",
          "type": "integer"
        },
        "partitionIds": {
          "description": "The partition ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "description": "The eventhub path.",
          "type": "string"
        },
        "endpoint": {
          "description": "The endpoint.",
          "type": "string"
        },
        "internalAuthorizationPolicies": {
          "description": "The internal authorization rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRule"
          }
        },
        "authorizationPolicies": {
          "description": "The authorization rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRule"
          }
        }
      }
    },
    "StorageEndpointProperties": {
      "description": "The properties of the Storage Endpoint for file upload.",
      "type": "object",
      "properties": {
        "sasTtlAsIso8601": {
          "description": "SAS time to live. Range: 1 Min (PT1M) - 1 Day (P1D).",
          "type": "string",
          "format":  "duration"
        },
        "connectionString": {
          "description": "The account key credentials for storage account selected by customer for uploading files.",
          "type": "string"
        },
        "containerName": {
          "description": "The root container name where all files will be uploaded.",
          "type": "string"
        }
      }
    },
    "MessagingEndpointProperties": {
      "description": "The properties of the Messaging Endpoints used by this IoT Hub.",
      "type": "object",
      "properties": {
        "lockDurationAsIso8601": {
          "description": "The lock duration. Range: 5 Sec (PT5S) - 5 Min (PT5M).",
          "type": "string",
          "format":  "duration"
        },
        "ttlAsIso8601": {
          "description": "The time to live. Range: 1 Min (PT1M) - 2 Days (P2D).",
          "type": "string",
          "format":  "duration"
        },
        "maxDeliveryCount": {
          "description": "The max delivery count. Range: 1-100.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "CloudToDeviceProperties": {
      "description": "The Iot Hub Cloud-To-Device messaging properties.",
      "type": "object",
      "properties": {
        "maxDeliveryCount": {
          "description": "The max delivery count for the device queue. Range : 1-100.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        },
        "defaultTtlAsIso8601": {
          "description": "The default time to live for the device queue. Range : 1 Min (PT1M) - 2 Days (P2D).",
          "type": "string",
          "format":  "duration"
        },
        "feedback": {
          "$ref": "#/definitions/FeedbackProperties"
        }
      }
    },
    "OperationsMonitoringProperties": {
      "description": "The Operation Monitoring properties.",
      "type": "object",
      "properties": {
        "events": {
          "type": "object",
          "additionalProperties": {
            "enum": [ "None", "Error", "Information" ],
            "description": "The Operation Monitoring Level.",
            "type": "string",
            "x-ms-enum": {
              "name": "OperationMonitoringLevel",
              "modelAsString": true
            }
          }
        }
      }
    },
    "SharedAccessAuthorizationRule": {
      "type": "object",
      "properties": {
        "KeyName": {
          "description": "The key name.",
          "type": "string"
        },
        "PrimaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "IssuerName": {
          "description": "The issuer name.",
          "type": "string"
        },
        "SecondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        },
        "ClaimType": {
          "description": "The claim type.",
          "type": "string"
        },
        "ClaimValue": {
          "description": "The claim value.",
          "type": "string"
        },
        "Rights": {
          "type": "array",
          "description": "The rights.",
          "items": {
            "enum": [ "Manage", "Send", "Listen", "ManageNotificationHub" ],
            "type": "string",
            "x-ms-enum": {
              "name": "SBAccessRights",
              "modelAsString": false
            }
          }
        },
        "CreatedTime": {
          "description": "The created time.",
          "format": "date-time",
          "type": "string"
        },
        "ModifiedTime": {
          "description": "The modified time.",
          "format": "date-time",
          "type": "string"
        },
        "Revision": {
          "description": "The revision.",
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "FeedbackProperties": {
      "description": "The Feedback Queue properties.",
      "type": "object",
      "properties": {
        "lockDurationAsIso8601": {
          "description": "The lock duration for the feedback queue. Range: 5 Sec (PT5S) - 5 Min (PT5M).",
          "type": "string",
          "format":  "duration"
        },
        "ttlAsIso8601": {
          "description": "The time to live for the feedback queue. Range: 1 Min (PT1M) - 2 Days (P2D).",
          "type": "string",
          "format":  "duration"
        },
        "maxDeliveryCount": {
          "description": "The max delivery count. Range : 1-100.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "IotHubDescription": {
      "description": "The description of the IotHub.",
      "type": "object",
      "properties": {
        "subscriptionid": {
          "description": "The subscription identifier.",
          "type": "string"
        },
        "resourcegroup": {
          "description": "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "type": "string"
        },
        "etag": {
          "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/IotHubProperties"
        },
        "sku": {
          "$ref": "#/definitions/IotHubSkuInfo"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The Resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The Resource type."
        },
        "location": {
          "type": "string",
          "description": "The Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "SharedAccessSignatureAuthorizationRuleListResult": {
      "description": "The list of authorization rules with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of authorization rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "description": "The properties related to the details of an error.",
      "type": "object",
      "properties": {
        "Code": {
          "description": "The error code.",
          "type": "string"
        },
        "HttpStatusCode": {
          "description": "The http status code.",
          "type": "string",
          "readOnly": true
        },
        "Message": {
          "description": "The error message.",
          "type": "string"
        },
        "Details": {
          "description": "The error details.",
          "type": "string"
        }
      }
    },
    "IotHubQuotaMetricInfoListResult": {
      "description": "The list of IotHubQuotaMetricInfo objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of IotHubQuotaMetricInfo.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IotHubQuotaMetricInfo"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RegistryStatistics": {
      "description": "The properties related to the registry statistics.",
      "type": "object",
      "properties": {
        "totalDeviceCount": {
          "format": "int64",
          "description": "The total device count.",
          "type": "integer"
        },
        "enabledDeviceCount": {
          "format": "int64",
          "description": "The enabled device count.",
          "type": "integer"
        },
        "disabledDeviceCount": {
          "format": "int64",
          "description": "The disabled device count.",
          "type": "integer"
        }
      }
    },
    "JobResponseListResult": {
      "description": "The list of JobResponse objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of JobResponse.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobResponse"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubSkuDescription": {
      "description": "The properties related to the Sku.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/IotHubSkuInfo"
        },
        "capacity": {
          "$ref": "#/definitions/IotHubCapacity"
        }
      }
    },
    "IotHubCapacity": {
      "description": "The properties related to the capacity information.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int64",
          "description": "The minimum number of units.",
          "type": "integer",
          "minimum": 1,
          "maximum": 1
        },
        "maximum": {
          "format": "int64",
          "description": "The maximum number of units.",
          "type": "integer"
        },
        "default": {
          "format": "int64",
          "description": "The default number of units.",
          "type": "integer"
        },
        "scaleType": {
          "description": "The type of the scale.",
          "enum": [ "Automatic", "Manual", "None" ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubScaleType",
            "modelAsString": false
          }
        }
      }
    },
    "EventHubConsumerGroupsListResult": {
      "description": "The list of eventhub consumer group names with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of eventhub consumer group names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EventHubConsumerGroupInfo": {
      "description": "The properties indicating the EventHubConsumerGroupInfo.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The event hub consumer group identifier.",
          "type": "string"
        },
        "name": {
          "description": "The event hub consumer group name.",
          "type": "string"
        }
      }
    },
    "IotHubSkuDescriptionListResult": {
      "description": "The list of IotHubSkuDescription objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of IotHubSkuDescription.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IotHubSkuDescription"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobResponse": {
      "description": "The properties describing a Job Response.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The job identifier.",
          "type": "string"
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "Start time of the Job.",
          "type": "string"
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "Represents the time the job stopped processing.",
          "type": "string"
        },
        "type": {
          "description": "The type of job to execute.",
          "enum": [ "unknown", "export", "import", "backup", "readDeviceProperties", "writeDeviceProperties", "updateDeviceConfiguration", "rebootDevice", "factoryResetDevice", "firmwareUpdate" ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Status of the Job.",
          "enum": [ "unknown", "enqueued", "running", "completed", "failed", "cancelled" ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "failureReason": {
          "description": "If status == failure, this represents a string containing the reason.",
          "type": "string"
        },
        "statusMessage": {
          "description": "The status message for the job.",
          "type": "string"
        },
        "deviceId": {
          "description": "The deviceId related to this response.",
          "type": "string"
        },
        "parentJobId": {
          "description": "The jobId of the parent job, if any.",
          "type": "string"
        }
      }
    },
    "IotHubDescriptionListResult": {
      "description": "The list of IotHubDescription objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of IotHubDescription.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IotHubDescription"
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubQuotaMetricInfo": {
      "description": "The properties related to quota metrics.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the quota metric.",
          "type": "string"
        },
        "CurrentValue": {
          "format": "int64",
          "description": "The current value for the quota metric.",
          "type": "integer"
        },
        "MaxValue": {
          "format": "int64",
          "description": "The maximum value of the quota metric.",
          "type": "integer"
        }
      }
    },
    "OperationInputs": {
      "description": "OperationInputs.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the iot hub.",
          "type": "string"
        }
      },
      "required": [
        "Name"
      ]
    },
    "IotHubNameAvailabilityInfo": {
      "description": "The properties indicating whether a given iothub name is available.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "The value which indicates whether the provided name is available.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason for unavailability.",
          "enum": [ "Invalid", "AlreadyExists" ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubNameUnavailabilityReason",
            "modelAsString": false
          }
        },
        "message": {
          "description": "The message describing the detailed reason.",
          "type": "string"
        }
      }
    },
    "ExportDevicesRequest": {
      "description": "Used to provide parameters when requesting an export of all devices in the hub.",
      "type": "object",
      "properties": {
        "ExportBlobContainerUri": {
          "description": "The export BLOB container URI.",
          "type": "string"
        },
        "ExcludeKeys": {
          "description": "The value indicating whether keys should be excluded during export.",
          "type": "boolean"
        }
      },
      "required": [
        "ExportBlobContainerUri",
        "ExcludeKeys"
      ]
    },
    "ImportDevicesRequest": {
      "description": "Used to provide parameters when requesting an import of all devices in the hub.",
      "type": "object",
      "properties": {
        "InputBlobContainerUri": {
          "description": "The input BLOB container URI.",
          "type": "string"
        },
        "OutputBlobContainerUri": {
          "description": "The output BLOB container URI.",
          "type": "string"
        }
      },
      "required": [
        "InputBlobContainerUri",
        "OutputBlobContainerUri"
      ]
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier.",
      "required": true,
      "type": "string"
    },
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the Api.",
      "required": true,
      "type": "string",
      "default": "2016-02-03"
    }
  }
}
