# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .task_step_properties import TaskStepProperties


class BuildTaskStep(TaskStepProperties):
    """The properties of a build task step.

    :param type: Constant filled by server.
    :type type: str
    :param definition_file_path: The build task template/definition file path
     relative to the source context.
    :type definition_file_path: str
    :param values_file_path: The task values/parameters file path relative to
     the source context.
    :type values_file_path: str
    :param context_path: The URL(absolute or relative) of the source context
     for the build task.
     If it is relative, the context will be relative to the source repository
     URL of the build task.
    :type context_path: str
    :param arguments: The collection of override arguments to be used when
     executing this build step.
    :type arguments: list[~containerregistrybuild.models.Argument]
    :param base_image_dependencies: List of base image dependencies for a
     step.
    :type base_image_dependencies:
     list[~containerregistrybuild.models.BaseImageDependency]
    """

    _validation = {
        'type': {'required': True},
        'definition_file_path': {'required': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'definition_file_path': {'key': 'definitionFilePath', 'type': 'str'},
        'values_file_path': {'key': 'valuesFilePath', 'type': 'str'},
        'context_path': {'key': 'contextPath', 'type': 'str'},
        'arguments': {'key': 'arguments', 'type': '[Argument]'},
        'base_image_dependencies': {'key': 'baseImageDependencies', 'type': '[BaseImageDependency]'},
    }

    def __init__(self, definition_file_path, values_file_path=None, context_path=None, arguments=None, base_image_dependencies=None):
        super(BuildTaskStep, self).__init__()
        self.definition_file_path = definition_file_path
        self.values_file_path = values_file_path
        self.context_path = context_path
        self.arguments = arguments
        self.base_image_dependencies = base_image_dependencies
        self.type = 'BuildTask'
