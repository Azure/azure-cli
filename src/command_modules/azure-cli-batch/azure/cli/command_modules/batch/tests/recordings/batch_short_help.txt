
(env) C:\Code\Forks\azure-cli>cmd /c az batch account create --help 

Command
    az batch account create: Create a Batch account with the specified parameters.

Arguments
    --location -l       [Required]: The region in which to create the account.
    --name -n           [Required]: Name of the Batch account.
    --resource-group -g [Required]: Name of the resource group.
    --keyvault                    : The KeyVault name or resource ID to be used for an account with
                                    a pool allocation mode of 'User Subscription'.
    --storage-account             : The storage account name or resource ID to be used for auto
                                    storage.
    --tags                        : Space separated tags in 'key[=value]' format.

Global Arguments
    --debug                       : Increase logging verbosity to show all debug logs.
    --help -h                     : Show this help message and exit.
    --output -o                   : Output format.  Allowed values: json, jsonc, table, tsv.
                                    Default: json.
    --query                       : JMESPath query string. See http://jmespath.org/ for more
                                    information and examples.
    --verbose                     : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch application create --help 

Command
    az batch application create: Adds an application to the specified Batch account.

Arguments
    --application-id    [Required]: The ID of the application.
    --name -n           [Required]: Name of the Batch account.
    --resource-group -g [Required]: Name of the resource group.
    --allow-updates               : Specify to indicate whether packages within the application may
                                    be overwritten using the same version string. True if flag
                                    present.
    --display-name                : The display name for the application.

Global Arguments
    --debug                       : Increase logging verbosity to show all debug logs.
    --help -h                     : Show this help message and exit.
    --output -o                   : Output format.  Allowed values: json, jsonc, table, tsv.
                                    Default: json.
    --query                       : JMESPath query string. See http://jmespath.org/ for more
                                    information and examples.
    --verbose                     : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch application package create --help 

Command
    az batch application package create: Create an application package record and activate it.

Arguments
    --application-id    [Required]: The ID of the application.
    --name -n           [Required]: Name of the Batch account.
    --package-file      [Required]: The path of the application package in zip format.
    --resource-group -g [Required]: Name of the resource group.
    --version           [Required]: The version of the application.

Global Arguments
    --debug                       : Increase logging verbosity to show all debug logs.
    --help -h                     : Show this help message and exit.
    --output -o                   : Output format.  Allowed values: json, jsonc, table, tsv.
                                    Default: json.
    --query                       : JMESPath query string. See http://jmespath.org/ for more
                                    information and examples.
    --verbose                     : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch certificate create --help 

Command
    az batch certificate create: Add a certificate.

Arguments
    --certificate-file [Required]: The certificate file: cer file or pfx file.
    --thumbprint       [Required]: The certificate thumbprint.
    --password                   : The password to access the certificate's private key.

Batch Account Arguments
    --account-endpoint           : Batch service endpoint. Alternatively, set by environment
                                   variable: AZURE_BATCH_ENDPOINT.
    --account-key                : The Batch account key. Alternatively, set by environment
                                   variable: AZURE_BATCH_ACCESS_KEY.
    --account-name               : The Batch account name. Alternatively, set by environment
                                   variable: AZURE_BATCH_ACCOUNT.

Global Arguments
    --debug                      : Increase logging verbosity to show all debug logs.
    --help -h                    : Show this help message and exit.
    --output -o                  : Output format.  Allowed values: json, jsonc, table, tsv.
                                   Default: json.
    --query                      : JMESPath query string. See http://jmespath.org/ for more
                                   information and examples.
    --verbose                    : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch pool create --help 

Command
    az batch pool create: Create a pool in the specified account. When creating a pool, choose
    arguments from either Cloud Services Configuration or Virtual Machine Configuration.

Arguments
    --json-file                      : A file containing the pool specification in JSON format. If
                                       this parameter is specified, all 'Pool Arguments' are
                                       ignored.

Batch Account Arguments
    --account-endpoint               : Batch service endpoint. Alternatively, set by environment
                                       variable: AZURE_BATCH_ENDPOINT.
    --account-key                    : Batch account key. Alternatively, set by environment
                                       variable: AZURE_BATCH_ACCESS_KEY.
    --account-name                   : Batch account name. Alternatively, set by environment
                                       variable: AZURE_BATCH_ACCOUNT.

Pool Arguments
    --application-licenses           : The list of application licenses the Batch service will make
                                       available on each compute node in the pool. The list of
                                       application licenses must be a subset of available Batch
                                       service application licenses. If a license is requested which
                                       is not supported, pool creation will fail. Space separated
                                       values.
    --application-package-references : The list of application packages to be installed on each
                                       compute node in the pool. Space separated application IDs
                                       with optional version in 'id[#version]' format.
    --auto-scale-formula             : A formula for the desired number of compute nodes in the
                                       pool. The formula is checked for validity before the pool is
                                       created. If the formula is not valid, the Batch service
                                       rejects the request with detailed error information. For more
                                       information about specifying this formula, see
                                       https://azure.microsoft.com/documentation/articles/batch-
                                       automatic-scaling/.
    --certificate-references         : The list of certificates to be installed on each compute node
                                       in the pool. For Windows compute nodes, the Batch service
                                       installs the certificates to the specified certificate store
                                       and location. For Linux compute nodes, the certificates are
                                       stored in a directory inside the task working directory and
                                       an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied
                                       to the task to query for this location. For certificates with
                                       visibility of 'remoteUser', a 'certs' directory is created in
                                       the user's home directory (e.g., /home/{user-name}/certs) and
                                       certificates are placed in that directory. Space separated
                                       certificate thumbprints.
    --enable-inter-node-communication: Whether the pool permits direct communication between nodes.
                                       Enabling inter-node communication limits the maximum size of
                                       the pool due to deployment restrictions on the nodes of the
                                       pool. This may result in the pool not reaching its desired
                                       size. The default value is false. True if flag present.
    --id                             : A string that uniquely identifies the pool within the
                                       account. The ID can contain any combination of alphanumeric
                                       characters including hyphens and underscores, and cannot
                                       contain more than 64 characters. The ID is case-preserving
                                       and case-insensitive (that is, you may not have two pool IDs
                                       within an account that differ only by case).
    --metadata                       : A list of name-value pairs associated with the pool as
                                       metadata. The Batch service does not assign any meaning to
                                       metadata; it is solely for the use of user code. Space
                                       separated values in 'key=value' format.
    --resize-timeout                 : The timeout for allocation of compute nodes to the pool. This
                                       timeout applies only to manual scaling; it has no effect when
                                       enableAutoScale is set to true. The default value is 15
                                       minutes. The minimum value is 5 minutes. If you specify a
                                       value less than 5 minutes, the Batch service returns an
                                       error; if you are calling the REST API directly, the HTTP
                                       status code is 400 (Bad Request). Expected format is an
                                       ISO-8601 duration.
    --target-dedicated-nodes         : The desired number of dedicated compute nodes in the pool.
                                       This property must not be specified if enableAutoScale is set
                                       to true. If enableAutoScale is set to false, then you must
                                       set either targetDedicatedNodes, targetLowPriorityNodes, or
                                       both.
    --target-low-priority-nodes      : The desired number of low-priority compute nodes in the pool.
                                       This property must not be specified if enableAutoScale is set
                                       to true. If enableAutoScale is set to false, then you must
                                       set either targetDedicatedNodes, targetLowPriorityNodes, or
                                       both.
    --vm-size                        : The size of virtual machines in the pool. All virtual
                                       machines in a pool are the same size. For information about
                                       available sizes of virtual machines for Cloud Services pools
                                       (pools created with cloudServiceConfiguration), see Sizes for
                                       Cloud Services
                                       (http://azure.microsoft.com/documentation/articles/cloud-
                                       services-sizes-specs/). Batch supports all Cloud Services VM
                                       sizes except ExtraSmall, A1V2 and A2V2. For information about
                                       available VM sizes for pools using images from the Virtual
                                       Machines Marketplace (pools created with
                                       virtualMachineConfiguration) see Sizes for Virtual Machines
                                       (Linux)
                                       (https://azure.microsoft.com/documentation/articles/virtual-
                                       machines-linux-sizes/) or Sizes for Virtual Machines
                                       (Windows)
                                       (https://azure.microsoft.com/documentation/articles/virtual-
                                       machines-windows-sizes/). Batch supports all Azure VM sizes
                                       except STANDARD_A0 and those with premium storage
                                       (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).

Pool: Cloud Service Configuration Arguments
    --os-family                      : The Azure Guest OS family to be installed on the virtual
                                       machines in the pool. Possible values are: 2 - OS Family 2,
                                       equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3,
                                       equivalent to Windows Server 2012. 4 - OS Family 4,
                                       equivalent to Windows Server 2012 R2. 5 - OS Family 5,
                                       equivalent to Windows Server 2016. For more information, see
                                       Azure Guest OS Releases
                                       (https://azure.microsoft.com/documentation/articles/cloud-
                                       services-guestos-update-matrix/#releases).  Allowed values:
                                       2, 3, 4, 5.

Pool: Start Task Arguments
    --start-task-command-line        : The command line of the start task. The command line does not
                                       run under a shell, and therefore cannot take advantage of
                                       shell features such as environment variable expansion. If you
                                       want to take advantage of such features, you should invoke
                                       the shell in the command line, for example using "cmd /c
                                       MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
    --start-task-resource-files      : A list of files that the Batch service will download to the
                                       compute node before running the command line. Space separated
                                       resource references in filename=blobsource format.
    --start-task-wait-for-success    : Whether the Batch service should wait for the start task to
                                       complete successfully (that is, to exit with exit code 0)
                                       before scheduling any tasks on the compute node. If true and
                                       the start task fails on a compute node, the Batch service
                                       retries the start task up to its maximum retry count
                                       (maxTaskRetryCount). If the task has still not completed
                                       successfully after all retries, then the Batch service marks
                                       the compute node unusable, and will not schedule tasks to it.
                                       This condition can be detected via the node state and
                                       scheduling error detail. If false, the Batch service will not
                                       wait for the start task to complete. In this case, other
                                       tasks can start executing on the compute node while the start
                                       task is still running; and even if the start task fails, new
                                       tasks will continue to be scheduled on the node. The default
                                       is false. True if flag present.

Pool: Virtual Machine Configuration Arguments
    --image                          : OS image URN in 'publisher:offer:sku[:version]' format.
                                       Version is optional and if omitted latest will be used.
            Values from 'az batch pool node-agent-skus list'.
            Example: 'MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:latest'.
    --node-agent-sku-id              : The SKU of the Batch node agent to be provisioned on compute
                                       nodes in the pool. The Batch node agent is a program that
                                       runs on each node in the pool, and provides the command-and-
                                       control interface between the node and the Batch service.
                                       There are different implementations of the node agent, known
                                       as SKUs, for different operating systems. You must specify a
                                       node agent SKU which matches the selected image reference. To
                                       get the list of supported node agent SKUs along with their
                                       list of verified image references, see the 'List supported
                                       node agent SKUs' operation.

Global Arguments
    --debug                          : Increase logging verbosity to show all debug logs.
    --help -h                        : Show this help message and exit.
    --output -o                      : Output format.  Allowed values: json, jsonc, table, tsv.
                                       Default: json.
    --query                          : JMESPath query string. See http://jmespath.org/ for more
                                       information and examples.
    --verbose                        : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch node list --help 

Command
    az batch node list: Lists the compute nodes in the specified pool.

Arguments
    --pool-id [Required]: The ID of the pool from which you want to list nodes.

Batch Account Arguments
    --account-endpoint  : Batch service endpoint. Alternatively, set by environment variable:
                          AZURE_BATCH_ENDPOINT.
    --account-key       : Batch account key. Alternatively, set by environment variable:
                          AZURE_BATCH_ACCESS_KEY.
    --account-name      : Batch account name. Alternatively, set by environment variable:
                          AZURE_BATCH_ACCOUNT.

Pre-condition and Query Arguments
    --filter            : An OData $filter clause..
    --select            : An OData $select clause.

Global Arguments
    --debug             : Increase logging verbosity to show all debug logs.
    --help -h           : Show this help message and exit.
    --output -o         : Output format.  Allowed values: json, jsonc, table, tsv.  Default: json.
    --query             : JMESPath query string. See http://jmespath.org/ for more information and
                          examples.
    --verbose           : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch node file download --help 

Command
    az batch node file download: Download the content of the specified node file.

Arguments
    --destination [Required]: The path to the destination file or directory.
    --file-path   [Required]: The path to the compute node file that you want to get the content of.
    --node-id     [Required]: The ID of the compute node that contains the file.
    --pool-id     [Required]: The ID of the pool that contains the compute node.

Batch Account Arguments
    --account-endpoint      : Batch service endpoint. Alternatively, set by environment variable:
                              AZURE_BATCH_ENDPOINT.
    --account-key           : Batch account key. Alternatively, set by environment variable:
                              AZURE_BATCH_ACCESS_KEY.
    --account-name          : Batch account name. Alternatively, set by environment variable:
                              AZURE_BATCH_ACCOUNT.

Pre-condition and Query Arguments
    --end-range             : The byte range to be retrieved. If not set the file will be retrieved
                              to the end.
    --if-modified-since     : A timestamp indicating the last modified time of the resource known to
                              the client. The operation will be performed only if the resource on
                              the service has been modified since the specified time.
    --if-unmodified-since   : A timestamp indicating the last modified time of the resource known to
                              the client. The operation will be performed only if the resource on
                              the service has not been modified since the specified time.
    --start-range           : The byte range to be retrieved. If not set the file will be retrieved
                              from the beginning.

Global Arguments
    --debug                 : Increase logging verbosity to show all debug logs.
    --help -h               : Show this help message and exit.
    --output -o             : Output format.  Allowed values: json, jsonc, table, tsv.  Default:
                              json.
    --query                 : JMESPath query string. See http://jmespath.org/ for more information
                              and examples.
    --verbose               : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch job create --help 

Command
    az batch job create: Add a job to the specified account.

Arguments
    --json-file                            : A file containing the job specification in JSON format.
                                             If this parameter is specified, all 'Job Arguments' are
                                             ignored.

Batch Account Arguments
    --account-endpoint                     : Batch service endpoint. Alternatively, set by
                                             environment variable: AZURE_BATCH_ENDPOINT.
    --account-key                          : Batch account key. Alternatively, set by environment
                                             variable: AZURE_BATCH_ACCESS_KEY.
    --account-name                         : Batch account name. Alternatively, set by environment
                                             variable: AZURE_BATCH_ACCOUNT.

Job Arguments
    --id                                   : A string that uniquely identifies the job within the
                                             account. The ID can contain any combination of
                                             alphanumeric characters including hyphens and
                                             underscores, and cannot contain more than 64
                                             characters. It is common to use a GUID for the id.
    --metadata                             : A list of name-value pairs associated with the job as
                                             metadata. The Batch service does not assign any meaning
                                             to metadata; it is solely for the use of user code.
                                             Space separated values in 'key=value' format.
    --priority                             : The priority of the job. Priority values can range from
                                             -1000 to 1000, with -1000 being the lowest priority and
                                             1000 being the highest priority. The default value is
                                             0.
    --uses-task-dependencies               : The flag that determines if this job will use tasks
                                             with dependencies. True if flag present.

Job: Constraints Arguments
    --job-max-task-retry-count             : The maximum number of times each task may be retried.
                                             The Batch service retries a task if its exit code is
                                             nonzero. Note that this value specifically controls the
                                             number of retries. The Batch service will try each task
                                             once, and may then retry up to this limit. For example,
                                             if the maximum retry count is 3, Batch tries a task up
                                             to 4 times (one initial try and 3 retries). If the
                                             maximum retry count is 0, the Batch service does not
                                             retry tasks. If the maximum retry count is -1, the
                                             Batch service retries tasks without limit. The default
                                             value is 0 (no retries).
    --job-max-wall-clock-time              : The maximum elapsed time that the job may run, measured
                                             from the time the job is created. If the job does not
                                             complete within the time limit, the Batch service
                                             terminates it and any tasks that are still running. In
                                             this case, the termination reason will be
                                             MaxWallClockTimeExpiry. If this property is not
                                             specified, there is no time limit on how long the job
                                             may run. Expected format is an ISO-8601 duration.

Job: Job Manager Task Arguments
    --job-manager-task-command-line        : The command line of the Job Manager task. The command
                                             line does not run under a shell, and therefore cannot
                                             take advantage of shell features such as environment
                                             variable expansion. If you want to take advantage of
                                             such features, you should invoke the shell in the
                                             command line, for example using "cmd /c MyCommand" in
                                             Windows or "/bin/sh -c MyCommand" in Linux.
    --job-manager-task-environment-settings: A list of environment variable settings for the Job
                                             Manager task. Space separated values in 'key=value'
                                             format.
    --job-manager-task-id                  : A string that uniquely identifies the Job Manager
                                             taskwithin the job. The id can contain any combination
                                             of alphanumeric characters including hyphens and
                                             underscores and cannot contain more than 64 characters.
    --job-manager-task-resource-files      : A list of files that the Batch service will download to
                                             the compute node before running the command line. Files
                                             listed under this element are located in the task's
                                             working directory. Space separated resource references
                                             in filename=blobsource format.

Job: Pool Info Arguments
    --pool-id                              : The id of an existing pool. All the tasks of the job
                                             will run on the specified pool.

Global Arguments
    --debug                                : Increase logging verbosity to show all debug logs.
    --help -h                              : Show this help message and exit.
    --output -o                            : Output format.  Allowed values: json, jsonc, table,
                                             tsv.  Default: json.
    --query                                : JMESPath query string. See http://jmespath.org/ for
                                             more information and examples.
    --verbose                              : Increase logging verbosity. Use --debug for full debug
                                             logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch job-schedule create --help 

Command
    az batch job-schedule create: Add a job schedule to the specified account.

Arguments
    --json-file                      : A file containing the cloud job schedule specification in
                                       JSON format. If this parameter is specified, all 'Cloud Job
                                       Schedule Arguments' are ignored.

Batch Account Arguments
    --account-endpoint               : Batch service endpoint. Alternatively, set by environment
                                       variable: AZURE_BATCH_ENDPOINT.
    --account-key                    : Batch account key. Alternatively, set by environment
                                       variable: AZURE_BATCH_ACCESS_KEY.
    --account-name                   : Batch account name. Alternatively, set by environment
                                       variable: AZURE_BATCH_ACCOUNT.

Cloud Job Schedule Arguments
    --id                             : A string that uniquely identifies the schedule within the
                                       account. The ID can contain any combination of alphanumeric
                                       characters including hyphens and underscores, and cannot
                                       contain more than 64 characters. The id is case-preserving
                                       and case-insensitive (that is, you may not have two ids
                                       within an account that differ only by case).
    --metadata                       : A list of name-value pairs associated with the schedule as
                                       metadata. The Batch service does not assign any meaning to
                                       metadata; it is solely for the use of user code. Space
                                       separated values in 'key=value' format.

Cloud Job Schedule: Job Specification Arguments
    --on-all-tasks-complete          : The action the Batch service should take when all tasks in a
                                       job created under this schedule are in the completed state.
                                       Note that if a job contains no tasks, then all tasks are
                                       considered complete. This option is therefore most commonly
                                       used with a Job Manager task; if you want to use automatic
                                       job termination without a Job Manager, you should initially
                                       set onAllTasksComplete to noAction and update the job
                                       properties to set onAllTasksComplete to terminateJob once you
                                       have finished adding tasks. The default is noAction.  Allowed
                                       values: noAction, terminateJob.
    --priority                       : The priority of jobs created under this schedule. Priority
                                       values can range from -1000 to 1000, with -1000 being the
                                       lowest priority and 1000 being the highest priority. The
                                       default value is 0. This priority is used as the default for
                                       all jobs under the job schedule. You can update a job's
                                       priority after it has been created using by using the update
                                       job API.
    --uses-task-dependencies         : The flag that determines if this job will use tasks with
                                       dependencies. True if flag present.

Cloud Job Schedule: Job Specification: Constraints Arguments
    --job-max-task-retry-count       : The maximum number of times each task may be retried. The
                                       Batch service retries a task if its exit code is nonzero.
                                       Note that this value specifically controls the number of
                                       retries. The Batch service will try each task once, and may
                                       then retry up to this limit. For example, if the maximum
                                       retry count is 3, Batch tries a task up to 4 times (one
                                       initial try and 3 retries). If the maximum retry count is 0,
                                       the Batch service does not retry tasks. If the maximum retry
                                       count is -1, the Batch service retries tasks without limit.
                                       The default value is 0 (no retries).
    --job-max-wall-clock-time        : The maximum elapsed time that the job may run, measured from
                                       the time the job is created. If the job does not complete
                                       within the time limit, the Batch service terminates it and
                                       any tasks that are still running. In this case, the
                                       termination reason will be MaxWallClockTimeExpiry. If this
                                       property is not specified, there is no time limit on how long
                                       the job may run. Expected format is an ISO-8601 duration.

Cloud Job Schedule: Job Specification: Job Manager Task Arguments
    --job-manager-task-command-line  : The command line of the Job Manager task. The command line
                                       does not run under a shell, and therefore cannot take
                                       advantage of shell features such as environment variable
                                       expansion. If you want to take advantage of such features,
                                       you should invoke the shell in the command line, for example
                                       using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand"
                                       in Linux.
    --job-manager-task-id            : A string that uniquely identifies the Job Manager taskwithin
                                       the job. The id can contain any combination of alphanumeric
                                       characters including hyphens and underscores and cannot
                                       contain more than 64 characters.
    --job-manager-task-resource-files: A list of files that the Batch service will download to the
                                       compute node before running the command line. Files listed
                                       under this element are located in the task's working
                                       directory. Space separated resource references in
                                       filename=blobsource format.

Cloud Job Schedule: Job Specification: Pool Info Arguments
    --pool-id                        : The id of an existing pool. All the tasks of the job will run
                                       on the specified pool.

Cloud Job Schedule: Schedule Arguments
    --do-not-run-after               : A time after which no job will be created under this job
                                       schedule. The schedule will move to the completed state as
                                       soon as this deadline is past and there is no active job
                                       under this job schedule. If you do not specify a
                                       doNotRunAfter time, and you are creating a recurring job
                                       schedule, the job schedule will remain active until you
                                       explicitly terminate it. Expected format is an ISO-8601
                                       timestamp.
    --do-not-run-until               : The earliest time at which any job may be created under this
                                       job schedule. If you do not specify a doNotRunUntil time, the
                                       schedule becomes ready to create jobs immediately. Expected
                                       format is an ISO-8601 timestamp.
    --recurrence-interval            : The time interval between the start times of two successive
                                       jobs under the job schedule. A job schedule can have at most
                                       one active job under it at any given time. Because a job
                                       schedule can have at most one active job under it at any
                                       given time, if it is time to create a new job under a job
                                       schedule, but the previous job is still running, the Batch
                                       service will not create the new job until the previous job
                                       finishes. If the previous job does not finish within the
                                       startWindow period of the new recurrenceInterval, then no new
                                       job will be scheduled for that interval. For recurring jobs,
                                       you should normally specify a jobManagerTask in the
                                       jobSpecification. If you do not use jobManagerTask, you will
                                       need an external process to monitor when jobs are created,
                                       add tasks to the jobs and terminate the jobs ready for the
                                       next recurrence. The default is that the schedule does not
                                       recur: one job is created, within the startWindow after the
                                       doNotRunUntil time, and the schedule is complete as soon as
                                       that job finishes. The minimum value is 1 minute. If you
                                       specify a lower value, the Batch service rejects the schedule
                                       with an error; if you are calling the REST API directly, the
                                       HTTP status code is 400 (Bad Request). Expected format is an
                                       ISO-8601 duration.
    --start-window                   : The time interval, starting from the time at which the
                                       schedule indicates a job should be created, within which a
                                       job must be created. If a job is not created within the
                                       startWindow interval, then the 'opportunity' is lost; no job
                                       will be created until the next recurrence of the schedule. If
                                       the schedule is recurring, and the startWindow is longer than
                                       the recurrence interval, then this is equivalent to an
                                       infinite startWindow, because the job that is 'due' in one
                                       recurrenceInterval is not carried forward into the next
                                       recurrence interval. The default is infinite. The minimum
                                       value is 1 minute. If you specify a lower value, the Batch
                                       service rejects the schedule with an error; if you are
                                       calling the REST API directly, the HTTP status code is 400
                                       (Bad Request). Expected format is an ISO-8601 duration.

Global Arguments
    --debug                          : Increase logging verbosity to show all debug logs.
    --help -h                        : Show this help message and exit.
    --output -o                      : Output format.  Allowed values: json, jsonc, table, tsv.
                                       Default: json.
    --query                          : JMESPath query string. See http://jmespath.org/ for more
                                       information and examples.
    --verbose                        : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch task create --help 

Command
    az batch task create: Create a single Batch task or multiple Batch tasks.

Arguments
    --job-id              [Required]: The ID of the job containing the task.
    --affinity-info                 : A locality hint that can be used by the Batch service to
                                      select a compute node on which to start the new task.
    --application-package-references: The space separated list of IDs specifying the application
                                      packages to be installed. Space separated application IDs with
                                      optional version in 'id[#version]' format.
    --command-line                  : The command line of the task. The command line does not run
                                      under a shell, and therefore cannot take advantage of shell
                                      features such as environment variable expansion. If you want
                                      to take advantage of such features, you should invoke the
                                      shell in the command line, for example using "cmd /c
                                      MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
    --environment-settings          : A list of environment variable settings for the task. Space
                                      separated values in 'key=value' format.
    --json-file                     : The file containing the task(s) to create in JSON format, if
                                      this parameter is specified, all other parameters are ignored.
    --max-task-retry-count          : The maximum number of times the task may be retried. The Batch
                                      service retries a task if its exit code is nonzero. Note that
                                      this value specifically controls the number of retries. The
                                      Batch service will try the task once, and may then retry up to
                                      this limit. For example, if the maximum retry count is 3,
                                      Batch tries the task up to 4 times (one initial try and 3
                                      retries). If the maximum retry count is 0, the Batch service
                                      does not retry the task. If the maximum retry count is -1, the
                                      Batch service retries the task without limit.
    --max-wall-clock-time           : The maximum elapsed time that the task may run, measured from
                                      the time the task starts. If the task does not complete within
                                      the time limit, the Batch service terminates it. If this is
                                      not specified, there is no time limit on how long the task may
                                      run.
    --resource-files                : A list of files that the Batch service will download to the
                                      compute node before running the command line. Space separated
                                      resource references in filename=blobsource format.
    --retention-time                : The minimum time to retain the task directory on the compute
                                      node where it ran, from the time it completes execution. After
                                      this time, the Batch service may delete the task directory and
                                      all its contents. The default is infinite, i.e. the task
                                      directory will be retained until the compute node is removed
                                      or reimaged.
    --task-id                       : The ID of the task.

Batch Account Arguments
    --account-endpoint              : Batch service endpoint. Alternatively, set by environment
                                      variable: AZURE_BATCH_ENDPOINT.
    --account-key                   : The Batch account key. Alternatively, set by environment
                                      variable: AZURE_BATCH_ACCESS_KEY.
    --account-name                  : The Batch account name. Alternatively, set by environment
                                      variable: AZURE_BATCH_ACCOUNT.

Global Arguments
    --debug                         : Increase logging verbosity to show all debug logs.
    --help -h                       : Show this help message and exit.
    --output -o                     : Output format.  Allowed values: json, jsonc, table, tsv.
                                      Default: json.
    --query                         : JMESPath query string. See http://jmespath.org/ for more
                                      information and examples.
    --verbose                       : Increase logging verbosity. Use --debug for full debug logs.

(env) C:\Code\Forks\azure-cli>cmd /c az batch task file delete --help 

Command
    az batch task file delete: Deletes the specified task file from the compute node where the task
    ran.

Arguments
    --file-path [Required]: The path to the task file that you want to delete.
    --job-id    [Required]: The ID of the job that contains the task.
    --task-id   [Required]: The ID of the task whose file you want to delete.
    --recursive           : Whether to delete children of a directory. If the filePath parameter
                            represents a directory instead of a file, you can set recursive to true
                            to delete the directory and all of the files and subdirectories in it.
                            If recursive is false then the directory must be empty or deletion will
                            fail.
    --yes -y              : Do not prompt for confirmation.

Batch Account Arguments
    --account-endpoint    : Batch service endpoint. Alternatively, set by environment variable:
                            AZURE_BATCH_ENDPOINT.
    --account-key         : Batch account key. Alternatively, set by environment variable:
                            AZURE_BATCH_ACCESS_KEY.
    --account-name        : Batch account name. Alternatively, set by environment variable:
                            AZURE_BATCH_ACCOUNT.

Global Arguments
    --debug               : Increase logging verbosity to show all debug logs.
    --help -h             : Show this help message and exit.
    --output -o           : Output format.  Allowed values: json, jsonc, table, tsv.  Default: json.
    --query               : JMESPath query string. See http://jmespath.org/ for more information and
                            examples.
    --verbose             : Increase logging verbosity. Use --debug for full debug logs.
