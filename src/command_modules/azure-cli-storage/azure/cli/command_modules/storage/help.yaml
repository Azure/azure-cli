version: 1
content:
- command:
    name: storage entity insert
    summary: Insert an entity into a table.
    arguments:
    - name: --table-name
      summary: The name of the table to insert the entity into.
    - name: --entity
      summary: Space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey.
      description: The PartitionKey and RowKey must be unique within the table, and may be up to 64Kb in size. If using an integer value as a key, convert it to a fixed-width string which can be canonically sorted. For example, convert the integer value 1 to the string value "0000001" to ensure proper sorting.
    - name: --if-exists
      summary: Behavior when an entity already exists for the specified PartitionKey and RowKey.
    - name: --timeout
      summary: The server timeout, expressed in seconds.
- command:
    name: storage blob upload
    summary: Upload a file to a storage blob.
    description: Creates a new blob from a file path, or updates the content of an existing blob with automatic chunking and progress notifications.
    arguments:
    - name: --type
      summary: Defaults to 'page' for *.vhd files, or 'block' otherwise.
    - name: --maxsize-condition
      summary: The max length in bytes permitted for an append blob.
    - name: --validate-content
      summary: Specifies that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived.
    - name: --tier
      summary: A page blob tier value to set the blob to. The tier correlates to the size of the blob and number of allowed IOPS. This is only applicable to page blobs on premium storage accounts.
    examples:
    - summary: Upload to a blob.
      command: az storage blob upload -f /path/to/file -c MyContainer -n MyBlob
- command:
    name: storage file upload
    summary: Upload a file to a share that uses the SMB 3.0 protocol.
    description: Creates or updates an Azure file from a source path with automatic chunking and progress notifications.
    examples:
    - summary: Upload to a local file to a share.
      command: az storage file upload -s MyShare --source /path/to/file
- command:
    name: storage blob show
    summary: Get the details of a blob.
    examples:
    - summary: Show all properties of a blob.
      command: az storage blob show -c MyContainer -n MyBlob
- command:
    name: storage blob delete
    summary: Mark a blob or snapshot for deletion.
    description: >
      The blob is marked for later deletion during garbage collection.  In order to delete a blob, all of its snapshots must also be deleted.
      Both can be removed at the same time.
    examples:
    - summary: Delete a blob.
      command: az storage blob delete -c MyContainer -n MyBlob
- command:
    name: storage account create
    summary: Create a storage account.
    description: >
      The SKU of the storage account defaults to 'Standard_RAGRS'.
    examples:
    - summary: Create a storage account 'MyStorageAccount' in resource group 'MyResourceGroup' in the West US region with locally redundant storage.
      command: az storage account create -n MyStorageAccount -g MyResourceGroup -l westus --sku Standard_LRS
      min_profile: latest
    - summary: Create a storage account 'MyStorageAccount' in resource group 'MyResourceGroup' in the West US region with locally redundant storage.
      command: az storage account create -n MyStorageAccount -g MyResourceGroup -l westus --account-type Standard_LRS
      max_profile: 2017-03-09-profile
- command:
    name: storage container create
    summary: Create a container in a storage account.
    examples:
    - summary: Create a storage container in a storage account.
      command: az storage container create -n MyStorageContainer
    - summary: Create a storage container in a storage account and return an error if the container already exists.
      command: az storage container create -n MyStorageContainer --fail-on-exist
- command:
    name: storage container delete
    summary: Marks the specified container for deletion.
    description: >
      The container and any blobs contained within it are later deleted during garbage collection.
- command:
    name: storage account list
    summary: List storage accounts.
    examples:
    - summary: List all storage accounts in a subscription.
      command: az storage account list
    - summary: List all storage accounts in a resource group.
      command: az storage account list -g MyResourceGroup
- command:
    name: storage account show
    summary: Show storage account properties.
    examples:
    - summary: Show properties for a storage account by resource ID.
      command: az storage account show --ids /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Storage/storageAccounts/{StorageAccount}
    - summary: Show properties for a storage account using an account name and resource group.
      command: az storage account show -g MyResourceGroup -n MyStorageAccount
- command:
    name: storage account show-usage
    summary: Show the current count and limit of the storage accounts under the subscription.
- command:
    name: storage account delete
    summary: Delete a storage account.
    examples:
    - summary: Delete a storage account using a resource ID.
      command: az storage account delete --ids /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Storage/storageAccounts/{StorageAccount}
    - summary: Delete a storage account using an account name and resource group.
      command: az storage account delete -n MyStorageAccount -g MyResourceGroup
- command:
    name: storage account show-connection-string
    summary: Get the connection string for a storage account.
    examples:
    - summary: Get a connection string for a storage account.
      command: az storage account show-connection-string -g MyResourceGroup -n MyStorageAccount
- group:
    name: storage
    summary: Manage Azure Cloud Storage resources.
- group:
    name: storage account
    summary: Manage storage accounts.
- command:
    name: storage account update
    summary: Update the properties of a storage account.
- group:
    name: storage account keys
    summary: Manage storage account keys.
- command:
    name: storage account keys list
    summary: List the primary and secondary keys for a storage account.
    examples:
    - summary: List the primary and secondary keys for a storage account.
      command: az storage account keys list -g MyResourceGroup -n MyStorageAccount
- group:
    name: storage blob
    summary: Manage object storage for unstructured data (blobs).
- command:
    name: storage blob exists
    summary: Check for the existence of a blob in a container.
    arguments:
    - name: --name
      summary: The blob name.
- command:
    name: storage blob list
    summary: List blobs in a given container.
    arguments:
    - name: --include
      summary: 'Specifies additional datasets to include: (c)opy-info, (m)etadata, (s)napshots, (d)eleted-soft. Can be combined.'
    examples:
    - summary: List all storage blobs in a container whose names start with 'foo'; will match names such as 'foo', 'foobar', and 'foo/bar'
      command: az storage blob list -c MyContainer --prefix foo
- group:
    name: storage blob copy
    summary: Manage blob copy operations. Use `az storage blob show` to check the status of the blobs.
- group:
    name: storage blob incremental-copy
    summary: Manage blob incremental copy operations.
- command:
    name: storage blob incremental-copy start
    summary: Copies an incremental copy of a blob asynchronously.
    description: This operation returns a copy operation properties object, including a copy ID you can use to check or abort the copy operation. The Blob service copies blobs on a best-effort basis. The source blob for an incremental copy operation must be a page blob. Call get_blob_properties on the destination blob to check the status of the copy operation. The final blob will be committed when the copy completes.
    examples:
    - summary: Upload all files that end with .py unless blob exists and has been modified since given date.
      command: az storage blob incremental-copy start --source-container MySourceContainer --source-blob MyBlob --source-account-name MySourceAccount --source-account-key MySourceKey --source-snapshot MySnapshot --destination-container MyDestinationContainer --destination-blob MyDestinationBlob
- group:
    name: storage blob lease
    summary: Manage storage blob leases.
- group:
    name: storage blob metadata
    summary: Manage blob metadata.
- group:
    name: storage blob service-properties
    summary: Manage storage blob service properties.
- command:
    name: storage blob service-properties update
    summary: Update storage blob service properties.
- group:
    name: storage blob service-properties delete-policy
    summary: Manage storage blob delete-policy service properties.
- command:
    name: storage blob service-properties delete-policy show
    summary: Show the storage blob delete-policy.
- command:
    name: storage blob service-properties delete-policy update
    summary: Update the storage blob delete-policy.
- command:
    name: storage blob set-tier
    summary: Set the block or page tiers on the blob.
    description: >
      For block blob this command only supports block blob on standard storage accounts.
      For page blob, this command only supports for page blobs on premium accounts.
    arguments:
    - name: --type
      summary: The blob type
    - name: --tier
      summary: The tier value to set the blob to.
    - name: --timeout
      summary: The timeout parameter is expressed in seconds. This method may make multiple calls to the Azure service and the timeout will apply to each call individually.
- command:
    name: storage blob upload-batch
    summary: Upload files from a local directory to a blob container.
    arguments:
    - name: --source
      summary: The directory where the files to be uploaded are located.
    - name: --destination
      summary: The blob container where the files will be uploaded.
      description: The destination can be the container URL or the container name. When the destination is the container URL, the storage account name will be parsed from the URL.
    - name: --pattern
      summary: The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'.
    - name: --dryrun
      summary: Show the summary of the operations to be taken instead of actually uploading the file(s).
    - name: --if-match
      summary: An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified.
    - name: --if-none-match
      summary: An ETag value, or the wildcard character (*).
      description: Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character (*) to perform the operation only if the resource does not exist, and fail the operation if it does exist.
    - name: --validate-content
      summary: Specifies that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived.
    - name: --type
      summary: Defaults to 'page' for *.vhd files, or 'block' otherwise. The setting will override blob types for every file.
    - name: --maxsize-condition
      summary: The max length in bytes permitted for an append blob.
    - name: --lease-id
      summary: Required if the blob has an active lease
    examples:
    - summary: Upload all files that end with .py unless blob exists and has been modified since given date.
      command: az storage blob upload-batch -d MyContainer --account-name MyStorageAccount -s directory_path --pattern *.py --if-unmodified-since 2018-08-27T20:51Z
- command:
    name: storage blob download-batch
    summary: Download blobs from a blob container recursively.
    arguments:
    - name: --source
      summary: The blob container from where the files will be downloaded.
      description: The source can be the container URL or the container name. When the source is the container URL, the storage account name will be parsed from the URL.
    - name: --destination
      summary: The existing destination folder for this download operation.
    - name: --pattern
      summary: The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'.
    - name: --dryrun
      summary: Show the summary of the operations to be taken instead of actually downloading the file(s).
    examples:
    - summary: Download all blobs that end with .py
      command: az storage blob download-batch -d . --pattern *.py -s MyContainer --account-name MyStorageAccount
- command:
    name: storage blob delete-batch
    summary: Delete blobs from a blob container recursively.
    arguments:
    - name: --source
      summary: The blob container from where the files will be deleted.
      description: The source can be the container URL or the container name. When the source is the container URL, the storage account name will be parsed from the URL.
    - name: --pattern
      summary: The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'.
    - name: --dryrun
      summary: Show the summary of the operations to be taken instead of actually deleting the file(s).
    - name: --if-match
      summary: An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified.
    - name: --if-none-match
      summary: An ETag value, or the wildcard character (*).
      description: Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character (*) to perform the operation only if the resource does not exist, and fail the operation if it does exist.
    examples:
    - summary: Delete all blobs ending with ".py" in a container that have not been modified for 10 days.
      command: |
        date=`date -d "10 days ago" '+%Y-%m-%dT%H:%MZ'`
        az storage blob delete-batch -s MyContainer --account-name MyStorageAccount --pattern *.py --if-unmodified-since $date
- command:
    name: storage blob copy start
    summary: Copies a blob asynchronously. Use `az storage blob show` to check the status of the blobs.
- command:
    name: storage blob copy start-batch
    summary: Copy multiple blobs or files to a blob container. Use `az storage blob show` to check the status of the blobs.
    arguments:
    - name: --destination-container
      summary: The blob container where the selected source files or blobs will be copied to.
    - name: --pattern
      summary: The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq', and '[!seq]'.
    - name: --dryrun
      summary: List the files or blobs to be uploaded. No actual data transfer will occur.
    - name: --source-account-name
      summary: The source storage account from which the files or blobs are copied to the destination. If omitted, the source account is used.
    - name: --source-account-key
      summary: The account key for the source storage account.
    - name: --source-container
      summary: The source container from which blobs are copied.
    - name: --source-share
      summary: The source share from which files are copied.
    - name: --source-uri
      summary: A URI specifying a file share or blob container from which the files or blobs are copied.
      description: If the source is in another account, the source must either be public or be authenticated by using a shared access signature.
    - name: --source-sas
      summary: The shared access signature for the source storage account.
- group:
    name: storage container
    summary: Manage blob storage containers.
- command:
    name: storage container exists
    summary: Check for the existence of a storage container.
- command:
    name: storage container list
    summary: List containers in a storage account.
- group:
    name: storage container lease
    summary: Manage blob storage container leases.
- group:
    name: storage container metadata
    summary: Manage container metadata.
- group:
    name: storage container policy
    summary: Manage container stored access policies.
- group:
    name: storage container immutability-policy
    summary: Manage container immutability policies.
- group:
    name: storage container legal-hold
    summary: Manage container legal holds.
- command:
    name: storage container legal-hold show
    summary: Get the legal hold properties of a container.
- group:
    name: storage cors
    summary: Manage storage service Cross-Origin Resource Sharing (CORS).
- command:
    name: storage cors add
    summary: Add a CORS rule to a storage account.
    arguments:
    - name: --services
      summary: >
        The storage service(s) to add rules to. Allowed options are: (b)lob, (f)ile,
        (q)ueue, (t)able. Can be combined.
    - name: --max-age
      summary: The maximum number of seconds the client/browser should cache a preflight response.
    - name: --origins
      summary: Space-separated list of origin domains that will be allowed via CORS, or '*' to allow all domains.
    - name: --methods
      summary: Space-separated list of HTTP methods allowed to be executed by the origin.
    - name: --allowed-headers
      summary: Space-separated list of response headers allowed to be part of the cross-origin request.
    - name: --exposed-headers
      summary: Space-separated list of response headers to expose to CORS clients.
- command:
    name: storage cors clear
    summary: Remove all CORS rules from a storage account.
    arguments:
    - name: --services
      summary: >
        The storage service(s) to remove rules from. Allowed options are: (b)lob, (f)ile,
        (q)ueue, (t)able. Can be combined.
- command:
    name: storage cors list
    summary: List all CORS rules for a storage account.
    arguments:
    - name: --services
      summary: >
        The storage service(s) to list rules for. Allowed options are: (b)lob, (f)ile,
        (q)ueue, (t)able. Can be combined.
- group:
    name: storage directory
    summary: Manage file storage directories.
- command:
    name: storage directory exists
    summary: Check for the existence of a storage directory.
- group:
    name: storage directory metadata
    summary: Manage file storage directory metadata.
- command:
    name: storage directory list
    summary: List directories in a share.
- group:
    name: storage entity
    summary: Manage table storage entities.
- command:
    name: storage entity query
    summary: List entities which satisfy a query.
    arguments:
    - name: --marker
      summary: Space-separated list of key=value pairs. Must contain a nextpartitionkey and a nextrowkey.
      description: This value can be retrieved from the next_marker field of a previous generator object if max_results was specified and that generator has finished enumerating results. If specified, this generator will begin returning results from the point where the previous generator stopped.
- group:
    name: storage file
    summary: Manage file shares that use the SMB 3.0 protocol.
- command:
    name: storage file exists
    summary: Check for the existence of a file.
- command:
    name: storage file list
    summary: List files and directories in a share.
    arguments:
    - name: --exclude-dir
      summary: List only files in the given share.
- group:
    name: storage file copy
    summary: Manage file copy operations.
- group:
    name: storage file metadata
    summary: Manage file metadata.
- command:
    name: storage file upload-batch
    summary: Upload files from a local directory to an Azure Storage File Share in a batch operation.
    arguments:
    - name: --source
      summary: The directory to upload files from.
    - name: --destination
      summary: The destination of the upload operation.
      description: The destination can be the file share URL or the share name. When the destination is the share URL, the storage account name is parsed from the URL.
    - name: --destination-path
      summary: The directory where the source data is copied to. If omitted, data is copied to the root directory.
    - name: --pattern
      summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq', and '[!seq]'.
    - name: --dryrun
      summary: List the files and blobs to be uploaded. No actual data transfer will occur.
    - name: --max-connections
      summary: The maximum number of parallel connections to use. Default value is 1.
    - name: --validate-content
      summary: If set, calculates an MD5 hash for each range of the file for validation.
      description: >
        The storage service checks the hash of the content that has arrived is identical to the hash that was sent.
        This is mostly valuable for detecting bitflips during transfer if using HTTP instead of HTTPS. This hash is not stored.
- command:
    name: storage file download-batch
    summary: Download files from an Azure Storage File Share to a local directory in a batch operation.
    arguments:
    - name: --source
      summary: The source of the file download operation. The source can be the file share URL or the share name.
    - name: --destination
      summary: The local directory where the files are downloaded to. This directory must already exist.
    - name: --pattern
      summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'.
    - name: --dryrun
      summary: List the files and blobs to be downloaded. No actual data transfer will occur.
    - name: --max-connections
      summary: The maximum number of parallel connections to use. Default value is 1.
    - name: --validate-content
      summary: If set, calculates an MD5 hash for each range of the file for validation.
      description: >
        The storage service checks the hash of the content that has arrived is identical to the hash that was sent.
        This is mostly valuable for detecting bitflips during transfer if using HTTP instead of HTTPS. This hash is not stored.
- command:
    name: storage file delete-batch
    summary: Delete files from an Azure Storage File Share.
    arguments:
    - name: --source
      summary: The source of the file delete operation. The source can be the file share URL or the share name.
    - name: --pattern
      summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'.
    - name: --dryrun
      summary: List the files and blobs to be deleted. No actual data deletion will occur.
- command:
    name: storage file copy start-batch
    summary: Copy multiple files or blobs to a file share.
    arguments:
    - name: --destination-share
      summary: The file share where the source data is copied to.
    - name: --destination-path
      summary: The directory where the source data is copied to. If omitted, data is copied to the root directory.
    - name: --pattern
      summary: The pattern used for globbing files and blobs. The supported patterns are '*', '?', '[seq', and '[!seq]'.
    - name: --dryrun
      summary: List the files and blobs to be copied. No actual data transfer will occur.
    - name: --source-account-name
      summary: The source storage account to copy the data from. If omitted, the destination account is used.
    - name: --source-account-key
      summary: The account key for the source storage account. If omitted, the active login is used to determine the account key.
    - name: --source-container
      summary: The source container blobs are copied from.
    - name: --source-share
      summary: The source share files are copied from.
    - name: --source-uri
      summary: A URI that specifies a the source file share or blob container.
      description: If the source is in another account, the source must either be public or authenticated via a shared access signature.
    - name: --source-sas
      summary: The shared access signature for the source storage account.
- group:
    name: storage logging
    summary: Manage storage service logging information.
- command:
    name: storage logging show
    summary: Show logging settings for a storage account.
    arguments:
    - name: --services
      summary: 'The storage services from which to retrieve logging info: (b)lob (q)ueue (t)able. Can be combined.'
- command:
    name: storage logging update
    summary: Update logging settings for a storage account.
    arguments:
    - name: --services
      summary: 'The storage service(s) for which to update logging info: (b)lob (q)ueue (t)able. Can be combined.'
    - name: --log
      summary: 'The operations for which to enable logging: (r)ead (w)rite (d)elete. Can be combined.'
    - name: --retention
      summary: Number of days for which to retain logs. 0 to disable.
    - name: --version
      summary: Version of the logging schema.
- group:
    name: storage message
    summary: Manage queue storage messages.
- group:
    name: storage metrics
    summary: Manage storage service metrics.
- command:
    name: storage metrics show
    summary: Show metrics settings for a storage account.
    arguments:
    - name: --services
      summary: 'The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined.'
    - name: --interval
      summary: Filter the set of metrics to retrieve by time interval
- command:
    name: storage metrics update
    summary: Update metrics settings for a storage account.
    arguments:
    - name: --services
      summary: 'The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined.'
    - name: --hour
      summary: Update the hourly metrics
    - name: --minute
      summary: Update the by-minute metrics
    - name: --api
      summary: Specify whether to include API in metrics. Applies to both hour and minute metrics if both are specified. Must be specified if hour or minute metrics are enabled and being updated.
    - name: --retention
      summary: Number of days for which to retain metrics. 0 to disable. Applies to both hour and minute metrics if both are specified.
- group:
    name: storage queue
    summary: Manage storage queues.
- command:
    name: storage queue list
    summary: List queues in a storage account.
- group:
    name: storage queue metadata
    summary: Manage the metadata for a storage queue.
- group:
    name: storage queue policy
    summary: Manage shared access policies for a storage queue.
- group:
    name: storage share
    summary: Manage file shares.
- command:
    name: storage share url
    summary: Create a URI to access a file share.
- command:
    name: storage share exists
    summary: Check for the existence of a file share.
- command:
    name: storage share list
    summary: List the file shares in a storage account.
- group:
    name: storage share metadata
    summary: Manage the metadata of a file share.
- group:
    name: storage share policy
    summary: Manage shared access policies of a storage file share.
- command:
    name: storage share create
    summary: Creates a new share under the specified account.
- group:
    name: storage table
    summary: Manage NoSQL key-value storage.
- command:
    name: storage table list
    summary: List tables in a storage account.
- group:
    name: storage table policy
    summary: Manage shared access policies of a storage table.
- group:
    name: storage account network-rule
    summary: Manage network rules.
- command:
    name: storage account network-rule add
    summary: Add a network rule.
    description: >
      Rules can be created for an IPv4 address, address range (CIDR format), or a virtual network subnet.
    examples:
    - summary: Create a rule to allow a specific address-range.
      command: az storage account network-rule add -g myRg --account-name mystorageaccount --ip-address 23.45.1.0/24
    - summary: Create a rule to allow access for a subnet.
      command: az storage account network-rule add -g myRg --account-name mystorageaccount --vnet myvnet --subnet mysubnet
- command:
    name: storage account network-rule list
    summary: List network rules.
- command:
    name: storage account network-rule remove
    summary: Remove a network rule.
- command:
    name: storage account generate-sas
    arguments:
    - name: --services
      summary: 'The storage services the SAS is applicable for. Allowed values: (b)lob (f)ile (q)ueue (t)able. Can be combined.'
    - name: --resource-types
      summary: 'The resource types the SAS is applicable for. Allowed values: (s)ervice (c)ontainer (o)bject. Can be combined.'
    - name: --expiry
      summary: Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid.
    - name: --start
      summary: Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Defaults to the time of the request.
    - name: --account-name
      summary: 'Storage account name. Must be used in conjunction with either storage account key or a SAS token. Environment Variable: AZURE_STORAGE_ACCOUNT'
    examples:
    - summary: Generate a sas token for the account that is valid for queue and table services on Linux.
      command: |
        end=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        az storage account generate-sas --permissions cdlruwap --account-name MyStorageAccount --services qt --resource-types sco --expiry $end -otsv
    - summary: Generate a sas token for the account that is valid for queue and table services on MacOS.
      command: |
        end=`date -v+30M '+%Y-%m-%dT%H:%MZ'`
        az storage account generate-sas --permissions cdlruwap --account-name MyStorageAccount --services qt --resource-types sco --expiry $end -otsv
- command:
    name: storage container generate-sas
    examples:
    - summary: Generate a sas token for blob container and use it to upload a blob.
      command: |
        end=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        sas=`az storage container generate-sas -n MyContainer --account-name MyStorageAccount --https-only --permissions dlrw --expiry $end -otsv`
        az storage blob upload -n MyBlob -c MyContainer --account-name MyStorageAccount -f file.txt --sas-token $sas
- command:
    name: storage blob generate-sas
    examples:
    - summary: Generate a sas token for a blob with read-only permissions.
      command: |
        end=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        az storage blob generate-sas --account-name MyStorageAccount -c MyContainer -n MyBlob --permissions r --expiry $end --https-only
- command:
    name: storage share generate-sas
    examples:
    - summary: Generate a sas token for a fileshare and use it to upload a file.
      command: |
        end=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        sas=`az storage share generate-sas -n MyShare --account-name MyStorageAccount --https-only --permissions dlrw --expiry $end -otsv`
        az storage file upload -s MyShare --account-name MyStorageAccount --source file.txt  --sas-token $sas
- command:
    name: storage file generate-sas
    examples:
    - summary: Generate a sas token for a file.
      command: |
        end=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
        az storage file generate-sas -p path/file.txt -s MyShare --account-name MyStorageAccount --permissions rcdw --https-only --expiry $end
- command:
    name: storage blob url
    summary: Create the url to access a blob.
- command:
    name: storage file url
    summary: Create the url to access a file.
