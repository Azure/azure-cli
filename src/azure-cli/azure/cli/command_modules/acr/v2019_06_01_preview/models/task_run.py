# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class TaskRun(Resource):
    """The task run that has the ARM resource and properties.
    The task run will have the information of request and result of a run.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource ID.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource.
    :vartype type: str
    :param location: Required. The location of the resource. This cannot be
     changed after the resource is created.
    :type location: str
    :param tags: The tags of the resource.
    :type tags: dict[str, str]
    :param identity: Identity for the resource.
    :type identity:
     ~azure.mgmt.containerregistry.v2019_06_01_preview.models.IdentityProperties
    :ivar provisioning_state: The provisioning state of this task run.
     Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded',
     'Failed', 'Canceled'
    :vartype provisioning_state: str or
     ~azure.mgmt.containerregistry.v2019_06_01_preview.models.ProvisioningState
    :param run_request: The request (parameters) for the run
    :type run_request:
     ~azure.mgmt.containerregistry.v2019_06_01_preview.models.RunRequest
    :ivar run_result: The result of this task run
    :vartype run_result:
     ~azure.mgmt.containerregistry.v2019_06_01_preview.models.Run
    :param force_update_tag: How the run should be forced to rerun even if the
     run request configuration has not changed
    :type force_update_tag: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'provisioning_state': {'readonly': True},
        'run_result': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'identity': {'key': 'identity', 'type': 'IdentityProperties'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'run_request': {'key': 'properties.runRequest', 'type': 'RunRequest'},
        'run_result': {'key': 'properties.runResult', 'type': 'Run'},
        'force_update_tag': {'key': 'properties.forceUpdateTag', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(TaskRun, self).__init__(**kwargs)
        self.identity = kwargs.get('identity', None)
        self.provisioning_state = None
        self.run_request = kwargs.get('run_request', None)
        self.run_result = None
        self.force_update_tag = kwargs.get('force_update_tag', None)
