#pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DeploymentLb(Model):
    """
    Deployment operation parameters.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar uri: URI referencing the template. Default value:
     "https://azuresdkci.blob.core.windows.net/templatehost/CreateLb_2016-06-20/azuredeploy.json"
     .
    :vartype uri: str
    :param content_version: If included it must match the ContentVersion in
     the template.
    :type content_version: str
    :ivar _artifacts_location: Container URI of of the template. Default
     value:
     "https://azuresdkci.blob.core.windows.net/templatehost/CreateLb_2016-06-20"
     .
    :vartype _artifacts_location: str
    :param backend_pool_name: Name of load balancer backend pool.
    :type backend_pool_name: str
    :param dns_name_for_public_ip: Globally unique DNS Name for the Public IP
     used to access the Virtual Machine.  Requires a new public IP to be
     created by setting Public IP Address Type to New.
    :type dns_name_for_public_ip: str
    :param dns_name_type: Associate VMs with a public IP address to a DNS
     name. Possible values include: 'none', 'new'. Default value: "none" .
    :type dns_name_type: str
    :param load_balancer_name: Name for load balancer.
    :type load_balancer_name: str
    :param location: Location for load balancer resource.
    :type location: str
    :param private_ip_address: Static private IP address to use.
    :type private_ip_address: str
    :param private_ip_address_allocation: Private IP address allocation
     method. Possible values include: 'dynamic', 'static'. Default value:
     "dynamic" .
    :type private_ip_address_allocation: str
    :param public_ip_address_allocation: Public IP address allocation method.
     Possible values include: 'dynamic', 'static'. Default value: "dynamic" .
    :type public_ip_address_allocation: str
    :param public_ip_address_name: Name of public IP address to use.
    :type public_ip_address_name: str
    :param public_ip_address_type: Type of Public IP Address to associate
     with the load balancer. Possible values include: 'none', 'new',
     'existing'. Default value: "new" .
    :type public_ip_address_type: str
    :param subnet_name: If Public IP address is turned off, this is the
     subnet to associate with the load balancer.
    :type subnet_name: str
    :param virtual_network_name: If Public IP address is turned off, this is
     the VNET to associate with the load balancer.
    :type virtual_network_name: str
    :ivar mode: Gets or sets the deployment mode. Default value:
     "Incremental" .
    :vartype mode: str
    """ 

    _validation = {
        'uri': {'required': True, 'constant': True},
        '_artifacts_location': {'required': True, 'constant': True},
        'load_balancer_name': {'required': True},
        'mode': {'required': True, 'constant': True},
    }

    _attribute_map = {
        'uri': {'key': 'properties.templateLink.uri', 'type': 'str'},
        'content_version': {'key': 'properties.templateLink.contentVersion', 'type': 'str'},
        '_artifacts_location': {'key': 'properties.parameters._artifactsLocation.value', 'type': 'str'},
        'backend_pool_name': {'key': 'properties.parameters.backendPoolName.value', 'type': 'str'},
        'dns_name_for_public_ip': {'key': 'properties.parameters.dnsNameForPublicIP.value', 'type': 'str'},
        'dns_name_type': {'key': 'properties.parameters.dnsNameType.value', 'type': 'str'},
        'load_balancer_name': {'key': 'properties.parameters.loadBalancerName.value', 'type': 'str'},
        'location': {'key': 'properties.parameters.location.value', 'type': 'str'},
        'private_ip_address': {'key': 'properties.parameters.privateIpAddress.value', 'type': 'str'},
        'private_ip_address_allocation': {'key': 'properties.parameters.privateIpAddressAllocation.value', 'type': 'str'},
        'public_ip_address_allocation': {'key': 'properties.parameters.publicIpAddressAllocation.value', 'type': 'str'},
        'public_ip_address_name': {'key': 'properties.parameters.publicIpAddressName.value', 'type': 'str'},
        'public_ip_address_type': {'key': 'properties.parameters.publicIpAddressType.value', 'type': 'str'},
        'subnet_name': {'key': 'properties.parameters.subnetName.value', 'type': 'str'},
        'virtual_network_name': {'key': 'properties.parameters.virtualNetworkName.value', 'type': 'str'},
        'mode': {'key': 'properties.mode', 'type': 'str'},
    }

    uri = "https://azuresdkci.blob.core.windows.net/templatehost/CreateLb_2016-06-20/azuredeploy.json"

    _artifacts_location = "https://azuresdkci.blob.core.windows.net/templatehost/CreateLb_2016-06-20"

    mode = "Incremental"

    def __init__(self, load_balancer_name, content_version=None, backend_pool_name=None, dns_name_for_public_ip=None, dns_name_type="none", location=None, private_ip_address=None, private_ip_address_allocation="dynamic", public_ip_address_allocation="dynamic", public_ip_address_name=None, public_ip_address_type="new", subnet_name=None, virtual_network_name=None):
        self.content_version = content_version
        self.backend_pool_name = backend_pool_name
        self.dns_name_for_public_ip = dns_name_for_public_ip
        self.dns_name_type = dns_name_type
        self.load_balancer_name = load_balancer_name
        self.location = location
        self.private_ip_address = private_ip_address
        self.private_ip_address_allocation = private_ip_address_allocation
        self.public_ip_address_allocation = public_ip_address_allocation
        self.public_ip_address_name = public_ip_address_name
        self.public_ip_address_type = public_ip_address_type
        self.subnet_name = subnet_name
        self.virtual_network_name = virtual_network_name
