# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MetricDefinition(Model):
    """
    Metric definition class specifies the metadata for a metric.

    :param resource_id: Gets or sets the resource identifier of the resource
     that has emitted the metric.
    :type resource_id: str
    :param name: Gets or sets the name and the display name of the metric.
    :type name: :class:`LocalizableString <insights.models.LocalizableString>`
    :param unit: Gets or sets the unit of the metric. Possible values
     include: 'Count', 'Bytes', 'Seconds', 'CountPerSecond',
     'BytesPerSecond', 'Percent', 'MilliSeconds'
    :type unit: str or :class:`Unit <insightsclient.models.Unit>`
    :param primary_aggregation_type: Gets or sets the primary aggregation
     type value defining how to use the values for display. Possible values
     include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
    :type primary_aggregation_type: str or :class:`AggregationType
     <insightsclient.models.AggregationType>`
    :param metric_availabilities: Gets or sets the collection of what
     aggregation intervals are available to be queried.
    :type metric_availabilities: list of :class:`MetricAvailability
     <insights.models.MetricAvailability>`
    :param id: Gets or sets the resource identifier of the metric definition.
    :type id: str
    """ 

    _attribute_map = {
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'name': {'key': 'name', 'type': 'LocalizableString'},
        'unit': {'key': 'unit', 'type': 'Unit'},
        'primary_aggregation_type': {'key': 'primaryAggregationType', 'type': 'AggregationType'},
        'metric_availabilities': {'key': 'metricAvailabilities', 'type': '[MetricAvailability]'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(self, resource_id=None, name=None, unit=None, primary_aggregation_type=None, metric_availabilities=None, id=None):
        self.resource_id = resource_id
        self.name = name
        self.unit = unit
        self.primary_aggregation_type = primary_aggregation_type
        self.metric_availabilities = metric_availabilities
        self.id = id
