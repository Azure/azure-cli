# coding=utf-8
# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

# pylint: disable=unused-import
# pylint: disable=line-too-long, too-many-lines
aladdin_helps = {}

aladdin_helps['acr credential renew'] = """
type: command
short-summary: Regenerate login credentials for an Azure Container Registry.
examples:
  - name: Regenerate login credentials for an Azure Container Registry. (autogenerated)
    text: az acr credential renew --name MyRegistry --password-name password --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acr encryption show'] = """
type: command
short-summary: Show the container registry's encryption details
long-summary: For more information, see http://aka.ms/acr/cmk
examples:
  - name: Show the container registry's encryption details. (autogenerated)
    text: az acr encryption show --name MyContainerRegistry
    crafted: true
"""

aladdin_helps['acr identity show'] = """
type: command
short-summary: Show the container registry's identity details
examples:
  - name: Show the container registry's identity details. (autogenerated)
    text: az acr identity show --name MyContainerRegistry
    crafted: true
"""

aladdin_helps['acr private-endpoint-connection list'] = """
type: command
short-summary: List all private endpoint connections to a container registry
long-summary: To create a private endpoint connection use "az network private-endpoint create". For more information see https://aka.ms/acr/private-link
examples:
  - name: List all private endpoint connections to a container registry (autogenerated)
    text: az acr private-endpoint-connection list --registry-name MyRegistry
    crafted: true
"""

aladdin_helps['acr private-link-resource list'] = """
type: command
short-summary: list the private link resources supported for a registry
examples:
  - name: list the private link resources supported for a registry. (autogenerated)
    text: az acr private-link-resource list --name MyContainerRegistry
    crafted: true
"""

aladdin_helps['acr replication create'] = """
type: command
short-summary: Create a replicated region for an Azure Container Registry.
examples:
  - name: Create a replicated region for an Azure Container Registry. (autogenerated)
    text: az acr replication create --location westus --registry MyRegistry --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acr replication update'] = """
type: command
short-summary: Updates a replication.
examples:
  - name: Updates a replication. (autogenerated)
    text: az acr replication update --name MyReplication --registry MyRegistry --resource-group MyResourceGroup --tags key1=value1 key2=value2
    crafted: true
"""

aladdin_helps['acr show'] = """
type: command
short-summary: Get the details of an Azure Container Registry.
examples:
  - name: Get the details of an Azure Container Registry
    text: az acr show --name MyRegistry --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acr show-endpoints'] = """
type: command
short-summary: Display registry endpoints
examples:
  - name: Display registry endpoints. (autogenerated)
    text: az acr show-endpoints --name MyContainerRegistry
    crafted: true
"""

aladdin_helps['acr task credential list'] = """
type: command
short-summary: List all the custom registry credentials for task.
examples:
  - name: List all the custom registry credentials for task. (autogenerated)
    text: az acr task credential list --name taskname --registry registryname --subscription MySubscription
    crafted: true
"""

aladdin_helps['acr task credential remove'] = """
type: command
short-summary: Remove credential for a task.
examples:
  - name: Remove credential for a task. (autogenerated)
    text: az acr task credential remove --login-server myregistry.docker.io --name taskname --registry registryname --subscription MySubscription
    crafted: true
"""

aladdin_helps['acr task credential update'] = """
type: command
short-summary: Update the registry login credential for a task.
examples:
  - name: Update the registry login credential for a task. (autogenerated)
    text: az acr task credential update --login-server myregistry.docker.io --name taskname --password mysecret --registry registryname --subscription MySubscription --use-identity 00000000-0000-0000-0000-000000000000 --username myusername2
    crafted: true
"""

aladdin_helps['acr task update'] = """
type: command
short-summary: Update a task for an Azure Container Registry.
examples:
  - name: Update a task for an Azure Container Registry. (autogenerated)
    text: |
        az acr task update --image MyImage --name MyTask --registry MyRegistry \\
            --context https://github.com/Azure-Samples/acr-build-helloworld-node.git
    crafted: true
  - name: Update a task for an Azure Container Registry. (autogenerated)
    text: az acr task update --base-image-trigger-enabled true --name MyTask --registry MyRegistry
    crafted: true
"""

aladdin_helps['acr taskrun show'] = """
type: command
short-summary: Get the properties of a named taskrun for an Azure Container Registry.
examples:
  - name: Get the properties of a named taskrun for an Azure Container Registry (autogenerated)
    text: az acr taskrun show --name MyTaskRun --registry MyRegistry --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acr token show'] = """
type: command
short-summary: Show details and attributes of a token for an Azure Container Registry.
examples:
  - name: Show details and attributes of a token for an Azure Container Registry. (autogenerated)
    text: az acr token show --name MyToken --registry MyRegistry --subscription MySubscription
    crafted: true
"""

aladdin_helps['acs browse'] = """
type: command
short-summary: Show the dashboard for a service container's orchestrator in a web browser.
examples:
  - name: Show the dashboard for a service container's orchestrator in a web browser. (autogenerated)
    text: az acs browse --name MyContainerService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acs delete'] = """
type: command
short-summary: Delete a container service.
examples:
  - name: Delete a container service. (autogenerated)
    text: az acs delete --name MyContainerService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acs kubernetes get-credentials'] = """
type: command
short-summary: Download and install credentials to access a cluster.  This command requires the same private-key used to create the cluster.
parameters:
  - name: --output -o
    type: string
    long-summary: Credentials are always in YAML format, so this argument is effectively ignored.
examples:
  - name: Download and install credentials to access a cluster.  This command requires the same private-key used to create the cluster. (autogenerated)
    text: az acs kubernetes get-credentials --name MyContainerService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acs scale'] = """
type: command
short-summary: Change the private agent count of a container service.
parameters:
  - name: --new-agent-count
    type: int
    short-summary: The number of agents for the container service.
examples:
  - name: Change the private agent count of a container service. (autogenerated)
    text: az acs scale --name MyContainerService --new-agent-count 10 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['acs show'] = """
type: command
short-summary: Show the details for a container service.
examples:
  - name: Show the details for a container service. (autogenerated)
    text: az acs show --name MyContainerService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks browse'] = """
type: command
short-summary: Show the dashboard for a Kubernetes cluster in a web browser.
parameters:
  - name: --disable-browser
    type: bool
    short-summary: Don't launch a web browser after establishing port-forwarding.
    long-summary: Add this argument when launching a web browser manually, or for automated testing.
  - name: --listen-port
    short-summary: The listening port for the dashboard.
    long-summary: Add this argument when the default listening port is used by another process or unavailable.
  - name: --listen-address
    short-summary: The listening address for the dashboard.
    long-summary: Add this argument to listen on a specific IP address.
examples:
  - name: Show the dashboard for a Kubernetes cluster in a web browser. (autogenerated)
    text: az aks browse --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks delete'] = """
type: command
short-summary: Delete a managed Kubernetes cluster.
examples:
  - name: Delete a managed Kubernetes cluster. (autogenerated)
    text: az aks delete --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks disable-addons'] = """
type: command
short-summary: Disable Kubernetes addons.
parameters:
  - name: --addons -a
    type: string
    short-summary: Disable the Kubernetes addons in a comma-separated list.
examples:
  - name: Disable Kubernetes addons. (autogenerated)
    text: az aks disable-addons --addons virtual-node --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks enable-addons'] = """
type: command
short-summary: Enable Kubernetes addons.
long-summary: |-
    These addons are available:
        http_application_routing - configure ingress with automatic public DNS name creation.
        monitoring - turn on Log Analytics monitoring. Requires "--workspace-resource-id".
                     If monitoring addon is enabled --no-wait argument will have no effect
        virtual-node - enable AKS Virtual Node (PREVIEW). Requires --subnet-name to provide the name of an existing subnet for the Virtual Node to use.
parameters:
  - name: --addons -a
    type: string
    short-summary: Enable the Kubernetes addons in a comma-separated list.
  - name: --workspace-resource-id
    type: string
    short-summary: The resource ID of an existing Log Analytics Workspace to use for storing monitoring data.
examples:
  - name: Enable Kubernetes addons. (autogenerated)
    text: az aks enable-addons --addons virtual-node --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks get-credentials'] = """
type: command
short-summary: Get access credentials for a managed Kubernetes cluster.
parameters:
  - name: --admin -a
    type: bool
    short-summary: "Get cluster administrator credentials.  Default: cluster user credentials."
  - name: --file -f
    type: string
    short-summary: Kubernetes configuration file to update. Use "-" to print YAML to stdout instead.
  - name: --overwrite-existing
    type: bool
    short-summary: Overwrite any existing cluster entry with the same name.
  - name: --output -o
    type: string
    long-summary: Credentials are always in YAML format, so this argument is effectively ignored.
examples:
  - name: Get access credentials for a managed Kubernetes cluster. (autogenerated)
    text: az aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks get-upgrades'] = """
type: command
short-summary: Get the upgrade versions available for a managed Kubernetes cluster.
examples:
  - name: Get the upgrade versions available for a managed Kubernetes cluster
    text: az aks get-upgrades --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks get-versions'] = """
type: command
short-summary: Get the versions available for creating a managed Kubernetes cluster.
examples:
  - name: Get the versions available for creating a managed Kubernetes cluster
    text: az aks get-versions --location westus2
    crafted: true
"""

aladdin_helps['aks nodepool add'] = """
type: command
short-summary: Add a node pool to the managed Kubernetes cluster.
parameters:
  - name: --node-vm-size -s
    type: string
    short-summary: Size of Virtual Machines to create as Kubernetes nodes.
  - name: --node-count -c
    type: int
    short-summary: Number of nodes in the Kubernetes agent pool. After creating a cluster, you can change the size of its node pool with `az aks scale`.
  - name: --kubernetes-version -k
    type: string
    short-summary: Version of Kubernetes to use for creating the cluster, such as "1.7.12" or "1.8.7".
    populator-commands:
      - "`az aks get-versions`"
  - name: --node-osdisk-size
    type: int
    short-summary: Size in GB of the OS disk for each node in the agent pool. Minimum 30 GB.
  - name: --max-pods -m
    type: int
    short-summary: The maximum number of pods deployable to a node.
    long-summary: If not specified, defaults to 110, or 30 for advanced networking configurations.
  - name: --zones -z
    type: string array
    short-summary: Availability zones where agent nodes will be placed.
  - name: --enable-node-public-ip
    type: bool
    short-summary: Enable VMSS node public IP.
  - name: --vnet-subnet-id
    type: string
    short-summary: The ID of a subnet in an existing VNet into which to deploy the cluster.
  - name: --os-type
    type: string
    short-summary: The OS Type. Linux or Windows.
  - name: --enable-cluster-autoscaler -e
    type: bool
    short-summary: Enable cluster autoscaler.
  - name: --min-count
    type: int
    short-summary: Minimum nodes count used for autoscaler, when "--enable-cluster-autoscaler" specified. Please specify the value in the range of [1, 100]
  - name: --max-count
    type: int
    short-summary: Maximum nodes count used for autoscaler, when "--enable-cluster-autoscaler" specified. Please specify the value in the range of [1, 100]
  - name: --node-taints
    type: string
    short-summary: The node taints for the node pool. You can't change the node taints through CLI after the node pool is created.
  - name: --labels
    type: string
    short-summary: The node labels for the node pool. You can't change the node labels through CLI after the node pool is created. See https://aka.ms/node-labels for syntax of labels.
  - name: --mode
    type: string
    short-summary: The mode for a node pool which defines a node pool's primary function. If set as "System", AKS prefers system pods scheduling to node pools with mode `System`. Learn more at https://aka.ms/aks/nodepool/mode.
examples:
  - name: Add a node pool to the managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool add --cluster-name MyCluster --kubernetes-version 1.13.9 --name MyNodePool --node-count 7 --os-type Windows --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks nodepool delete'] = """
type: command
short-summary: Delete the agent pool in the managed Kubernetes cluster.
examples:
  - name: Delete the agent pool in the managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool delete --cluster-name MyCluster --name MyNodePool --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks nodepool list'] = """
type: command
short-summary: List node pools in the managed Kubernetes cluster.
examples:
  - name: List node pools in the managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool list --cluster-name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks nodepool scale'] = """
type: command
short-summary: Scale the node pool in a managed Kubernetes cluster.
parameters:
  - name: --node-count -c
    type: int
    short-summary: Number of nodes in the Kubernetes node pool.
examples:
  - name: Scale the node pool in a managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool scale --cluster-name MyCluster --name MyNodePool --node-count 7 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks nodepool show'] = """
type: command
short-summary: Show the details for a node pool in the managed Kubernetes cluster.
examples:
  - name: Show the details for a node pool in the managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool show --cluster-name MyCluster --name MyNodePool --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks nodepool upgrade'] = """
type: command
short-summary: Upgrade the node pool in a managed Kubernetes cluster.
parameters:
  - name: --kubernetes-version -k
    type: string
    short-summary: Version of Kubernetes to upgrade the node pool to, such as "1.11.12".
examples:
  - name: Upgrade the node pool in a managed Kubernetes cluster. (autogenerated)
    text: az aks nodepool upgrade --cluster-name MyCluster --kubernetes-version 1.13.9 --name MyNodePool --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks remove-connector'] = """
type: command
short-summary: Remove the ACI Connector from a managed Kubernetes cluster.
parameters:
  - name: --connector-name
    type: string
    short-summary: Name of the ACI Connector.
  - name: --graceful
    type: bool
    short-summary: Use a "cordon and drain" strategy to evict pods safely before removing the ACI node.
  - name: --os-type
    type: string
    short-summary: Remove support for deploying ACIs of this operating system type.
examples:
  - name: Remove the ACI Connector from a managed Kubernetes cluster. (autogenerated)
    text: az aks remove-connector --connector-name MyConnector --name MyManagedCluster --os-type Windows --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks rotate-certs'] = """
type: command
short-summary: Rotate certificates and keys on a managed Kubernetes cluster
long-summary: Kubernetes will be unavailable during cluster certificate rotation.
examples:
  - name: Rotate certificates and keys on a managed Kubernetes cluster. (autogenerated)
    text: az aks rotate-certs --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks scale'] = """
type: command
short-summary: Scale the node pool in a managed Kubernetes cluster.
parameters:
  - name: --node-count -c
    type: int
    short-summary: Number of nodes in the Kubernetes node pool.
examples:
  - name: Scale the node pool in a managed Kubernetes cluster. (autogenerated)
    text: az aks scale --name MyManagedCluster --node-count 3 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks show'] = """
type: command
short-summary: Show the details for a managed Kubernetes cluster.
examples:
  - name: Show the details for a managed Kubernetes cluster
    text: az aks show --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks upgrade'] = """
type: command
short-summary: Upgrade a managed Kubernetes cluster to a newer version.
long-summary: "Kubernetes will be unavailable during cluster upgrades."
parameters:
  - name: --kubernetes-version -k
    type: string
    short-summary: Version of Kubernetes to upgrade the cluster to, such as "1.11.8" or "1.12.6".
    populator-commands:
      - "`az aks get-upgrades`"
  - name: --control-plane-only
    type: bool
    short-summary: Upgrade the cluster control plane only. If not specified, both control plane AND all node pools will be upgraded.
examples:
  - name: Upgrade a managed Kubernetes cluster to a newer version. (autogenerated)
    text: az aks upgrade --kubernetes-version 1.12.6 --name MyManagedCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aks wait'] = """
type: command
short-summary: Wait for a managed Kubernetes cluster to reach a desired state.
long-summary: If an operation on a cluster was interrupted or was started with `--no-wait`, use this command to wait for it to complete.
examples:
  - name: Wait for a managed Kubernetes cluster to reach a desired state (autogenerated)
    text: az aks wait --created --interval 60 --name MyManagedCluster --resource-group MyResourceGroup --timeout 1800
    crafted: true
"""

aladdin_helps['openshift delete'] = """
type: command
short-summary: Delete a managed OpenShift cluster.
examples:
  - name: Delete a managed OpenShift cluster. (autogenerated)
    text: az openshift delete --name MyManagedOpenShiftCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['openshift scale'] = """
type: command
short-summary: Scale the compute pool in a managed OpenShift cluster.
parameters:
  - name: --compute-count -c
    type: int
    short-summary: Number of nodes in the OpenShift compute pool.
examples:
  - name: Scale the compute pool in a managed OpenShift cluster. (autogenerated)
    text: az openshift scale --compute-count 5 --name MyManagedOpenShiftCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['openshift show'] = """
type: command
short-summary: Show the details for a managed OpenShift cluster.
examples:
  - name: Show the details for a managed OpenShift cluster. (autogenerated)
    text: az openshift show --name MyManagedOpenShiftCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['openshift update'] = """
type: command
short-summary: Commands to manage existing Openshift cluster.
parameters:
  - name: --refresh-cluster
    type: boolean
examples:
  - name: Trigger nodes rotation.
    text: az openshift update -g MyResourceGroup -n MyManagedCluster --refresh-cluster
    crafted: true
"""

aladdin_helps['advisor configuration update'] = """
type: command
short-summary: Update Azure Advisor configuration.
examples:
  - name: Update Azure Advisor configuration. (autogenerated)
    text: az advisor configuration update --include --resource-group myRG
    crafted: true
"""

aladdin_helps['advisor recommendation enable'] = """
type: command
short-summary: Enable Azure Advisor recommendations.
examples:
  - name: Enable Azure Advisor recommendations. (autogenerated)
    text: az advisor recommendation enable --name MyRecommendation
    crafted: true
"""

aladdin_helps['ams account check-name'] = """
type: command
short-summary: Checks whether the Media Service resource name is available.
examples:
  - name: Checks whether the Media Service resource name is available. (autogenerated)
    text: az ams account check-name --location westus2 --name MyAzureMediaServicesAccount
    crafted: true
"""

aladdin_helps['ams account delete'] = """
type: command
short-summary: Delete an Azure Media Services account.
examples:
  - name: Delete an Azure Media Services account. (autogenerated)
    text: az ams account delete --name MyAzureMediaServicesAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams account mru show'] = """
type: command
short-summary: Show the details of media reserved units for an Azure Media Services account.
examples:
  - name: Show the details of media reserved units for an Azure Media Services account. (autogenerated)
    text: az ams account mru show --name MyAzureMediaServicesAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams account show'] = """
type: command
short-summary: Show the details of an Azure Media Services account.
examples:
  - name: Show the details of an Azure Media Services account. (autogenerated)
    text: az ams account show --name MyAzureMediaServicesAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams account sp reset-credentials'] = """
type: command
short-summary: Generate a new client secret for a service principal configured for an Azure Media Services account.
examples:
  - name: Generate a new client secret for a service principal configured for an Azure Media Services account. (autogenerated)
    text: az ams account sp reset-credentials --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset create'] = """
type: command
short-summary: Create an asset.
examples:
  - name: Create an asset. (autogenerated)
    text: az ams asset create --account-name MyAccount --name MyAsset --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset delete'] = """
type: command
short-summary: Delete an asset.
examples:
  - name: Delete an asset. (autogenerated)
    text: az ams asset delete --account-name MyAccount --name MyAsset --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset get-sas-urls'] = """
type: command
short-summary: Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.
examples:
  - name: Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content (autogenerated)
    text: az ams asset get-sas-urls --account-name MyAccount --name MyAsset --permissions Read --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset list-streaming-locators'] = """
type: command
short-summary: List streaming locators which are associated with this asset.
examples:
  - name: List streaming locators which are associated with this asset. (autogenerated)
    text: az ams asset list-streaming-locators --account-name MyAccount --name MyAsset --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset show'] = """
type: command
short-summary: Show the details of an asset.
examples:
  - name: Show the details of an asset. (autogenerated)
    text: az ams asset show --account-name MyAccount --name MyAsset --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams asset update'] = """
type: command
short-summary: Update the details of an asset.
examples:
  - name: Update the details of an asset. (autogenerated)
    text: az ams asset update --account-name MyAccount --add input.accessControl.ip.allow 1.2.3.4/22 --name MyAsset --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams content-key-policy create'] = """
type: command
short-summary: Create a new content key policy.
examples:
  - name: Create a new content key policy. (autogenerated)
    text: az ams content-key-policy create --account-name amsAccount --clear-key-configuration --name contentKeyPolicyName --open-restriction --policy-option-name policyOptionName --resource-group resourceGroup
    crafted: true
"""

aladdin_helps['ams content-key-policy delete'] = """
type: command
short-summary: Delete a content key policy.
examples:
  - name: Delete a content key policy. (autogenerated)
    text: az ams content-key-policy delete --account-name MyAccount --name MyContentKeyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams content-key-policy list'] = """
type: command
short-summary: List all the content key policies within an Azure Media Services account.
examples:
  - name: List all the content key policies within an Azure Media Services account. (autogenerated)
    text: az ams content-key-policy list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams content-key-policy show'] = """
type: command
short-summary: Show an existing content key policy.
examples:
  - name: Show an existing content key policy. (autogenerated)
    text: az ams content-key-policy show --account-name MyAccount --name MyContentKeyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams job delete'] = """
type: command
short-summary: Delete a job.
examples:
  - name: Delete a job. (autogenerated)
    text: az ams job delete --account-name MyAccount --name MyJob --resource-group MyResourceGroup --transform-name MyTransform
    crafted: true
"""

aladdin_helps['ams job show'] = """
type: command
short-summary: Show the details of a job.
examples:
  - name: Show the details of a job. (autogenerated)
    text: az ams job show --account-name MyAccount --name MyJob --resource-group MyResourceGroup --transform-name MyTransform
    crafted: true
"""

aladdin_helps['ams live-event delete'] = """
type: command
short-summary: Delete a live event.
examples:
  - name: Delete a live event. (autogenerated)
    text: az ams live-event delete --account-name MyAccount --name MyLiveEvent --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams live-event show'] = """
type: command
short-summary: Show the details of a live event.
examples:
  - name: Show the details of a live event. (autogenerated)
    text: az ams live-event show --account-name MyAccount --name MyLiveEvent --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams live-event start'] = """
type: command
short-summary: Start a live event.
examples:
  - name: Start a live event. (autogenerated)
    text: az ams live-event start --account-name MyAccount --name MyLiveEvent --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams live-event stop'] = """
type: command
short-summary: Stop a live event.
examples:
  - name: Stop a live event. (autogenerated)
    text: az ams live-event stop --account-name MyAccount --name MyLiveEvent --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams live-output delete'] = """
type: command
short-summary: Delete a live output.
examples:
  - name: Delete a live output. (autogenerated)
    text: az ams live-output delete --account-name MyAccount --live-event-name MyLiveEvent --name MyLiveOutput --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams live-output list'] = """
type: command
short-summary: List all the live outputs in a live event.
examples:
  - name: List all the live outputs in a live event. (autogenerated)
    text: az ams live-output list --account-name MyAccount --live-event-name MyLiveEvent --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint delete'] = """
type: command
short-summary: Delete a streaming endpoint.
examples:
  - name: Delete a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint delete --account-name MyAccount --name MyStreamingEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint list'] = """
type: command
short-summary: List all the streaming endpoints within an Azure Media Services account.
examples:
  - name: List all the streaming endpoints within an Azure Media Services account. (autogenerated)
    text: az ams streaming-endpoint list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint show'] = """
type: command
short-summary: Show the details of a streaming endpoint.
examples:
  - name: Show the details of a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint show --account-name MyAccount --name MyStreamingEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint start'] = """
type: command
short-summary: Start a streaming endpoint.
examples:
  - name: Start a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint start --account-name MyAccount --name MyStreamingEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint stop'] = """
type: command
short-summary: Stop a streaming endpoint.
examples:
  - name: Stop a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint stop --account-name MyAccount --name MyStreamingEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-endpoint update'] = """
type: command
short-summary: Update the details of a streaming endpoint.
examples:
  - name: Update the details of a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint update --account-name MyAccount --disable-cdn --name MyStreamingEndpoint --resource-group MyResourceGroup
    crafted: true
  - name: Update the details of a streaming endpoint. (autogenerated)
    text: az ams streaming-endpoint update --account-name MyAccount --ips 1.2.3.4/22 5.6.7.8/30 --name MyStreamingEndpoint --resource-group MyResourceGroup --set outputs[0].relativePriority=High --subscription MySubscription
    crafted: true
"""

aladdin_helps['ams streaming-locator create'] = """
type: command
short-summary: Create a streaming locator.
examples:
  - name: Create a streaming locator. (autogenerated)
    text: az ams streaming-locator create --account-name MyAccount --asset-name MyAsset --name MyStreamingLocator --resource-group MyResourceGroup --streaming-policy-name MyStreamingPolicy
    crafted: true
"""

aladdin_helps['ams streaming-locator get-paths'] = """
type: command
short-summary: List paths supported by a streaming locator.
examples:
  - name: List paths supported by a streaming locator. (autogenerated)
    text: az ams streaming-locator get-paths --account-name MyAccount --name MyStreamingLocator --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-locator list'] = """
type: command
short-summary: List all the streaming locators within an Azure Media Services account.
examples:
  - name: List all the streaming locators within an Azure Media Services account. (autogenerated)
    text: az ams streaming-locator list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-locator list-content-keys'] = """
type: command
short-summary: List content keys used by a streaming locator.
examples:
  - name: List content keys used by a streaming locator. (autogenerated)
    text: az ams streaming-locator list-content-keys --account-name MyAccount --name MyStreamingLocator --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-locator show'] = """
type: command
short-summary: Show the details of a streaming locator.
examples:
  - name: Show the details of a streaming locator. (autogenerated)
    text: az ams streaming-locator show --account-name MyAccount --name MyStreamingLocator --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-policy list'] = """
type: command
short-summary: List all the streaming policies within an Azure Media Services account.
examples:
  - name: List all the streaming policies within an Azure Media Services account. (autogenerated)
    text: az ams streaming-policy list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams streaming-policy show'] = """
type: command
short-summary: Show the details of a streaming policy.
examples:
  - name: Show the details of a streaming policy. (autogenerated)
    text: az ams streaming-policy show --account-name MyAccount --name MyStreamingPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams transform create'] = """
type: command
short-summary: Create a transform.
examples:
  - name: Create a transform. (autogenerated)
    text: |
        az ams transform create --account-name myAmsAccount --description newDescription --name transformName --preset "C:\\MyPresets\\CustomPreset.json" --resource-group myResourceGroup
    crafted: true
"""

aladdin_helps['ams transform delete'] = """
type: command
short-summary: Delete a transform.
examples:
  - name: Delete a transform. (autogenerated)
    text: az ams transform delete --account-name MyAccount --name MyTransform --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['ams transform list'] = """
type: command
short-summary: List all the transforms of an Azure Media Services account.
examples:
  - name: List all the transforms of an Azure Media Services account. (autogenerated)
    text: az ams transform list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ams transform show'] = """
type: command
short-summary: Show the details of a transform.
examples:
  - name: Show the details of a transform. (autogenerated)
    text: az ams transform show --account-name MyAccount --name MyTransform --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['apim backup'] = """
type: command
short-summary: Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
examples:
  - name: Creates a backup of the API Management service to the given Azure Storage Account (autogenerated)
    text: az apim backup --backup-name myBackup --name MyApim --resource-group MyResourceGroup --storage-account-container backups --storage-account-key Ay2ZbdxLnD4OJPT29F6jLPkB6KynOzx85YCObhrw== --storage-account-name mystorageaccount --subscription MySubscription
    crafted: true
"""

aladdin_helps['apim show'] = """
type: command
short-summary: Show details of an API Management service instance.
examples:
  - name: Show details of an API Management service instance. (autogenerated)
    text: az apim show --name MyApiManagementServiceInstance --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['appconfig kv restore'] = """
type: command
short-summary: Restore key-values.
examples:
  - name: Restore key-values. (autogenerated)
    text: |
        az appconfig kv restore --datetime "2019-05-01T11:24:12Z" --label v1.* --name MyAppConfiguration
    crafted: true
"""

aladdin_helps['appservice ase delete'] = """
type: command
short-summary: Delete app service environment.
examples:
  - name: Delete app service environment. (autogenerated)
    text: az appservice ase delete --name MyAseName --no-wait --resource-group MyResourceGroup --yes
    crafted: true
"""

aladdin_helps['appservice list-locations'] = """
type: command
short-summary: List regions where a plan sku is available.
examples:
  - name: List regions where a plan sku is available. (autogenerated)
    text: az appservice list-locations --sku F1
    crafted: true
"""

aladdin_helps['appservice plan delete'] = """
type: command
short-summary: Delete an app service plan.
examples:
  - name: Delete an app service plan. (autogenerated)
    text: az appservice plan delete --name MyAppServicePlan --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['appservice plan show'] = """
type: command
short-summary: Get the app service plans for a resource group or a set of resource groups.
examples:
  - name: Get the app service plans for a resource group or a set of resource groups. (autogenerated)
    text: az appservice plan show --name MyAppServicePlan   --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['appservice plan update'] = """
type: command
short-summary: Update an app service plan. See https://docs.microsoft.com/azure/app-service/app-service-plan-manage#move-an-app-to-another-app-service-plan to learn more
examples:
  - name: Update an app service plan. (autogenerated)
    text: az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup --sku F1
    crafted: true
"""

aladdin_helps['functionapp config appsettings delete'] = """
type: command
short-summary: Delete a function app's settings.
examples:
  - name: Delete a function app's settings. (autogenerated)
    text: az functionapp config appsettings delete --name MyFunctionApp --resource-group MyResourceGroup --setting-names {setting-names}
    crafted: true
"""

aladdin_helps['functionapp config appsettings list'] = """
type: command
short-summary: Show settings for a function app.
examples:
  - name: Show settings for a function app. (autogenerated)
    text: az functionapp config appsettings list --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config container delete'] = """
type: command
short-summary: Delete a function app container's settings.
examples:
  - name: Delete a function app container's settings. (autogenerated)
    text: az functionapp config container delete --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config container set'] = """
type: command
short-summary: Set a function app container's settings.
examples:
  - name: Set a function app container's settings. (autogenerated)
    text: az functionapp config container set --docker-custom-image-name MyDockerCustomImage --docker-registry-server-password StrongPassword --docker-registry-server-url https://{azure-container-registry-name}.azurecr.io --docker-registry-server-user DockerUserId --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config container show'] = """
type: command
short-summary: Get details of a function app container's settings.
examples:
  - name: Get details of a function app container's settings. (autogenerated)
    text: az functionapp config container show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config hostname add'] = """
type: command
short-summary: Bind a hostname to a function app.
examples:
  - name: Bind a hostname to a function app. (autogenerated)
    text: az functionapp config hostname add --hostname www.yourdomain.com --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config hostname get-external-ip'] = """
type: command
short-summary: Get the external-facing IP address for a function app.
examples:
  - name: Get the external-facing IP address for a function app. (autogenerated)
    text: az functionapp config hostname get-external-ip --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config hostname list'] = """
type: command
short-summary: List all hostname bindings for a function app.
examples:
  - name: List all hostname bindings for a function app. (autogenerated)
    text: az functionapp config hostname list --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['functionapp config set'] = """
type: command
short-summary: Set the function app's configuration.
examples:
  - name: Set the function app's configuration. (autogenerated)
    text: az functionapp config set --always-on true --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config show'] = """
type: command
short-summary: Get the details of a function app's configuration.
examples:
  - name: Get the details of a web app's configuration. (autogenerated)
    text: az functionapp config show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config ssl bind'] = """
type: command
short-summary: Bind an SSL certificate to a function app.
examples:
  - name: Bind an SSL certificate to a function app. (autogenerated)
    text: az functionapp config ssl bind --certificate-thumbprint {certificate-thumbprint} --name MyFunctionApp --resource-group MyResourceGroup --ssl-type SNI
    crafted: true
"""

aladdin_helps['functionapp config ssl list'] = """
type: command
short-summary: List SSL certificates for a function app.
examples:
  - name: List SSL certificates for a function app. (autogenerated)
    text: az functionapp config ssl list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp config ssl upload'] = """
type: command
short-summary: Upload an SSL certificate to a function app.
examples:
  - name: Upload an SSL certificate to a function app. (autogenerated)
    text: az functionapp config ssl upload --certificate-file {certificate-file} --certificate-password {certificate-password} --name MyFunctionApp     --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp cors show'] = """
type: command
short-summary: show allowed origins
examples:
  - name: show allowed origins (autogenerated)
    text: az functionapp cors show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp create'] = """
type: command
short-summary: Create a function app.
long-summary: The function app's name must be able to produce a unique FQDN as AppName.azurewebsites.net.
examples:
  - name: Create a function app. (autogenerated)
    text: az functionapp create --consumption-plan-location westus --name MyUniqueAppName --os-type Windows --resource-group MyResourceGroup --runtime dotnet --storage-account MyStorageAccount
    crafted: true
"""

aladdin_helps['functionapp delete'] = """
type: command
short-summary: Delete a function app.
examples:
  - name: Delete a function app. (autogenerated)
    text: az functionapp delete --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment container config'] = """
type: command
short-summary: Configure continuous deployment via containers.
examples:
  - name: Configure continuous deployment via containers (autogenerated)
    text: az functionapp deployment container config --enable-cd true --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment container show-cd-url'] = """
type: command
short-summary: Get the URL which can be used to configure webhooks for continuous deployment.
examples:
  - name: Get the URL which can be used to configure webhooks for continuous deployment. (autogenerated)
    text: az functionapp deployment container show-cd-url --ids {ids}
    crafted: true
  - name: Get the URL which can be used to configure webhooks for continuous deployment. (autogenerated)
    text: az functionapp deployment container show-cd-url --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment list-publishing-credentials'] = """
type: command
short-summary: Get the details for available function app publishing credentials.
examples:
  - name: Get the details for available function app deployment publishing credentials.
    text: az functionapp deployment list-publishing-credentials --name MyFunctionApp   --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment list-publishing-profiles'] = """
type: command
short-summary: Get the details for available function app deployment profiles.
examples:
  - name: Get the details for available function app deployment profiles. (autogenerated)
    text: az functionapp deployment list-publishing-profiles --name MyFunctionApp   --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment slot auto-swap'] = """
type: command
short-summary: Configure deployment slot auto swap.
examples:
  - name: Configure deployment slot auto swap. (autogenerated)
    text: az functionapp deployment slot auto-swap --name MyFunctionApp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['functionapp deployment slot create'] = """
type: command
short-summary: Create a deployment slot.
examples:
  - name: Create a deployment slot. (autogenerated)
    text: az functionapp deployment slot create --name MyFunctionapp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['functionapp deployment slot delete'] = """
type: command
short-summary: Delete a deployment slot.
examples:
  - name: Delete a deployment slot. (autogenerated)
    text: az functionapp deployment slot delete --name MyFunctionapp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['functionapp deployment slot list'] = """
type: command
short-summary: List all deployment slots.
examples:
  - name: List all deployment slots. (autogenerated)
    text: az functionapp deployment slot list --name MyFunctionapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment source config'] = """
type: command
short-summary: Manage deployment from git or Mercurial repositories.
examples:
  - name: Manage deployment from git or Mercurial repositories. (autogenerated)
    text: az functionapp deployment source config --branch master --manual-integration --name MyFunctionApp --repo-url https://github.com/Azure-Samples/function-image-upload-resize --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment source delete'] = """
type: command
short-summary: Delete a source control deployment configuration.
examples:
  - name: Delete a source control deployment configuration. (autogenerated)
    text: az functionapp deployment source delete --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment source show'] = """
type: command
short-summary: Get the details of a source control deployment configuration.
examples:
  - name: Get the details of a source control deployment configuration. (autogenerated)
    text: az functionapp deployment source show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp deployment source sync'] = """
type: command
short-summary: Synchronize from the repository. Only needed under manual integration mode.
examples:
  - name: Synchronize from the repository. Only needed under manual integration mode. (autogenerated)
    text: az functionapp deployment source sync --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp identity remove'] = """
type: command
short-summary: Disable web app's managed service identity
examples:
  - name: Disable web app's managed service identity (autogenerated)
    text: az functionapp identity remove --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp identity show'] = """
type: command
short-summary: display web app's managed service identity
examples:
  - name: display functionapp's managed service identity (autogenerated)
    text: az functionapp identity show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp plan create'] = """
type: command
short-summary: Create an App Service Plan for an Azure Function.
examples:
  - name: Create an App Service Plan for an Azure Function. (autogenerated)
    text: az functionapp plan create --is-linux true --location westus2 --name MyPlan --number-of-workers 1 --resource-group MyResourceGroup --sku B1
    crafted: true
"""

aladdin_helps['functionapp plan delete'] = """
type: command
short-summary: Delete an App Service Plan.
examples:
  - name: Delete an App Service Plan. (autogenerated)
    text: az functionapp plan delete --name MyAppServicePlan --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp plan show'] = """
type: command
short-summary: Get the App Service Plans for a resource group or a set of resource groups.
examples:
  - name: Get the app service plans for a resource group or a set of resource groups. (autogenerated)
    text: az functionapp plan show --name MyAppServicePlan --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp restart'] = """
type: command
short-summary: Restart a function app.
examples:
  - name: Restart a function app. (autogenerated)
    text: az functionapp restart --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp show'] = """
type: command
short-summary: Get the details of a function app.
examples:
  - name: Get the details of a function app. (autogenerated)
    text: az functionapp show --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp start'] = """
type: command
short-summary: Start a function app.
examples:
  - name: Start a function app. (autogenerated)
    text: az functionapp start --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp stop'] = """
type: command
short-summary: Stop a function app.
examples:
  - name: Stop a function app. (autogenerated)
    text: az functionapp stop --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['functionapp update'] = """
type: command
short-summary: Update a function app.
examples:
  - name: Update a function app. (autogenerated)
    text: az functionapp update --name MyFunctionApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp auth show'] = """
type: command
short-summary: Show the authentification settings for the webapp.
examples:
  - name: Show the authentification settings for the webapp. (autogenerated)
    text: az webapp auth show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp browse'] = """
type: command
short-summary: Open a web app in a browser.
examples:
  - name: Open a web app in a browser. (autogenerated)
    text: az webapp browse --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config appsettings delete'] = """
type: command
short-summary: Delete web app settings.
examples:
  - name: Delete web app settings. (autogenerated)
    text: az webapp config appsettings delete --name MyWebApp --resource-group MyResourceGroup --setting-names {setting-names}
    crafted: true
"""

aladdin_helps['webapp config appsettings list'] = """
type: command
short-summary: Get the details of a web app's settings.
examples:
  - name: Get the details of a web app's settings. (autogenerated)
    text: az webapp config appsettings list --name MyWebapp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp config backup create'] = """
type: command
short-summary: Create a backup of a web app.
examples:
  - name: Create a backup of a web app. (autogenerated)
    text: az webapp config backup create --container-url {container-url} --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config backup list'] = """
type: command
short-summary: List backups of a web app.
examples:
  - name: List backups of a web app. (autogenerated)
    text: az webapp config backup list --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config backup show'] = """
type: command
short-summary: Show the backup schedule for a web app.
examples:
  - name: Show the backup schedule for a web app. (autogenerated)
    text: az webapp config backup show --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config connection-string delete'] = """
type: command
short-summary: Delete a web app's connection strings.
examples:
  - name: Delete a web app's connection strings. (autogenerated)
    text: az webapp config connection-string delete --name MyWebApp --resource-group MyResourceGroup --setting-names {setting-names}
    crafted: true
"""

aladdin_helps['webapp config connection-string list'] = """
type: command
short-summary: Get a web app's connection strings.
examples:
  - name: Get a web app's connection strings. (autogenerated)
    text: az webapp config connection-string list --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config container delete'] = """
type: command
short-summary: Delete a web app container's settings.
examples:
  - name: Delete a web app container's settings. (autogenerated)
    text: az webapp config container delete --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config container set'] = """
type: command
short-summary: Set a web app container's settings.
examples:
  - name: Set a web app container's settings. (autogenerated)
    text: az webapp config container set --docker-custom-image-name MyDockerCustomImage --docker-registry-server-password StrongPassword --docker-registry-server-url https://{azure-container-registry-name}.azurecr.io --docker-registry-server-user DockerUserId --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config container show'] = """
type: command
short-summary: Get details of a web app container's settings.
examples:
  - name: Get details of a web app container's settings. (autogenerated)
    text: az webapp config container show --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config hostname add'] = """
type: command
short-summary: Bind a hostname to a web app.
examples:
  - name: Bind a hostname to a web app. (autogenerated)
    text: az webapp config hostname add --hostname $fqdn --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config hostname get-external-ip'] = """
type: command
short-summary: Get the external-facing IP address for a web app.
examples:
  - name: Get the external-facing IP address for a web app. (autogenerated)
    text: az webapp config hostname get-external-ip --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config hostname list'] = """
type: command
short-summary: List all hostname bindings for a web app.
examples:
  - name: List all hostname bindings for a web app. (autogenerated)
    text: az webapp config hostname list --resource-group MyResourceGroup --webapp-name MyWebapp
    crafted: true
"""

aladdin_helps['webapp config show'] = """
type: command
short-summary: Get the details of a web app's configuration.
examples:
  - name: Get the details of a web app's configuration. (autogenerated)
    text: az webapp config show --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config snapshot list'] = """
type: command
short-summary: List the restorable snapshots for a web app.
examples:
  - name: List the restorable snapshots for a web app. (autogenerated)
    text: az webapp config snapshot list --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config ssl bind'] = """
type: command
short-summary: Bind an SSL certificate to a web app.
examples:
  - name: Bind an SSL certificate to a web app. (autogenerated)
    text: az webapp config ssl bind --certificate-thumbprint {certificate-thumbprint} --name MyWebapp --resource-group MyResourceGroup --ssl-type SNI
    crafted: true
"""

aladdin_helps['webapp config ssl delete'] = """
type: command
short-summary: Delete an SSL certificate from a web app.
examples:
  - name: Delete an SSL certificate from a web app. (autogenerated)
    text: az webapp config ssl delete --certificate-thumbprint {certificate-thumbprint} --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config ssl list'] = """
type: command
short-summary: List SSL certificates for a web app.
examples:
  - name: List SSL certificates for a web app. (autogenerated)
    text: az webapp config ssl list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config ssl upload'] = """
type: command
short-summary: Upload an SSL certificate to a web app.
examples:
  - name: Upload an SSL certificate to a web app. (autogenerated)
    text: az webapp config ssl upload --certificate-file {certificate-file} --certificate-password {certificate-password} --name MyWebapp     --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config storage-account delete'] = """
type: command
short-summary: Delete a web app's Azure storage account configuration. (Linux Web Apps and Windows Containers Web Apps Only)
examples:
  - name: Delete a web app's Azure storage account configuration. (Linux Web Apps and Windows Containers Web Apps Only) (autogenerated)
    text: az webapp config storage-account delete --custom-id CustomId --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config storage-account list'] = """
type: command
short-summary: Get a web app's Azure storage account configurations. (Linux Web Apps and Windows Containers Web Apps Only)
examples:
  - name: Get a web app's Azure storage account configurations. (Linux Web Apps and Windows Containers Web Apps Only) (autogenerated)
    text: az webapp config storage-account list --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp config storage-account update'] = """
type: command
short-summary: Update an existing Azure storage account configuration on a web app. (Linux Web Apps and Windows Containers Web Apps Only)
examples:
  - name: Update an existing Azure storage account configuration on a web app. (Linux Web Apps and Windows Containers Web Apps Only) (autogenerated)
    text: az webapp config storage-account update --access-key MyAccessKey --account-name MyAccount --custom-id CustomId --mount-path /path/to/new/mount --name MyUniqueApp --resource-group MyResourceGroup --share-name MyShare --storage-type AzureFiles
    crafted: true
"""

aladdin_helps['webapp cors add'] = """
type: command
short-summary: Add allowed origins
examples:
  - name: Add allowed origins (autogenerated)
    text: az webapp cors add --allowed-origins https://myapps.com --name MyWebApp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp cors show'] = """
type: command
short-summary: show allowed origins
examples:
  - name: show allowed origins (autogenerated)
    text: az webapp cors show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp create-remote-connection'] = """
type: command
short-summary: Creates a remote connection using a tcp tunnel to your web app
examples:
  - name: Creates a remote connection using a tcp tunnel to your web app. (autogenerated)
    text: az webapp create-remote-connection --name MyWebApp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp delete'] = """
type: command
short-summary: Delete a web app.
examples:
  - name: Delete a web app. (autogenerated)
    text: az webapp delete --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deleted restore'] = """
type: command
short-summary: Restore a deleted web app.
long-summary: Restores the files and settings of a deleted web app to the specified web app.
examples:
  - name: Restore a deleted web app. (autogenerated)
    text: az webapp deleted restore --deleted-id /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Web/deletedSites/1234 --name MySite --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp deployment container config'] = """
type: command
short-summary: Configure continuous deployment via containers.
examples:
  - name: Configure continuous deployment via containers. (autogenerated)
    text: az webapp deployment container config --enable-cd true --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deployment container show-cd-url'] = """
type: command
short-summary: Get the URL which can be used to configure webhooks for continuous deployment.
examples:
  - name: Get the URL which can be used to configure webhooks for continuous deployment (autogenerated)
    text: az webapp deployment container show-cd-url --name MyWebApp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['webapp deployment list-publishing-credentials'] = """
type: command
short-summary: Get the details for available web app publishing credentials
examples:
  - name: Get the details for available web app publishing credentials (autogenerated)
    text: az webapp deployment list-publishing-credentials --name MyWebapp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp deployment list-publishing-profiles'] = """
type: command
short-summary: Get the details for available web app deployment profiles.
examples:
  - name: Get the details for available web app deployment profiles. (autogenerated)
    text: az webapp deployment list-publishing-profiles --name MyWebapp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['webapp deployment slot auto-swap'] = """
type: command
short-summary: Configure deployment slot auto swap.
examples:
  - name: Configure deployment slot auto swap. (autogenerated)
    text: az webapp deployment slot auto-swap --name MyWebapp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['webapp deployment slot create'] = """
type: command
short-summary: Create a deployment slot.
examples:
  - name: Create a deployment slot. (autogenerated)
    text: az webapp deployment slot create --name MyWebapp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['webapp deployment slot delete'] = """
type: command
short-summary: Delete a deployment slot.
examples:
  - name: Delete a deployment slot. (autogenerated)
    text: az webapp deployment slot delete --name MyWebapp --resource-group MyResourceGroup --slot staging
    crafted: true
"""

aladdin_helps['webapp deployment slot list'] = """
type: command
short-summary: List all deployment slots.
examples:
  - name: List all deployment slots. (autogenerated)
    text: az webapp deployment slot list --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deployment source config'] = """
type: command
short-summary: Manage deployment from git or Mercurial repositories.
examples:
  - name: Manage deployment from git or Mercurial repositories. (autogenerated)
    text: az webapp deployment source config --branch master --manual-integration --name MyWebApp --repo-url https://github.com/Azure-Samples/function-image-upload-resize --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deployment source delete'] = """
type: command
short-summary: Delete a source control deployment configuration.
examples:
  - name: Delete a source control deployment configuration. (autogenerated)
    text: az webapp deployment source delete --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deployment source show'] = """
type: command
short-summary: Get the details of a source control deployment configuration.
examples:
  - name: Get the details of a source control deployment configuration. (autogenerated)
    text: az webapp deployment source show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp deployment source sync'] = """
type: command
short-summary: Synchronize from the repository. Only needed under manual integration mode.
examples:
  - name: Synchronize from the repository. Only needed under manual integration mode. (autogenerated)
    text: az webapp deployment source sync --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp identity remove'] = """
type: command
short-summary: Disable web app's managed service identity
examples:
  - name: Disable web app's managed service identity (autogenerated)
    text: az webapp identity remove --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp identity show'] = """
type: command
short-summary: display web app's managed service identity
examples:
  - name: display webapp's managed service identity (autogenerated)
    text: az webapp identity show --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp log config'] = """
type: command
short-summary: Configure logging for a web app.
examples:
  - name: Configure logging for a web app. (autogenerated)
    text: az webapp log config --name MyWebapp --resource-group MyResourceGroup --web-server-logging off
    crafted: true
  - name: Configure logging for a web app. (autogenerated)
    text: az webapp log config --docker-container-logging off --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp log download'] = """
type: command
short-summary: Download a web app's log history as a zip file.
long-summary: This command may not work with web apps running on Linux.
examples:
  - name: Download a web app's log history as a zip file. (autogenerated)
    text: az webapp log download --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp log show'] = """
type: command
short-summary: Get the details of a web app's logging configuration.
examples:
  - name: Get the details of a web app's logging configuration. (autogenerated)
    text: az webapp log show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp restart'] = """
type: command
short-summary: Restart a web app.
examples:
  - name: Restart a web app. (autogenerated)
    text: az webapp restart --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp show'] = """
type: command
short-summary: Get the details of a web app.
examples:
  - name: Get the details of a web app. (autogenerated)
    text: az webapp show --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp start'] = """
type: command
short-summary: Start a web app.
examples:
  - name: Start a web app. (autogenerated)
    text: az webapp start --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp stop'] = """
type: command
short-summary: Stop a web app.
examples:
  - name: Stop a web app. (autogenerated)
    text: az webapp stop --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp traffic-routing clear'] = """
type: command
short-summary: Clear the routing rules and send all traffic to production.
examples:
  - name: Clear the routing rules and send all traffic to production. (autogenerated)
    text: az webapp traffic-routing clear --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp traffic-routing set'] = """
type: command
short-summary: Configure routing traffic to deployment slots.
examples:
  - name: Configure routing traffic to deployment slots. (autogenerated)
    text: az webapp traffic-routing set --distribution staging=50 --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp traffic-routing show'] = """
type: command
short-summary: Display the current distribution of traffic across slots.
examples:
  - name: Display the current distribution of traffic across slots. (autogenerated)
    text: az webapp traffic-routing show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp update'] = """
type: command
short-summary: Update a web app.
examples:
  - name: Update a web app. (autogenerated)
    text: az webapp update --https-only true --name MyAppName --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp webjob continuous list'] = """
type: command
short-summary: List all continuous webjobs on a selected web app.
examples:
  - name: List all continuous webjobs on a selected webapp. (autogenerated)
    text: az webapp webjob continuous list --name MyWebapp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp webjob continuous remove'] = """
type: command
short-summary: Delete a specific continuous webjob.
examples:
  - name: Delete a specific continuous webjob. (autogenerated)
    text: az webapp webjob continuous remove --name MyWebApp --resource-group MyResourceGroup --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['webapp webjob continuous start'] = """
type: command
short-summary: Start a specific continuous webjob on a selected web app.
examples:
  - name: Start a specific continuous webjob on a selected web app. (autogenerated)
    text: az webapp webjob continuous start --name MyWebApp --resource-group MyResourceGroup --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['webapp webjob continuous stop'] = """
type: command
short-summary: Stop a specific continuous webjob.
examples:
  - name: Stop a specific continuous webjob. (autogenerated)
    text: az webapp webjob continuous stop --name MyWebApp --resource-group MyResourceGroup --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['webapp webjob triggered list'] = """
type: command
short-summary: List all triggered webjobs hosted on a web app.
examples:
  - name: List all triggered webjobs hosted on a web app. (autogenerated)
    text: az webapp webjob triggered list --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['webapp webjob triggered log'] = """
type: command
short-summary: Get history of a specific triggered webjob hosted on a web app.
examples:
  - name: Get history of a specific triggered webjob hosted on a web app. (autogenerated)
    text: az webapp webjob triggered log --name MyWebApp --resource-group MyResourceGroup --subscription MySubscription --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['webapp webjob triggered remove'] = """
type: command
short-summary: Delete a specific triggered webjob hosted on a web app.
examples:
  - name: Delete a specific triggered webjob hosted on a web app. (autogenerated)
    text: az webapp webjob triggered remove --name MyWebApp --resource-group MyResourceGroup --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['webapp webjob triggered run'] = """
type: command
short-summary: Run a specific triggered webjob hosted on a web app.
examples:
  - name: Run a specific triggered webjob hosted on a web app. (autogenerated)
    text: az webapp webjob triggered run --name MyWebApp --resource-group MyResourceGroup --webjob-name MyWebjob
    crafted: true
"""

aladdin_helps['aro delete'] = """
type: command
short-summary: Delete a cluster.
examples:
  - name: Delete a cluster. (autogenerated)
    text: az aro delete --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aro list-credentials'] = """
type: command
short-summary: List credentials of a cluster.
examples:
  - name: List credentials of a cluster. (autogenerated)
    text: az aro list-credentials --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['aro show'] = """
type: command
short-summary: Get the details of a cluster.
examples:
  - name: Get the details of a cluster (autogenerated)
    text: az aro show --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['backup container list'] = """
type: command
short-summary: List containers registered to a Recovery services vault.
examples:
  - name: List containers registered to a Recovery services vault. (autogenerated)
    text: az backup container list --resource-group MyResourceGroup --vault-name MyVault --backup-management-type AzureIaasVM
    crafted: true
"""

aladdin_helps['backup container show'] = """
type: command
short-summary: Show details of a container registered to a Recovery services vault.
examples:
  - name: Show details of a container registered to a Recovery services vault. (autogenerated)
    text: az backup container show --backup-management-type AzureIaasVM --name MyContainer --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup item list'] = """
type: command
short-summary: List all backed up items within a container.
examples:
  - name: List all backed up items within a container. (autogenerated)
    text: az backup item list --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup item show'] = """
type: command
short-summary: Show details of a particular backed up item.
examples:
  - name: Show details of a particular backed up item. (autogenerated)
    text: az backup item show --container-name MyContainer --ids {ids} --name MyBackedUpItem
    crafted: true
  - name: Show details of a particular backed up item. (autogenerated)
    text: az backup item show --backup-management-type AzureIaasVM --container-name MyContainer --name MyBackedUpItem --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup job list'] = """
type: command
short-summary: List all backup jobs of a Recovery Services vault.
examples:
  - name: List all backup jobs of a Recovery Services vault
    text: az backup job list --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup job show'] = """
type: command
short-summary: Show details of a particular job.
examples:
  - name: Show details of a particular job. (autogenerated)
    text: az backup job show --name MyJob --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup job stop'] = """
type: command
short-summary: Suspend or terminate a currently running job.
examples:
  - name: Suspend or terminate a currently running job. (autogenerated)
    text: az backup job stop --name MyJob --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup job wait'] = """
type: command
short-summary: Wait until either the job completes or the specified timeout value is reached.
examples:
  - name: Wait until either the job completes or the specified timeout value is reached
    text: az backup job wait --name MyJob --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup policy delete'] = """
type: command
short-summary: Delete a backup policy which doesn't have any associated backup items.
examples:
  - name: Delete a backup policy which doesn't have any associated backup items (autogenerated)
    text: az backup policy delete --name MyBackupPolicy --resource-group MyResourceGroup --subscription MySubscription --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup policy get-default-for-vm'] = """
type: command
short-summary: Get the default policy with default values to backup a VM.
examples:
  - name: Get the default policy with default values to backup a VM. (autogenerated)
    text: az backup policy get-default-for-vm --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup policy list'] = """
type: command
short-summary: List all policies for a Recovery services vault.
examples:
  - name: List all policies for a Recovery services vault. (autogenerated)
    text: az backup policy list --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup policy list-associated-items'] = """
type: command
short-summary: List all items protected by a backup policy.
examples:
  - name: List all items protected by a backup policy
    text: az backup policy list-associated-items --name MyBackupPolicy --resource-group MyResourceGroup --vault-name MyVault --backup-management-type AzureIaasVM
    crafted: true
"""

aladdin_helps['backup policy set'] = """
type: command
short-summary: Update the existing policy with the provided details.
examples:
  - name: Update the existing policy with the provided details. (autogenerated)
    text: az backup policy set --policy {policy} --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup policy show'] = """
type: command
short-summary: Show details of a particular policy.
examples:
  - name: Show details of a particular policy
    text: az backup policy show --name MyBackupPolicy --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup protection backup-now'] = """
type: command
short-summary: Perform an on-demand backup of a backed up item.
examples:
  - name: Perform an on-demand backup of a backed up item. (autogenerated)
    text: az backup protection backup-now --backup-management-type AzureIaasVM --container-name MyContainer --item-name MyItem --resource-group MyResourceGroup --retain-until 01-02-2018 --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup protection check-vm'] = """
type: command
short-summary: Find out whether the virtual machine is protected or not. If protected, it returns the recovery services vault ID, otherwise it returns empty.
examples:
  - name: Find out whether the virtual machine is protected or not. If protected, it returns the recovery services vault ID, otherwise it returns empty. (autogenerated)
    text: az backup protection check-vm --vm-id {vm-id}
    crafted: true
"""

aladdin_helps['backup protection disable'] = """
type: command
short-summary: Stop protecting a backed up item. Can retain the backed up data forever or choose to delete it.
examples:
  - name: Stop protecting a backed up item (autogenerated)
    text: az backup protection disable --backup-management-type AzureIaasVM --container-name MyContainer --delete-backup-data true --item-name MyItem --resource-group MyResourceGroup --vault-name MyVault --yes
    crafted: true
"""

aladdin_helps['backup protection enable-for-vm'] = """
type: command
short-summary: Start protecting a previously unprotected Azure VM as per the specified policy to a Recovery services vault.
examples:
  - name: Start protecting a previously unprotected Azure VM as per the specified policy to a Recovery services vault. (autogenerated)
    text: az backup protection enable-for-vm --policy-name MyPolicy --resource-group MyResourceGroup --vault-name MyVault --vm myVM
    crafted: true
"""

aladdin_helps['backup recoverypoint list'] = """
type: command
short-summary: List all recovery points of a backed up item.
examples:
  - name: List all recovery points of a backed up item. (autogenerated)
    text: az backup recoverypoint list --backup-management-type AzureIaasVM --container-name MyContainer --item-name MyItem --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup recoverypoint show'] = """
type: command
short-summary: Shows details of a particular recovery point.
examples:
  - name: Shows details of a particular recovery point. (autogenerated)
    text: az backup recoverypoint show --backup-management-type AzureIaasVM --container-name MyContainer --item-name MyItem --name MyRecoveryPoint --resource-group MyResourceGroup --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup restore files mount-rp'] = """
type: command
short-summary: Download a script which mounts files of a recovery point.
examples:
  - name: Download a script which mounts files of a recovery point. (autogenerated)
    text: az backup restore files mount-rp --container-name MyContainer --item-name MyItem --resource-group MyResourceGroup --rp-name MyRp --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup restore files unmount-rp'] = """
type: command
short-summary: Close access to the recovery point.
examples:
  - name: Close access to the recovery point. (autogenerated)
    text: az backup restore files unmount-rp --container-name MyContainer --item-name MyItem --resource-group MyResourceGroup --rp-name MyRp --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup restore restore-disks'] = """
type: command
short-summary: Restore disks of the backed VM from the specified recovery point.
examples:
  - name: Restore disks of the backed VM from the specified recovery point. (autogenerated)
    text: az backup restore restore-disks --container-name MyContainer --item-name MyItem --resource-group MyResourceGroup --rp-name MyRp --storage-account mystorageaccount --vault-name MyVault
    crafted: true
"""

aladdin_helps['backup vault backup-properties set'] = """
type: command
short-summary: Sets backup related properties of the Recovery Services vault.
examples:
  - name: Sets backup related properties of the Recovery Services vault. (autogenerated)
    text: az backup vault backup-properties set --backup-storage-redundancy GeoRedundant --name MyRecoveryServicesVault --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['backup vault backup-properties show'] = """
type: command
short-summary: Gets backup related properties of the Recovery Services vault.
examples:
  - name: Gets backup related properties of the Recovery Services vault. (autogenerated)
    text: az backup vault backup-properties show --name MyRecoveryServicesVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['backup vault create'] = """
type: command
short-summary: Create a new Recovery Services vault.
examples:
  - name: Create a new Recovery Services vault. (autogenerated)
    text: az backup vault create --location westus2 --name MyRecoveryServicesVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['backup vault delete'] = """
type: command
short-summary: Delete an existing Recovery services vault.
examples:
  - name: Delete an existing Recovery services vault. (autogenerated)
    text: az backup vault delete --name MyRecoveryServicesVault --resource-group MyResourceGroup --yes
    crafted: true
"""

aladdin_helps['backup vault show'] = """
type: command
short-summary: Show details of a particular Recovery service vault.
examples:
  - name: Show details of a particular Recovery service vault. (autogenerated)
    text: az backup vault show --name MyRecoveryServicesVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['batch account set'] = """
type: command
short-summary: Update properties for a Batch account.
examples:
  - name: Update properties for a Batch account. (autogenerated)
    text: az batch account set --name MyBatchAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['batch account show'] = """
type: command
short-summary: Get a specified Batch account or the currently set account.
examples:
  - name: Get a specified Batch account or the currently set account. (autogenerated)
    text: az batch account show --name MyBatchAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['batchai job create'] = """
type: command
short-summary: Create a job.
examples:
  - name: Create a job. (autogenerated)
    text: |
        az batchai job create --cluster "/subscriptions/00000000-0000-0000-0000-000000000000/\\
            resourceGroups/MyClusterResourceGroup/\\
            providers/Microsoft.BatchAI/workspaces/MyClusterWorkspace/clusters/MyCluster" --config-file job.json --experiment MyExperiment --name MyJob --resource-group MyJobResourceGroup --storage-account-name MyStorageAccount --workspace MyJobWorkspace
    crafted: true
"""

aladdin_helps['batchai list-usages'] = """
type: command
short-summary: Gets the current usage information as well as limits for Batch AI resources for given location.
examples:
  - name: Gets the current usage information as well as limits for Batch AI resources for given location. (autogenerated)
    text: az batchai list-usages --location eastus --subscription MySubscription
    crafted: true
"""



aladdin_helps['bot authsetting delete'] = """
type: command
short-summary: Delete an OAuth connection setting on a bot.
examples:
  - name: Delete an OAuth connection setting on a bot. (autogenerated)
    text: az bot authsetting delete --name MyResourceBot --resource-group MyResourceGroup --setting-name MySetting --subscription MySubscription
    crafted: true
"""

aladdin_helps['bot authsetting list'] = """
type: command
short-summary: Show all OAuth connection settings on a bot.
examples:
  - name: Show all OAuth connection settings on a bot. (autogenerated)
    text: az bot authsetting list --name MyResourceBot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot authsetting show'] = """
type: command
short-summary: Show details of an OAuth connection setting on a bot.
examples:
  - name: Show details of an OAuth connection setting on a bot. (autogenerated)
    text: az bot authsetting show --name MyResourceBot --resource-group MyResourceGroup --setting-name MySetting
    crafted: true
"""

aladdin_helps['bot create'] = """
type: command
short-summary: Create a new v4 SDK bot.
long-summary: Create a new v4 SDK bot.
examples:
  - name: Create a new v4 SDK bot. (autogenerated)
    text: az bot create --appid myAppId --kind registration --lang Csharp --name MyResourceBot --password password --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot delete'] = """
type: command
short-summary: Delete an existing bot.
examples:
  - name: Delete an existing bot. (autogenerated)
    text: az bot delete --name MyResourceBot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot directline delete'] = """
type: command
short-summary: Delete the Directline Channel on a bot
examples:
  - name: Delete the Directline Channel on a bot. (autogenerated)
    text: az bot directline delete --name MyResourceBot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot directline show'] = """
type: command
short-summary: Get details of the Directline Channel on a bot
examples:
  - name: Get details of the Directline Channel on a bot. (autogenerated)
    text: az bot directline show --name MyResourceBot --resource-group MyResourceGroup --with-secrets true
    crafted: true
"""

aladdin_helps['bot directline update'] = """
type: command
short-summary: Update the DirectLine Channel on a bot with only v3 protocol enabled.
examples:
  - name: Update the DirectLine Channel on a bot with only v3 protocol enabled. (autogenerated)
    text: az bot directline update --add-disabled true --name botName --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['bot facebook delete'] = """
type: command
short-summary: Delete the Facebook Channel on a bot
examples:
  - name: Delete the Facebook Channel on a bot. (autogenerated)
    text: az bot facebook delete --name MyResourceBot --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['bot facebook show'] = """
type: command
short-summary: Get details of the Facebook Channel on a bot
examples:
  - name: Get details of the Facebook Channel on a bot. (autogenerated)
    text: az bot facebook show --name MyResourceBot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot msteams show'] = """
type: command
short-summary: Get details of the Microsoft Teams Channel on a bot
examples:
  - name: Get details of the Microsoft Teams Channel on a bot. (autogenerated)
    text: az bot msteams show --name MyResourceBot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['bot webchat show'] = """
type: command
short-summary: Get details of the Webchat Channel on a bot
examples:
  - name: Get details of the Webchat Channel on a bot. (autogenerated)
    text: az bot webchat show --name MyResourceBot --resource-group MyResourceGroup --with-secrets true
    crafted: true
"""

aladdin_helps['cdn endpoint rule condition add'] = """
type: command
short-summary: Add a condition to a delivery rule.
examples:
  - name: Add a condition to a delivery rule. (autogenerated)
    text: |
        az cdn endpoint rule condition add --match-values "TH" --match-variable RemoteAddress --name endpoint --negate-condition true --operator GeoMatch --profile-name profile --resource-group group --rule-name name --subscription MySubscription
    crafted: true
"""

aladdin_helps['cdn endpoint waf policy set'] = """
type: command
short-summary: Set the CDN WAF policy applied to a CDN endpoint
parameters:
  - name: --waf-policy-id
    type: string
    short-summary: >
        The Resource ID of the CDN WAF policy to apply to this endpoint.
  - name: --waf-policy-subscription-id
    type: string
    short-summary: >
        The Resource ID of the CDN WAF policy to apply to this endpoint. ignored
        if --waf-policy-id is set.
  - name: --waf-policy-resource-group-name
    type: string
    short-summary: >
        The resource group of the CDN WAF policy to apply to this endpoint.
        Ignored if --waf-policy-id is set.
  - name: --waf-policy-name
    type: string
    short-summary: >
        The name of the CDN WAF policy to apply to this endpoint. Ignored if
        --waf-policy-id is set.
examples:
  - name: Set the CDN WAF policy applied to a CDN endpoint. (autogenerated)
    text: az cdn endpoint waf policy set --endpoint-name endpoint --profile-name profile --resource-group group --waf-policy-name MyWafPolicy --waf-policy-resource-group-name MyWafPolicyResourceGroup --waf-policy-subscription-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['cdn profile create'] = """
type: command
short-summary: Create a new CDN profile.
parameters:
  - name: --sku
    type: string
    short-summary: >
        The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
        Defaults to Standard_Akamai.
examples:
  - name: Create a new CDN profile. (autogenerated)
    text: az cdn profile create --location westus2 --name profile --resource-group group --sku Standard_Verizon
    crafted: true
"""

aladdin_helps['cdn profile update'] = """
type: command
short-summary: Update a CDN profile.
examples:
  - name: Update a CDN profile. (autogenerated)
    text: az cdn profile update --name MyCDNProfileWhichIsUniqueWithinResourceGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cloud set'] = """
type: command
short-summary: Set the active cloud.
examples:
  - name: Set the active cloud. (autogenerated)
    text: |
        az cloud set --name MyRegisteredCloud
    crafted: true
"""

aladdin_helps['cloud unregister'] = """
type: command
short-summary: Unregister a cloud.
examples:
  - name: Unregister a cloud. (autogenerated)
    text: |
        az cloud unregister --name MyRegisteredCloud
    crafted: true
"""

aladdin_helps['cloud update'] = """
type: command
short-summary: Update the configuration of a cloud.
examples:
  - name: Update the configuration of a cloud. (autogenerated)
    text: |
        az cloud update --profile latest
    crafted: true
"""

aladdin_helps['cognitiveservices account create'] = """
type: command
short-summary: Manage Azure Cognitive Services accounts.
long-summary: This article lists the Azure CLI commands for Azure Cognitive Services account and subscription management only. Refer to the documentation at https://docs.microsoft.com/azure/cognitive-services/ for individual services to learn how to use the APIs and supported SDKs.
parameters:
  - name: --kind
    populator-commands:
      - az cognitiveservices account list-kinds
  - name: --sku
    populator-commands:
      - az cognitiveservices account list-skus
examples:
  - name: Manage Azure Cognitive Services accounts. (autogenerated)
    text: az cognitiveservices account create --kind Face --location WestEurope --name myresource --resource-group myResourceGroup --sku S0 --subscription MySubscription --yes
    crafted: true
"""

aladdin_helps['cognitiveservices account keys list'] = """
type: command
short-summary: Manage Azure Cognitive Services accounts.
long-summary: This article lists the Azure CLI commands for Azure Cognitive Services account and subscription management only. Refer to the documentation at https://docs.microsoft.com/azure/cognitive-services/ for individual services to learn how to use the APIs and supported SDKs.
examples:
  - name: Manage Azure Cognitive Services accounts. (autogenerated)
    text: az cognitiveservices account keys list --name myresource --resource-group cognitive-services-resource-group --subscription MySubscription
    crafted: true
"""

aladdin_helps['cognitiveservices account network-rule list'] = """
type: command
short-summary: List network rules.
examples:
  - name: List network rules.
    text: az cognitiveservices account network-rule list --name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cognitiveservices account network-rule remove'] = """
type: command
short-summary: Remove a network rule.
examples:
  - name: Remove a network rule.
    text: az cognitiveservices account network-rule remove --name MyAccount --resource-group MyResourceGroup --subnet mysubnet
    crafted: true
  - name: Remove a network rule.
    text: az cognitiveservices account network-rule remove --name MyAccount --ip-address 23.45.1.0/24 --resource-group MyResourceGroup
    crafted: true
"""



aladdin_helps['consumption budget delete'] = """
type: command
short-summary: Delete a budget for an Azure subscription.
examples:
  - name: Delete a budget for an Azure subscription. (autogenerated)
    text: az consumption budget delete --budget-name MyBudget --subscription MySubscription
    crafted: true
"""

aladdin_helps['consumption budget show'] = """
type: command
short-summary: Show budget for an Azure subscription.
examples:
  - name: Show budget for an Azure subscription. (autogenerated)
    text: az consumption budget show --budget-name MyBudget
    crafted: true
"""

aladdin_helps['container attach'] = """
type: command
short-summary: Attach local standard output and error streams to a container in a container group.
examples:
  - name: Attach local standard output and error streams to a container in a container group. (autogenerated)
    text: az container attach --name MyContainerGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['container delete'] = """
type: command
short-summary: Delete a container group.
examples:
  - name: Delete a container group. (autogenerated)
    text: az container delete --name MyContainerGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['container logs'] = """
type: command
short-summary: Examine the logs for a container in a container group.
examples:
  - name: Examine the logs for a container in a container group. (autogenerated)
    text: az container logs --name MyContainerGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['container show'] = """
type: command
short-summary: Get the details of a container group.
examples:
  - name: Get the details of a container group. (autogenerated)
    text: az container show --name MyContainerGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace create'] = """
type: command
short-summary: Create an Cassandra keyspace under an Azure Cosmos DB account.
examples:
  - name: Create an Cassandra keyspace under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb cassandra keyspace create --account-name MyAccount --name MyKeyspace --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace delete'] = """
type: command
short-summary: Delete the Cassandra keyspace under an Azure Cosmos DB account.
examples:
  - name: Delete the Cassandra keyspace under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb cassandra keyspace delete --account-name MyAccount --name MyKeyspace --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace list'] = """
type: command
short-summary: List the Cassandra keyspaces under an Azure Cosmos DB account.
examples:
  - name: List the Cassandra keyspaces under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb cassandra keyspace list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace show'] = """
type: command
short-summary: Show the details of a Cassandra keyspace under an Azure Cosmos DB account.
examples:
  - name: Show the details of a Cassandra keyspace under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb cassandra keyspace show --account-name MyAccount --name MyKeyspace --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace throughput show'] = """
type: command
short-summary: Get the throughput of the Cassandra keyspace under an Azure Cosmos DB account.
examples:
  - name: Get the throughput of the Cassandra keyspace under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb cassandra keyspace throughput show --account-name MyAccount --name MyKeyspace --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['cosmosdb cassandra keyspace throughput update'] = """
type: command
short-summary: Update the throughput of the Cassandra keyspace under an Azure Cosmos DB account.
examples:
  - name: Update the throughput of the Cassandra keyspace under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb cassandra keyspace throughput update --account-name MyAccount --name MyKeyspace --resource-group MyResourceGroup --throughput "500"
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table create'] = """
type: command
short-summary: Create an Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Create an Azure Cosmos DB Cassandra table.
    text: az cosmosdb cassandra table create -g MyResourceGroup -a MyAccount -k MyKeyspace -n MyTable --schema @indexes-file.json --throughput "500" --ttl 1000
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table delete'] = """
type: command
short-summary: Delete the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Delete the Cassandra table under an Azure Cosmos DB Cassandra keyspace. (autogenerated)
    text: az cosmosdb cassandra table delete --account-name MyAccount --keyspace-name MyKeyspace --name MyTable --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table list'] = """
type: command
short-summary: List the Cassandra tables under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: List the Cassandra tables under an Azure Cosmos DB Cassandra keyspace. (autogenerated)
    text: az cosmosdb cassandra table list --account-name MyAccount --keyspace-name MyKeyspace --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table show'] = """
type: command
short-summary: Show the details of a Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Show the details of a Cassandra table under an Azure Cosmos DB Cassandra keyspace. (autogenerated)
    text: az cosmosdb cassandra table show --account-name MyAccount --keyspace-name MyKeyspace --name MyTable --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table throughput show'] = """
type: command
short-summary: Get the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Get the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace (autogenerated)
    text: az cosmosdb cassandra table throughput show --account-name MyAccount --keyspace-name MyKeyspace --name MyTable --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table throughput update'] = """
type: command
short-summary: Update the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Update the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace. (autogenerated)
    text: |
        az cosmosdb cassandra table throughput update --account-name MyAccount --keyspace-name MyKeyspace --name MyTable --resource-group MyResourceGroup --throughput "500"
    crafted: true
"""

aladdin_helps['cosmosdb cassandra table update'] = """
type: command
short-summary: Update an Cassandra table under an Azure Cosmos DB Cassandra keyspace.
examples:
  - name: Update an Cassandra table under an Azure Cosmos DB Cassandra keyspace. (autogenerated)
    text: az cosmosdb cassandra table update --account-name MyAccount --keyspace-name MyKeyspace --name MyTable --resource-group MyResourceGroup --schema @indexes-file.json
    crafted: true
"""

aladdin_helps['cosmosdb check-name-exists'] = """
type: command
short-summary: Checks if an Azure Cosmos DB account name exists.
examples:
  - name: Checks if an Azure Cosmos DB account name exists. (autogenerated)
    text: az cosmosdb check-name-exists --name MyCosmosDBDatabaseAccount
    crafted: true
"""

aladdin_helps['cosmosdb create'] = """
type: command
short-summary: Creates a new Azure Cosmos DB database account.
parameters:
  - name: --locations
    short-summary: Add a location to the Cosmos DB database account
    long-summary: |
        Usage:          --locations KEY=VALUE [KEY=VALUE ...]
        Required Keys:  regionName, failoverPriority
        Optional Key:   isZoneRedundant
        Default:        single region account in the location of the specified resource group.
        Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
        Multiple locations can be specified by using more than one `--locations` argument.
examples:
  - name: Creates a new Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['cosmosdb database create'] = """
type: command
short-summary: Creates an Azure Cosmos DB database
examples:
  - name: Creates an Azure Cosmos DB database. (autogenerated)
    text: az cosmosdb database create --db-name MyDatabase --name MyCosmosDBDatabaseAccount --resource-group-name MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb database delete'] = """
type: command
short-summary: Deletes an Azure Cosmos DB database
examples:
  - name: Deletes an Azure Cosmos DB database (autogenerated)
    text: az cosmosdb database delete --db-name MyDatabase --name MyCosmosDBDatabaseAccount --resource-group-name MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb database exists'] = """
type: command
short-summary: Returns a boolean indicating whether the database exists
examples:
  - name: Returns a boolean indicating whether the database exists (autogenerated)
    text: az cosmosdb database exists --db-name MyDatabase --name MyCosmosDBDatabaseAccount --resource-group-name MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb database list'] = """
type: command
short-summary: Lists all Azure Cosmos DB databases
examples:
  - name: Lists all Azure Cosmos DB databases (autogenerated)
    text: az cosmosdb database list --name MyCosmosDBDatabaseAccount --resource-group-name MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb database show'] = """
type: command
short-summary: Shows an Azure Cosmos DB database
examples:
  - name: Shows an Azure Cosmos DB database (autogenerated)
    text: az cosmosdb database show --db-name MyDatabase --name MyCosmosDBDatabaseAccount --resource-group-name MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb delete'] = """
type: command
short-summary: Deletes an Azure Cosmos DB database account.
examples:
  - name: Deletes an Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb delete --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb failover-priority-change'] = """
type: command
short-summary: Changes the failover priority for the Azure Cosmos DB database account.
examples:
  - name: Changes the failover priority for the Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb failover-priority-change --failover-policies regionName=failoverPriority --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin database create'] = """
type: command
short-summary: Create an Gremlin database under an Azure Cosmos DB account.
examples:
  - name: Create an Gremlin database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb gremlin database create --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin database list'] = """
type: command
short-summary: List the Gremlin databases under an Azure Cosmos DB account.
examples:
  - name: List the Gremlin databases under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb gremlin database list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin database show'] = """
type: command
short-summary: Show the details of a Gremlin database under an Azure Cosmos DB account.
examples:
  - name: Show the details of a Gremlin database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb gremlin database show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin database throughput show'] = """
type: command
short-summary: Get the throughput of the Gremlin database under an Azure Cosmos DB account.
examples:
  - name: Get the throughput of the Gremlin database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb gremlin database throughput show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin database throughput update'] = """
type: command
short-summary: Update the throughput of the Gremlin database under an Azure Cosmos DB account.
examples:
  - name: Update the throughput of the Gremlin database under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb gremlin database throughput update --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb gremlin graph create'] = """
type: command
short-summary: Create an Gremlin graph under an Azure Cosmos DB Gremlin database.
examples:
  - name: Create an Azure Cosmos DB Gremlin graph.
    text: az cosmosdb gremlin graph create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyGraph --partition-key-path "/my/path" --idx @policy-file.json --ttl 1000 --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb gremlin graph show'] = """
type: command
short-summary: Show the details of a Gremlin graph under an Azure Cosmos DB Gremlin database.
examples:
  - name: Show the details of a Gremlin graph under an Azure Cosmos DB Gremlin database. (autogenerated)
    text: az cosmosdb gremlin graph show --account-name MyAccount --database-name MyDatabase --name MyGraph --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb gremlin graph throughput update'] = """
type: command
short-summary: Update the throughput of the Gremlin graph under an Azure Cosmos DB Gremlin database.
examples:
  - name: Update the throughput of the Gremlin graph under an Azure Cosmos DB Gremlin database. (autogenerated)
    text: |
        az cosmosdb gremlin graph throughput update --account-name MyAccount --database-name MyDatabase --name MyGrapth --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb keys list'] = """
type: command
short-summary: List the access keys or connection strings for a Azure Cosmos DB database account.
examples:
  - name: List the access keys or connection strings for a Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb keys list --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription --type keys
    crafted: true
"""

aladdin_helps['cosmosdb list-connection-strings'] = """
type: command
short-summary: List the connection strings for a Azure Cosmos DB database account.
examples:
  - name: List the connection strings for a Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb list-connection-strings --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb list-keys'] = """
type: command
short-summary: List the access keys for a Azure Cosmos DB database account.
examples:
  - name: List the access keys for a Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb list-keys --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['cosmosdb list-read-only-keys'] = """
type: command
short-summary: List the read-only access keys for a Azure Cosmos DB database account.
examples:
  - name: List the read-only access keys for a Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb list-read-only-keys --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection create'] = """
type: command
short-summary: Create an MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Create an Azure Cosmos DB MongoDB collection.
    text: az cosmosdb mongodb collection create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyCollection --shard "ShardingKey" --idx @indexes-file.json --throughput "500"
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection delete'] = """
type: command
short-summary: Delete the MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Delete the MongoDB collection under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: az cosmosdb mongodb collection delete --account-name MyAccount --database-name MyDatabase --name MyCollection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection list'] = """
type: command
short-summary: List the MongoDB collections under an Azure Cosmos DB MongoDB database.
examples:
  - name: List the MongoDB collections under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: az cosmosdb mongodb collection list --account-name MyAccount --database-name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection show'] = """
type: command
short-summary: Show the details of a MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Show the details of a MongoDB collection under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: az cosmosdb mongodb collection show --account-name MyAccount --database-name MyDatabase --name MyCollection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection throughput show'] = """
type: command
short-summary: Get the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Get the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: az cosmosdb mongodb collection throughput show --account-name MyAccount --database-name MyDatabase --name MyCollection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection throughput update'] = """
type: command
short-summary: Update the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Update the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: |
        az cosmosdb mongodb collection throughput update --account-name MyAccount --database-name MyDatabase --name MyCollection --resource-group MyResourceGroup --throughput "500"
    crafted: true
"""

aladdin_helps['cosmosdb mongodb collection update'] = """
type: command
short-summary: Update an MongoDB collection under an Azure Cosmos DB MongoDB database.
examples:
  - name: Update an MongoDB collection under an Azure Cosmos DB MongoDB database. (autogenerated)
    text: az cosmosdb mongodb collection update --account-name MyAccount --database-name MyDatabase --idx @indexes-file.json --name MyCollection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database create'] = """
type: command
short-summary: Create an MongoDB database under an Azure Cosmos DB account.
examples:
  - name: Create an MongoDB database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb mongodb database create --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database delete'] = """
type: command
short-summary: Delete the MongoDB database under an Azure Cosmos DB account.
examples:
  - name: Delete the MongoDB database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb mongodb database delete --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database list'] = """
type: command
short-summary: List the MongoDB databases under an Azure Cosmos DB account.
examples:
  - name: List the MongoDB databases under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb mongodb database list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database show'] = """
type: command
short-summary: Show the details of a MongoDB database under an Azure Cosmos DB account.
examples:
  - name: Show the details of a MongoDB database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb mongodb database show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database throughput show'] = """
type: command
short-summary: Get the throughput of the MongoDB database under an Azure Cosmos DB account.
examples:
  - name: Get the throughput of the MongoDB database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb mongodb database throughput show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb mongodb database throughput update'] = """
type: command
short-summary: Update the throughput of the MongoDB database under an Azure Cosmos DB account.
examples:
  - name: Update the throughput of the MongoDB database under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb mongodb database throughput update --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup --throughput "500"
    crafted: true
"""

aladdin_helps['cosmosdb regenerate-key'] = """
type: command
short-summary: Regenerate an access key for a Azure Cosmos DB database account.
examples:
  - name: Regenerate an access key for a Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb regenerate-key --key-kind primary --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb show'] = """
type: command
short-summary: Get the details of an Azure Cosmos DB database account.
examples:
  - name: Get the details of an Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb show --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql container create'] = """
type: command
short-summary: Create an SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Create an Azure Cosmos DB SQL container.
    text: az cosmosdb sql container create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyContainer --partition-key-path "/my/path" --idx @policy-file.json --ttl 1000 --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb sql container delete'] = """
type: command
short-summary: Delete the SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Delete the SQL container under an Azure Cosmos DB SQL database. (autogenerated)
    text: az cosmosdb sql container delete --account-name MyAccount --database-name MyDatabase --name MyContainer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql container list'] = """
type: command
short-summary: List the SQL containers under an Azure Cosmos DB SQL database.
examples:
  - name: List the SQL containers under an Azure Cosmos DB SQL database. (autogenerated)
    text: az cosmosdb sql container list --account-name MyAccount --database-name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql container show'] = """
type: command
short-summary: Show the details of a SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Show the details of a SQL container under an Azure Cosmos DB SQL database. (autogenerated)
    text: az cosmosdb sql container show --account-name MyAccount --database-name MyDatabase --name MyContainer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql container throughput show'] = """
type: command
short-summary: Get the throughput of the SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Get the throughput of the SQL container under an Azure Cosmos DB SQL database. (autogenerated)
    text: az cosmosdb sql container throughput show --account-name MyAccount --database-name MyDatabase --name MyContainer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql container throughput update'] = """
type: command
short-summary: Update the throughput of the SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Update the throughput of the SQL container under an Azure Cosmos DB SQL database. (autogenerated)
    text: |
        az cosmosdb sql container throughput update --account-name MyAccount --database-name MyDatabase --name MyContainer --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb sql container update'] = """
type: command
short-summary: Update an SQL container under an Azure Cosmos DB SQL database.
examples:
  - name: Update an SQL container under an Azure Cosmos DB SQL database. (autogenerated)
    text: az cosmosdb sql container update --account-name MyAccount --database-name MyDatabase --name MyContainer --resource-group MyResourceGroup --ttl 1000
    crafted: true
"""

aladdin_helps['cosmosdb sql database create'] = """
type: command
short-summary: Create an SQL database under an Azure Cosmos DB account.
examples:
  - name: Create an SQL database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb sql database create --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql database delete'] = """
type: command
short-summary: Delete the SQL database under an Azure Cosmos DB account.
examples:
  - name: Delete the SQL database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb sql database delete --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql database list'] = """
type: command
short-summary: List the SQL databases under an Azure Cosmos DB account.
examples:
  - name: List the SQL databases under an Azure Cosmos DB account (autogenerated)
    text: az cosmosdb sql database list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql database show'] = """
type: command
short-summary: Show the details of a SQL database under an Azure Cosmos DB account.
examples:
  - name: Show the details of a SQL database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb sql database show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql database throughput show'] = """
type: command
short-summary: Get the throughput of the SQL database under an Azure Cosmos DB account.
examples:
  - name: Get the throughput of the SQL database under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb sql database throughput show --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb sql database throughput update'] = """
type: command
short-summary: Update the throughput of the SQL database under an Azure Cosmos DB account.
examples:
  - name: Update the throughput of the SQL database under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb sql database throughput update --account-name MyAccount --name MyDatabase --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb sql stored-procedure create'] = """
type: command
short-summary: Create an SQL stored procedure under an Azure Cosmos DB SQL container.
examples:
  - name: Create an Azure Cosmos DB SQL stored procedure.
    text: az cosmosdb sql stored-procedure create -g MyResourceGroup -a MyAccount -d MyDatabase -c MyContainer -n MyStoredProcedure -b StoredProcedureBody
    crafted: true
"""

aladdin_helps['cosmosdb sql trigger create'] = """
type: command
short-summary: Create an SQL trigger under an Azure Cosmos DB SQL container.
examples:
  - name: Create an Azure Cosmos DB SQL trigger.
    text: az cosmosdb sql trigger create -g MyResourceGroup -a MyAccount -d MyDatabase -c MyContainer -n MyTrigger -b TriggerBody
    crafted: true
"""

aladdin_helps['cosmosdb sql user-defined-function create'] = """
type: command
short-summary: Create an SQL user defined function under an Azure Cosmos DB SQL container.
examples:
  - name: Create an Azure Cosmos DB SQL user defined function.
    text: az cosmosdb sql user-defined-function create -g MyResourceGroup -a MyAccount -d MyDatabase -c MyContainer -n MyUserDefinedFunction -b UserDefinedFunctionBody
    crafted: true
"""

aladdin_helps['cosmosdb table create'] = """
type: command
short-summary: Create an Table under an Azure Cosmos DB account.
examples:
  - name: Create an Table under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb table create --account-name MyAccount --name MyTable --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb table delete'] = """
type: command
short-summary: Delete the Table under an Azure Cosmos DB account.
examples:
  - name: Delete the Table under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb table delete --account-name MyAccount --name MyTable --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb table list'] = """
type: command
short-summary: List the Tables under an Azure Cosmos DB account.
examples:
  - name: List the Tables under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb table list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb table show'] = """
type: command
short-summary: Show the details of a Table under an Azure Cosmos DB account.
examples:
  - name: Show the details of a Table under an Azure Cosmos DB account. (autogenerated)
    text: az cosmosdb table show --account-name MyAccount --name MyTable --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['cosmosdb table throughput update'] = """
type: command
short-summary: Update the throughput of the Table under an Azure Cosmos DB account.
examples:
  - name: Update the throughput of the Table under an Azure Cosmos DB account. (autogenerated)
    text: |
        az cosmosdb table throughput update --account-name MyAccount --name MyTable --resource-group MyResourceGroup --throughput "700"
    crafted: true
"""

aladdin_helps['cosmosdb update'] = """
type: command
short-summary: Update an Azure Cosmos DB database account.
parameters:
  - name: --locations
    short-summary: Add a location to the Cosmos DB database account
    long-summary: |
        Usage:          --locations KEY=VALUE [KEY=VALUE ...]
        Required Keys:  regionName, failoverPriority
        Optional Key:   isZoneRedundant
        Default:        single region account in the location of the specified resource group.
        Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
        Multiple locations can be specified by using more than one `--locations` argument.
examples:
  - name: Update an Azure Cosmos DB database account. (autogenerated)
    text: az cosmosdb update --capabilities EnableGremlin --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['deploymentmanager service-unit update'] = """
type: command
short-summary: Updates the service unit.
examples:
  - name: Updates the service unit. (autogenerated)
    text: az deploymentmanager service-unit update --deployment-mode Incremental --resource-group rg1 --service-name contosoService1 --service-topology-name contosoServiceTopology --service-unit-name ContosoService1Storage
    crafted: true
"""



aladdin_helps['dls account create'] = """
type: command
short-summary: Creates a Data Lake Store account.
parameters:
  - name: --key-vault-id
    type: string
    short-summary: 'Key vault for the user-assigned encryption type.'
  - name: --key-name
    type: string
    short-summary: 'Key name for the user-assigned encryption type.'
examples:
  - name: Creates a Data Lake Store account. (autogenerated)
    text: az dls account create --account mydatalakestoragegen1 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['dls account delete'] = """
type: command
short-summary: Delete a Data Lake Store account.
examples:
  - name: Delete a Data Lake Store account. (autogenerated)
    text: az dls account delete --account mydatalakestoragegen1
    crafted: true
"""

aladdin_helps['dls account enable-key-vault'] = """
type: command
short-summary: Enable the use of Azure Key Vault for encryption of a Data Lake Store account.
examples:
  - name: Enable the use of Azure Key Vault for encryption of a Data Lake Store account. (autogenerated)
    text: az dls account enable-key-vault --account mydatalakestoragegen1
    crafted: true
"""

aladdin_helps['dls account firewall list'] = """
type: command
short-summary: Lists firewall rules in a Data Lake Store account.
examples:
  - name: Lists firewall rules in a Data Lake Store account. (autogenerated)
    text: az dls account firewall list --account mydatalakestoragegen1 --subscription MySubscription
    crafted: true
"""

aladdin_helps['dls account list'] = """
type: command
short-summary: Lists available Data Lake Store accounts.
examples:
  - name: Lists available Data Lake Store accounts. (autogenerated)
    text: az dls account list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['dls account show'] = """
type: command
short-summary: Get the details of a Data Lake Store account.
examples:
  - name: Get the details of a Data Lake Store account. (autogenerated)
    text: az dls account show --account mydatalakestoragegen1
    crafted: true
"""

aladdin_helps['dls account update'] = """
type: command
short-summary: Updates a Data Lake Store account.
examples:
  - name: Updates a Data Lake Store account. (autogenerated)
    text: az dls account update --account mydatalakestoragegen1 --allow-azure-ips Enabled --firewall-state Enabled --resource-group MyResourceGroup --subscription MySubscription --tags key=value
    crafted: true
"""

aladdin_helps['dls fs access remove-all'] = """
type: command
short-summary: Remove the access control list for a file or folder.
examples:
  - name: Remove the access control list for a file or folder. (autogenerated)
    text: az dls fs access remove-all --account dpreptestfiles --path / --subscription MySubscription
    crafted: true
"""

aladdin_helps['dls fs access remove-entry'] = """
type: command
short-summary: Remove entries for the access control list of a file or folder.
examples:
  - name: Remove entries for the access control list of a file or folder. (autogenerated)
    text: az dls fs access remove-entry --account dpreptestfiles --acl-spec user:00000000-0000-0000-0000-000000000000:-w- --path /
    crafted: true
"""

aladdin_helps['dls fs access set'] = """
type: command
short-summary: Replace the existing access control list for a file or folder.
examples:
  - name: Replace the existing access control list for a file or folder. (autogenerated)
    text: az dls fs access set --account dpreptestfiles --acl-spec user:00000000-0000-0000-0000-000000000000:-w- --path / --subscription MySubscription
    crafted: true
"""

aladdin_helps['dls fs access set-entry'] = """
type: command
short-summary: Update the access control list for a file or folder.
examples:
  - name: Update the access control list for a file or folder. (autogenerated)
    text: az dls fs access set-entry --account dpreptestfiles --acl-spec user:00000000-0000-0000-0000-000000000000:-w- --path /
    crafted: true
"""

aladdin_helps['dls fs access set-permission'] = """
type: command
short-summary: Set the permissions for a file or folder in a Data Lake Store account.
parameters:
  - name: --permission
    type: int
    short-summary: The octal representation of the permissions for user, group and mask.
example:
  - name: Set full permissions for a user, read-execute permissions for a group, and execute permissions for all.
    text: az fs access set-permission --path /path/to/file.txt --permission 751
examples:
  - name: Set the permissions for a file or folder in a Data Lake Store account. (autogenerated)
    text: az dls fs access set-permission --account dpreptestfiles --path / --permission 777 --subscription MySubscription
    crafted: true
"""

aladdin_helps['dls fs access show'] = """
type: command
short-summary: Display the access control list (ACL).
examples:
  - name: Display the access control list (ACL). (autogenerated)
    text: az dls fs access show --account {account} --path {path}
    crafted: true
"""

aladdin_helps['dls fs create'] = """
type: command
short-summary: Creates a file or folder in a Data Lake Store account.
parameters:
  - name: --content
    type: string
    short-summary: 'Content for the file to contain upon creation.'
examples:
  - name: Creates a file or folder in a Data Lake Store account. (autogenerated)
    text: az dls fs create --account {account} --folder  --path {path}
    crafted: true
"""

aladdin_helps['dls fs delete'] = """
type: command
short-summary: Delete a file or folder in a Data Lake Store account.
examples:
  - name: Delete a file or folder in a Data Lake Store account. (autogenerated)
    text: az dls fs delete --account {account} --path {path}
    crafted: true
"""

aladdin_helps['dls fs download'] = """
type: command
short-summary: Download a file or folder from a Data Lake Store account to the local machine.
parameters:
  - name: --source-path
    type: string
    short-summary: The full path in the Data Lake Store filesystem to download the file or folder from.
  - name: --destination-path
    type: string
    short-summary: The local path where the file or folder will be downloaded to.
  - name: --thread-count
    type: int
    short-summary: 'Parallelism of the download. Default: The number of cores in the local machine.'
  - name: --chunk-size
    type: int
    short-summary: Size of a chunk, in bytes.
    long-summary: Large files are split into chunks. Files smaller than this size will always be transferred in a single thread.
  - name: --buffer-size
    type: int
    short-summary: Size of the transfer buffer, in bytes.
    long-summary: A buffer cannot be bigger than a chunk and cannot be smaller than a block.
  - name: --block-size
    type: int
    short-summary: Size of a block, in bytes.
    long-summary: Within each chunk, a smaller block is written for each API call. A block cannot be bigger than a chunk and must be bigger than a buffer.
examples:
  - name: Download a file or folder from a Data Lake Store account to the local machine. (autogenerated)
    text: az dls fs download --account {account} --destination-path {destination-path} --source-path {source-path}
    crafted: true
"""

aladdin_helps['dls fs list'] = """
type: command
short-summary: List the files and folders in a Data Lake Store account.
examples:
  - name: List the files and folders in a Data Lake Store account. (autogenerated)
    text: az dls fs list --account {account} --path {path}
    crafted: true
"""

aladdin_helps['dls fs move'] = """
type: command
short-summary: Move a file or folder in a Data Lake Store account.
parameters:
  - name: --source-path
    type: list
    short-summary: The file or folder to move.
  - name: --destination-path
    type: string
    short-summary: The destination path in the Data Lake Store account.
examples:
  - name: Move a file or folder in a Data Lake Store account. (autogenerated)
    text: az dls fs move --account {account} --destination-path {destination-path} --source-path {source-path}
    crafted: true
"""

aladdin_helps['dls fs preview'] = """
type: command
short-summary: Preview the content of a file in a Data Lake Store account.
parameters:
  - name: --length
    type: long
    short-summary: The amount of data to preview in bytes.
    long-summary: If not specified, attempts to preview the full file. If the file is > 1MB `--force` must be specified.
  - name: --offset
    type: long
    short-summary: The position in bytes to start the preview from.
examples:
  - name: Preview the content of a file in a Data Lake Store account. (autogenerated)
    text: az dls fs preview --account dpreptestfiles --path /
    crafted: true
"""

aladdin_helps['dls fs show'] = """
type: command
short-summary: Get file or folder information in a Data Lake Store account.
examples:
  - name: Get file or folder information in a Data Lake Store account. (autogenerated)
    text: az dls fs show --account {account} --path {path}
    crafted: true
"""

aladdin_helps['dls fs test'] = """
type: command
short-summary: Test for the existence of a file or folder in a Data Lake Store account.
examples:
  - name: Test for the existence of a file or folder in a Data Lake Store account. (autogenerated)
    text: az dls fs test --account {account} --path {path}
    crafted: true
"""

aladdin_helps['dls fs upload'] = """
type: command
short-summary: Upload a file or folder to a Data Lake Store account.
parameters:
  - name: --source-path
    type: string
    short-summary: The path to the file or folder to upload.
  - name: --destination-path
    type: string
    short-summary: The full path in the Data Lake Store filesystem to upload the file or folder to.
  - name: --thread-count
    type: int
    short-summary: 'Parallelism of the upload. Default: The number of cores in the local machine.'
  - name: --chunk-size
    type: int
    short-summary: Size of a chunk, in bytes.
    long-summary: Large files are split into chunks. Files smaller than this size will always be transferred in a single thread.
  - name: --buffer-size
    type: int
    short-summary: Size of the transfer buffer, in bytes.
    long-summary: A buffer cannot be bigger than a chunk and cannot be smaller than a block.
  - name: --block-size
    type: int
    short-summary: Size of a block, in bytes.
    long-summary: Within each chunk, a smaller block is written for each API call. A block cannot be bigger than a chunk and must be bigger than a buffer.

examples:
  - name: Upload a file or folder to a Data Lake Store account. (autogenerated)
    text: az dls fs upload --account {account} --destination-path {destination-path} --overwrite  --source-path {source-path}
    crafted: true
"""

aladdin_helps['dms check-name'] = """
type: command
short-summary: Check if a given DMS instance name is available in a given region as well as the name's validity.
parameters:
  - name: --name -n
    type: string
    short-summary: >
        The Service name to check.
examples:
  - name: Check if a given DMS instance name is available in a given region as well as the name's validity. (autogenerated)
    text: az dms check-name --location westus2 --name MyService
    crafted: true
"""

aladdin_helps['dms check-status'] = """
type: command
short-summary: Perform a health check and return the status of the service and virtual machine size.
examples:
  - name: Perform a health check and return the status of the service and virtual machine size. (autogenerated)
    text: az dms check-status --name MyService --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['dms delete'] = """
type: command
short-summary: Delete an instance of the Data Migration Service.
parameters:
  - name: --delete-running-tasks
    type: bool
    short-summary: >
        Cancel any running tasks before deleting the service.
examples:
  - name: Delete an instance of the Data Migration Service. (autogenerated)
    text: az dms delete --name MyService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['dms project delete'] = """
type: command
short-summary: Delete a Project.
parameters:
  - name: --delete-running-tasks
    type: bool
    short-summary: >
        Cancel any running tasks before deleting the Project.
examples:
  - name: Delete a Project. (autogenerated)
    text: az dms project delete --name MyProject --resource-group MyResourceGroup --service-name MyService
    crafted: true
"""

aladdin_helps['dms project list'] = """
type: command
short-summary: List the Projects within an instance of DMS.
examples:
  - name: List the Projects within an instance of DMS. (autogenerated)
    text: az dms project list --resource-group MyResourceGroup --service-name MyService --subscription MySubscription
    crafted: true
"""

aladdin_helps['dms project show'] = """
type: command
short-summary: Show the details of a migration Project.
examples:
  - name: Show the details of a migration Project. (autogenerated)
    text: az dms project show --name MyProject --resource-group MyResourceGroup --service-name MyService
    crafted: true
"""

aladdin_helps['dms project task delete'] = """
type: command
short-summary: Delete a migration Task.
parameters:
  - name: --delete-running-tasks
    type: bool
    short-summary: >
        If the Task is currently running, cancel the Task before deleting the Project.
examples:
  - name: Delete a migration Task. (autogenerated)
    text: az dms project task delete --name MyTask --project-name MyProject --resource-group MyResourceGroup --service-name MyService
    crafted: true
"""

aladdin_helps['dms project task list'] = """
type: command
short-summary: List the Tasks within a Project. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
parameters:
  - name: --task-type
    type: string
    short-summary: >
        Filters the list by the type of task. For the list of possible types see "az dms check-status".
examples:
  - name: List the Tasks within a Project (autogenerated)
    text: az dms project task list --project-name myproject --resource-group myresourcegroup --service-name mydms --subscription MySubscription
    crafted: true
"""

aladdin_helps['dms project task show'] = """
type: command
short-summary: Show the details of a migration Task. Use the "--expand" to get more details.
parameters:
  - name: --expand
    type: string
    short-summary: >
        Expand the response to provide more details. Use with "command" to see more details of the Task.
        Use with "output" to see the results of the Task's migration.
examples:
  - name: Show the details of a migration Task. Use the "--expand" to get more details. (autogenerated)
    text: az dms project task show --name MyTask --project-name MyProject --resource-group MyResourceGroup --service-name MyService
    crafted: true
"""

aladdin_helps['dms show'] = """
type: command
short-summary: Show the details for an instance of the Data Migration Service.
examples:
  - name: Show the details for an instance of the Data Migration Service. (autogenerated)
    text: az dms show --name MyService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['dms start'] = """
type: command
short-summary: Start an instance of the Data Migration Service. It can then be used to run data migrations.
examples:
  - name: Start an instance of the Data Migration Service. It can then be used to run data migrations. (autogenerated)
    text: az dms start --name MyService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['eventgrid domain delete'] = """
type: command
short-summary: Delete a domain.
examples:
  - name: Delete a domain. (autogenerated)
    text: az eventgrid domain delete --ids /subscriptions/{SubID}/resourceGroups/{RG}/providers/Microsoft.EventGrid/domains/domain1
    crafted: true
"""

aladdin_helps['eventgrid domain key list'] = """
type: command
short-summary: List shared access keys of a domain.
examples:
  - name: List shared access keys of a domain. (autogenerated)
    text: az eventgrid domain key list --name MyDomain --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['eventgrid domain show'] = """
type: command
short-summary: Get the details of a domain.
examples:
  - name: Get the details of a domain (autogenerated)
    text: az eventgrid domain show --name domain1 --resource-group rg1 --subscription MySubscription
    crafted: true
"""

aladdin_helps['eventgrid topic delete'] = """
type: command
short-summary: Delete a topic.
examples:
  - name: Delete a topic. (autogenerated)
    text: az eventgrid topic delete --ids /subscriptions/{SubID}/resourceGroups/{RG}/providers/Microsoft.EventGrid/topics/topic1
    crafted: true
"""

aladdin_helps['eventgrid topic key list'] = """
type: command
short-summary: List shared access keys of a topic.
examples:
  - name: List shared access keys of a topic (autogenerated)
    text: az eventgrid topic key list --name MyTopic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['eventgrid topic key regenerate'] = """
type: command
short-summary: Regenerate a shared access key of a topic.
examples:
  - name: Regenerate a shared access key of a topic. (autogenerated)
    text: az eventgrid topic key regenerate --key-name key1 --name MyTopic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['eventgrid topic-type show'] = """
type: command
short-summary: Get the details for a topic type.
examples:
  - name: Get the details for a topic type. (autogenerated)
    text: az eventgrid topic-type show --name MyTopicType
    crafted: true
"""

aladdin_helps['eventhubs eventhub update'] = """
type: command
short-summary: Updates the EventHubs Eventhub
examples:
  - name: Updates the EventHubs Eventhub (autogenerated)
    text: az eventhubs eventhub update --name myeventhub --namespace-name mynamespace --partition-count 12 --resource-group myresourcegroup
    crafted: true
  - name: Updates the EventHubs Eventhub (autogenerated)
    text: az eventhubs eventhub update --message-retention 3 --name myeventhub --namespace-name mynamespace --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['eventhubs georecovery-alias set'] = """
type: command
short-summary: Sets a Geo-Disaster Recovery Configuration Alias for the give Namespace
examples:
  - name: Sets a Geo-Disaster Recovery Configuration Alias for the give Namespace (autogenerated)
    text: az eventhubs georecovery-alias set --alias myaliasname --namespace-name primarynamespace --partner-namespace resourcearmid --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['eventhubs namespace exists'] = """
type: command
short-summary: check for the availability of the given name for the Namespace
examples:
  - name: check for the availability of the given name for the Namespace (autogenerated)
    text: az eventhubs namespace exists --name mynamespace --subscription MySubscription
    crafted: true
"""

aladdin_helps['eventhubs namespace network-rule add'] = """
type: command
short-summary: Add a network rule for a namespace.
examples:
  - name: Add a network rule for a namespace. (autogenerated)
    text: az eventhubs namespace network-rule add --action Allow --ignore-missing-endpoint true --namespace-name mynamespace --resource-group myresourcegroup --subnet /subscriptions/{subscriptionid}/resourcegroups/{resourcegroupname}/providers/Microsoft.Network/virtualNetworks/{virtualnetworkname}/subnets/{subnetname} --subscription MySubscription --vnet-name MyVnet
    crafted: true
"""

aladdin_helps['eventhubs namespace update'] = """
type: command
short-summary: Updates the EventHubs Namespace
examples:
  - name: Updates the EventHubs Namespace. (autogenerated)
    text: az eventhubs namespace update --default-action Allow --name mynamespace --resource-group myresourcegroup
    crafted: true
"""

aladdin_helps['extension remove'] = """
type: command
short-summary: Remove an extension.
examples:
  - name: Remove an extension. (autogenerated)
    text: az extension remove --name MyExtension
    crafted: true
"""

aladdin_helps['extension show'] = """
type: command
short-summary: Show an extension.
examples:
  - name: Show an extension. (autogenerated)
    text: az extension show --name MyExtension
    crafted: true
"""





aladdin_helps['hdinsight monitor show'] = """
type: command
short-summary: Get the status of Azure Monitor logs integration on an HDInsight cluster.
examples:
  - name: Get the status of Azure Monitor logs integration on an HDInsight cluster. (autogenerated)
    text: az hdinsight monitor show --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['hdinsight rotate-disk-encryption-key'] = """
type: command
short-summary: Rotate the disk encryption key of the specified HDInsight cluster.
examples:
  - name: Rotate the disk encryption key of the specified HDInsight cluster. (autogenerated)
    text: az hdinsight rotate-disk-encryption-key --encryption-key-name MyEncryptionKey --encryption-key-version 00000000000000000000000000000000 --encryption-vault-uri https://MyKeyVault.vault.azure.net --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""



aladdin_helps['iot dps access-policy list'] = """
type: command
short-summary: List all shared access policies in an Azure IoT Hub device provisioning service.
examples:
  - name: List all shared access policies in an Azure IoT Hub device provisioning service (autogenerated)
    text: az iot dps access-policy list --dps-name MyDps --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot dps certificate delete'] = """
type: command
short-summary: Delete an Azure IoT Hub Device Provisioning Service certificate.
examples:
  - name: Delete an Azure IoT Hub Device Provisioning Service certificate. (autogenerated)
    text: az iot dps certificate delete --certificate-name MyCertificate --dps-name MyDps --etag AAAAAAAAAAA= --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot dps certificate show'] = """
type: command
short-summary: Show information about a particular Azure IoT Hub Device Provisioning Service certificate.
examples:
  - name: Show information about a particular Azure IoT Hub Device Provisioning Service certificate. (autogenerated)
    text: az iot dps certificate show --certificate-name MyCertificate --dps-name MyDps --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot hub certificate create'] = """
type: command
short-summary: Create/upload an Azure IoT Hub certificate.
long-summary: For a detailed explanation of CA certificates in Azure IoT Hub, see https://docs.microsoft.com/azure/iot-hub/iot-hub-x509ca-overview
examples:
  - name: Create/upload an Azure IoT Hub certificate (autogenerated)
    text: az iot hub certificate create --hub-name MyIotHub --name MyCertificate --path /certificates/Certificate.cer --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot hub certificate generate-verification-code'] = """
type: command
short-summary: Generates a verification code for an Azure IoT Hub certificate.
long-summary: This verification code is used to complete the proof of possession step for a certificate. Use this verification code as the CN of a new certificate signed with the root certificates private key. For a detailed explanation of CA certificates in Azure IoT Hub, see https://docs.microsoft.com/azure/iot-hub/iot-hub-x509ca-overview
examples:
  - name: Generates a verification code for an Azure IoT Hub certificate (autogenerated)
    text: az iot hub certificate generate-verification-code --etag AAAAAAAAAAA= --hub-name MyIotHub --name MyCertificate --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot hub certificate show'] = """
type: command
short-summary: Shows information about a particular Azure IoT Hub certificate.
long-summary: For a detailed explanation of CA certificates in Azure IoT Hub, see https://docs.microsoft.com/azure/iot-hub/iot-hub-x509ca-overview
examples:
  - name: Shows information about a particular Azure IoT Hub certificate (autogenerated)
    text: az iot hub certificate show --hub-name MyIotHub --name MyCertificate --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot hub certificate verify'] = """
type: command
short-summary: Verifies an Azure IoT Hub certificate.
long-summary: Verifies a certificate by uploading a verification certificate containing the verification code obtained by calling generate-verification-code. This is the last step in the proof of possession process. For a detailed explanation of CA certificates in Azure IoT Hub, see https://docs.microsoft.com/azure/iot-hub/iot-hub-x509ca-overview
examples:
  - name: Verifies an Azure IoT Hub certificate (autogenerated)
    text: az iot hub certificate verify --etag AAAAAAAAAAA= --hub-name MyIotHub --name MyCertificate --path /certificates/Verification.pem --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['iot hub consumer-group list'] = """
type: command
short-summary: List event hub consumer groups.
examples:
  - name: List event hub consumer groups. (autogenerated)
    text: az iot hub consumer-group list --hub-name MyHub
    crafted: true
"""

aladdin_helps['iot hub consumer-group show'] = """
type: command
short-summary: Get the details for an event hub consumer group.
examples:
  - name: Get the details for an event hub consumer group. (autogenerated)
    text: az iot hub consumer-group show --hub-name MyHub --name MyEventHubConsumerGroup
    crafted: true
"""

aladdin_helps['iot hub delete'] = """
type: command
short-summary: Delete an IoT hub.
examples:
  - name: Delete an IoT hub. (autogenerated)
    text: az iot hub delete --name MyIoTHub --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['iot hub job cancel'] = """
type: command
short-summary: Cancel a job in an IoT hub.
examples:
  - name: Cancel a job in an IoT hub. (autogenerated)
    text: az iot hub job cancel --hub-name MyHub --job-id JobId
    crafted: true
"""

aladdin_helps['iot hub job list'] = """
type: command
short-summary: List the jobs in an IoT hub.
examples:
  - name: List the jobs in an IoT hub. (autogenerated)
    text: az iot hub job list --hub-name MyHub
    crafted: true
"""

aladdin_helps['iot hub job show'] = """
type: command
short-summary: Get the details of a job in an IoT hub.
examples:
  - name: Get the details of a job in an IoT hub. (autogenerated)
    text: az iot hub job show --hub-name MyHub --job-id JobId
    crafted: true
"""

aladdin_helps['iot hub list-skus'] = """
type: command
short-summary: List available pricing tiers.
examples:
  - name: List available pricing tiers. (autogenerated)
    text: az iot hub list-skus --name MyIoTHub
    crafted: true
"""

aladdin_helps['iot hub policy delete'] = """
type: command
short-summary: Delete a shared access policy from an IoT hub.
examples:
  - name: Delete a shared access policy from an IoT hub. (autogenerated)
    text: az iot hub policy delete --hub-name MyHub --name MySharedAccessPolicy
    crafted: true
"""

aladdin_helps['iot hub policy list'] = """
type: command
short-summary: List shared access policies of an IoT hub.
examples:
  - name: List shared access policies of an IoT hub. (autogenerated)
    text: az iot hub policy list --hub-name MyHub --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['iot hub policy renew-key'] = """
type: command
short-summary: Regenerate keys of a shared access policy of an IoT hub.
examples:
  - name: Regenerate primary key of a shared access policy of an IoT hub.
    text: az iot hub policy renew-key --hub-name MyHub --name MySharedAccessPolicy --rk Primary
    crafted: true
"""

aladdin_helps['iot hub policy show'] = """
type: command
short-summary: Get the details of a shared access policy of an IoT hub.
examples:
  - name: Get the details of a shared access policy of an IoT hub. (autogenerated)
    text: az iot hub policy show --hub-name MyHub --name MySharedAccessPolicy
    crafted: true
"""

aladdin_helps['iot hub route update'] = """
type: command
short-summary: Update a route in IoT Hub.
long-summary: Updates a route in IoT Hub. You can change the source, enpoint or query on the route.
examples:
  - name: Update a route in IoT Hub. (autogenerated)
    text: az iot hub route update --enabled true --hub-name MyIotHub --resource-group MyResourceGroup --route-name R1 --source-type invalid
    crafted: true
"""

aladdin_helps['iot hub show'] = """
type: command
short-summary: Get the details of an IoT hub.
examples:
  - name: Get the details of an IoT hub. (autogenerated)
    text: az iot hub show --name MyIoTHub
    crafted: true
"""

aladdin_helps['iot hub show-connection-string'] = """
type: command
short-summary: Show the connection strings for an IoT hub.
examples:
  - name: Show the connection strings for an IoT hub. (autogenerated)
    text: az iot hub show-connection-string --key primary --policy-name MyPolicy
    crafted: true
"""

aladdin_helps['iot hub show-quota-metrics'] = """
type: command
short-summary: Get the quota metrics for an IoT hub.
examples:
  - name: Get the quota metrics for an IoT hub. (autogenerated)
    text: az iot hub show-quota-metrics --ids {ids}
    crafted: true
  - name: Get the quota metrics for an IoT hub. (autogenerated)
    text: az iot hub show-quota-metrics --name MyIoTHub
    crafted: true
"""

aladdin_helps['iot hub show-stats'] = """
type: command
short-summary: Get the statistics for an IoT hub.
examples:
  - name: Get the statistics for an IoT hub. (autogenerated)
    text: az iot hub show-stats --name MyIoTHub
    crafted: true
"""

aladdin_helps['iot hub update'] = """
type: command
short-summary: Update metadata for an IoT hub.
examples:
  - name: Update metadata for an IoT hub. (autogenerated)
    text: |
        az iot hub update --name MyIotHub --set properties.allocationPolicy="GeoLatency"
    crafted: true
"""

aladdin_helps['iotcentral app delete'] = """
type: command
short-summary: Delete an IoT Central application.
examples:
  - name: Delete an IoT Central application. (autogenerated)
    text: az iotcentral app delete --name MyIoTCentralApplication --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['keyvault create'] = """
type: command
short-summary: Create a key vault.
long-summary: If `--enable-rbac-authorization` is not specified, then default permissions are created for the current user or service principal unless the `--no-self-perms` flag is specified.
examples:
  - name: Create a key vault. (autogenerated)
    text: |
        az keyvault create --location westus2 --name MyKeyVault --resource-group MyResourceGroup
    crafted: true

"""

aladdin_helps['keyvault delete'] = """
type: command
short-summary: Delete a key vault.
examples:
  - name: Delete a key vault. (autogenerated)
    text: |
        az keyvault delete --name MyKeyVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['keyvault recover'] = """
type: command
short-summary: Recover a key vault.
long-summary: Recovers a previously deleted key vault for which soft delete was enabled.
examples:
  - name: Recover a key vault. (autogenerated)
    text: |
        az keyvault recover --location westus2 --name MyKeyVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['keyvault show'] = """
type: command
short-summary: Show details of a key vault.
examples:
  - name: Show details of a key vault. (autogenerated)
    text: |
        az keyvault show --name MyKeyVault
    crafted: true
"""

aladdin_helps['keyvault storage remove'] = """
type: command
short-summary: Remove a Key Vault managed Azure Storage Account and all associated SAS definitions. This operation requires the storage/delete permission.
examples:
  - name: Remove a Key Vault managed Azure Storage Account and all associated SAS definitions (autogenerated)
    text: az keyvault storage remove --name My --vault-name MyVault
    crafted: true
"""

aladdin_helps['keyvault update'] = """
type: command
short-summary: Update the properties of a key vault.
examples:
  - name: Update the properties of a key vault. (autogenerated)
    text: |
        az keyvault update --enabled-for-disk-encryption true --name MyKeyVault --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto cluster delete'] = """
type: command
short-summary: Delete a Kusto cluster.
examples:
  - name: Delete a Kusto cluster. (autogenerated)
    text: az kusto cluster delete --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto cluster list'] = """
type: command
short-summary: List a Kusto cluster.
examples:
  - name: List a Kusto cluster. (autogenerated)
    text: az kusto cluster list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto cluster show'] = """
type: command
short-summary: Get a Kusto cluster.
examples:
  - name: Get a Kusto cluster. (autogenerated)
    text: az kusto cluster show --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto cluster start'] = """
type: command
short-summary: Start a Kusto cluster.
long-summary: When the cluster is restarted, it takes about ten minutes for it to become available (like when it was originally provisioned). It takes additional time for data to load into the hot cache.
examples:
  - name: Start a Kusto cluster. (autogenerated)
    text: az kusto cluster start --name MyCluster --no-wait --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto cluster stop'] = """
type: command
short-summary: Stop a Kusto cluster.
long-summary: When the cluster is stopped, data is not available for queries, and you can't ingest new data. Start cluster to enable queries
examples:
  - name: Stop a Kusto cluster. (autogenerated)
    text: az kusto cluster stop --name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto database list'] = """
type: command
short-summary: List a Kusto database.
examples:
  - name: List a Kusto database. (autogenerated)
    text: az kusto database list --cluster-name MyCluster --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['kusto database show'] = """
type: command
short-summary: Get a Kusto database.
examples:
  - name: Get a Kusto database. (autogenerated)
    text: az kusto database show --cluster-name MyCluster --name MyDatabase --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['lab environment list'] = """
type: command
short-summary: List environments in a lab.
examples:
  - name: List environments in a lab. (autogenerated)
    text: az lab environment list --lab-name MyLab --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['lab formula export-artifacts'] = """
type: command
short-summary: Export artifacts from a formula.
parameters:
  - name: --lab-name
    short-summary: Name of the lab.
  - name: --name -n
    short-summary: Name of the formula.
examples:
  - name: Export artifacts from a formula. (autogenerated)
    text: az lab formula export-artifacts --lab-name MyLab --name MyFormula --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['lab formula show'] = """
type: command
short-summary: Show formulae from an Azure DevTest Lab.
parameters:
  - name: --lab-name
    short-summary: Name of the lab.
  - name: --name -n
    short-summary: Name of the formula.
examples:
  - name: Show formulae from an Azure DevTest Lab. (autogenerated)
    text: az lab formula show --lab-name MyLab --name MyFormula --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['lab vm apply-artifacts'] = """
type: command
short-summary: Apply artifacts to a virtual machine in Azure DevTest Lab.
parameters:
  - name: --resource-group -g
    short-summary: Name of lab's resource group.
  - name: --lab-name
    short-summary: Name of the Lab.
  - name: --name -n
    short-summary: Name of the virtual machine.
  - name: --artifacts
    short-summary: JSON encoded array of artifacts to be applied. Use '@{file}' to load from a file.
examples:
  - name: Apply artifacts to a virtual machine in Azure DevTest Lab. (autogenerated)
    text: az lab vm apply-artifacts --artifacts '@artifacts.json' --lab-name MyLab --name MyVirtualMachine --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['lab vm list'] = """
type: command
short-summary: List the VMs in an Azure DevTest Lab.
parameters:
  - name: --lab-name
    short-summary: Name of the lab.
  - name: --order-by
    short-summary: The ordering expression for the results using OData notation.
  - name: --top
    short-summary: The maximum number of resources to return.
  - name: --filters
    short-summary: The filter to apply.
  - name: --expand
    short-summary: The expand query.
  - name: --claimable
    short-summary: List only claimable virtual machines in the lab. Cannot be used with `--filters`.
  - name: --all
    short-summary: List all virtual machines in the lab. Cannot be used with `--filters`
  - name: --environment
    short-summary: Name or ID of the environment to list virtual machines in. Cannot be used with `--filters`.
  - name: --object-id
    short-summary: Object ID of the owner to list VMs for.
examples:
  - name: List the VMs in an Azure DevTest Lab. (autogenerated)
    text: az lab vm list --lab-name MyLab --resource-group MyResourceGroup
    crafted: true
"""



aladdin_helps['maps account create'] = """
type: command
short-summary: Create a maps account.
parameters:
  - name: --accept-tos
    short-summary: Accept the Terms of Service, and do not prompt for confirmation.
    long-summary: |
        By creating an Azure Maps account, you agree that you have read and agree to the
        License (https://azure.microsoft.com/support/legal/) and
        Privacy Statement (https://privacy.microsoft.com/privacystatement).

examples:
  - name: Create a maps account. (autogenerated)
    text: az maps account create --name MyMapsAccount --resource-group MyResourceGroup --sku S0 --subscription MySubscription
    crafted: true
  - name: Create a maps account. (autogenerated)
    text: az maps account create --accept-tos --name MyMapsAccount --resource-group MyResourceGroup --sku S0
    crafted: true
"""

aladdin_helps['maps account delete'] = """
type: command
short-summary: Delete a maps account.
examples:
  - name: Delete a maps account. (autogenerated)
    text: az maps account delete --name MyMapsAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['maps account keys list'] = """
type: command
short-summary: List the keys to use with the Maps APIs.
long-summary: |
    A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.
examples:
  - name: List the keys to use with the Maps APIs (autogenerated)
    text: az maps account keys list --name MyMapsAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['maps account show'] = """
type: command
short-summary: Show the details of a maps account.
examples:
  - name: Show the details of a maps account. (autogenerated)
    text: az maps account show --name MyMapsAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['maps account update'] = """
type: command
short-summary: Update the properties of a maps account.
examples:
  - name: Update the properties of a maps account. (autogenerated)
    text: az maps account update --name MyMapsAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor action-group create'] = """
type: command
short-summary: Create a new action group
parameters:
  - name: --action -a
    short-summary: Add receivers to the action group during the creation
    long-summary: |
        Usage:   --action TYPE NAME [ARG ...]
        Email:
            Format:     --action email NAME EMAIL_ADDRESS [usecommonalertschema]
            Example:    --action email bob bob@contoso.com
        SMS:
            Format:     --action sms NAME COUNTRY_CODE PHONE_NUMBER
            Example:    --action sms charli 1 5551234567
        Webhook:
            Format:     --action webhook NAME URI [useaadauth OBJECT_ID IDENTIFIER URI] [usecommonalertschema]
            Example:    --action webhook alert_hook https://www.contoso.com/alert useaadauth testobj http://identifier usecommonalertschema
        Arm Role:
            Format:     --action armrole NAME ROLE_ID [usecommonalertschema]
            Example:    --action armole owner_role 8e3af657-a8ff-443c-a75c-2fe8c4bcb635
        Azure App Push:
            Format:     --action azureapppush NAME EMAIL_ADDRESS
            Example:    --action azureapppush test_apppush bob@contoso.com
        ITSM:
            Format:     --action itsm NAME WORKSPACE_ID CONNECTION_ID TICKET_CONFIGURATION REGION
            Example:    --action itsm test_itsm test_workspace test_conn ticket_blob useast
        Automation runbook:
            Format:     --action automationrunbook NAME AUTOMATION_ACCOUNT_ID RUNBOOK_NAME WEBHOOK_RESOURCE_ID SERVICE_URI [isglobalrunbook] [usecommonalertschema]
            Example:    --action automationrunbook test_runbook test_acc test_book test_webhook test_rsrc http://example.com isglobalrunbook usecommonalertschema
        Voice:
            Format:     --action voice NAME COUNTRY_CODE PHONE_NUMBER
            Example:    --action voice charli 1 4441234567
        Logic App:
            Format:     --action logicapp NAME RESOURCE_ID CALLBACK_URL [usecommonalertschema]
            Example:    --action logicapp test_logicapp test_rsrc http://callback
        Azure Function:
            Format:     --action azurefunction NAME FUNCTION_APP_RESOURCE_ID FUNCTION_NAME HTTP_TRIGGER_URL [usecommonalertschema]
            Example:    --action azurefunction test_function test_rsrc test_func http://trigger usecommonalertschema
        Multiple actions can be specified by using more than one `--add-action` argument.
        'useaadauth', 'isglobalrunbook' and 'usecommonalertschema' are optional arguements that only need to be passed to set the respective parameter to True.
        If the 'useaadauth' argument is passed, then the OBJECT_ID and IDENTIFIER_URI values are required as well.
  - name: --short-name
    short-summary: The short name of the action group
examples:
  - name: Create a new action group (autogenerated)
    text: |
        az monitor action-group create --action webhook https://alerts.contoso.com apiKey={APIKey} type=HighCPU --name MyActionGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor action-group show'] = """
type: command
short-summary: Show the details of an action group
examples:
  - name: Show the details of an action group (commonly used with --output and --query). (autogenerated)
    text: |
        az monitor action-group show --name MyActionGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor action-group update'] = """
type: command
short-summary: Update an action group
parameters:
  - name: --short-name
    short-summary: Update the group short name of the action group
  - name: --add-action -a
    short-summary: Add receivers to the action group
    long-summary: |
        Usage:   --add-action TYPE NAME [ARG ...]
        Email:
            Format:     --add-action email NAME EMAIL_ADDRESS [usecommonalertschema]
            Example:    --add-action email bob bob@contoso.com
        SMS:
            Format:     --add-action sms NAME COUNTRY_CODE PHONE_NUMBER
            Example:    --add-action sms charli 1 5551234567
        Webhook:
            Format:     --add-action webhook NAME URI [useaadauth OBJECT_ID IDENTIFIER URI] [usecommonalertschema]
            Example:    --add-action https://www.contoso.com/alert useaadauth testobj http://identifier usecommonalertschema
        Arm Role:
            Format:     --add-action armrole NAME ROLE_ID [usecommonalertschema]
            Example:    --add-action armole owner_role 8e3af657-a8ff-443c-a75c-2fe8c4bcb635
        Azure App Push:
            Format:     --add-action azureapppush NAME EMAIL_ADDRESS
            Example:    --add-action azureapppush test_apppush bob@contoso.com
        ITSM:
            Format:     --add-action itsm NAME WORKSPACE_ID CONNECTION_ID TICKET_CONFIGURATION REGION
            Example:    --add-action itsm test_itsm test_workspace test_conn ticket_blob useast
        Automation runbook:
            Format:     --add-action automationrunbook NAME AUTOMATION_ACCOUNT_ID RUNBOOK_NAME WEBHOOK_RESOURCE_ID SERVICE_URI [isglobalrunbook] [usecommonalertschema]
            Example:    --add-action automationrunbook test_runbook test_acc test_book test_webhook test_rsrc http://example.com isglobalrunbook usecommonalertschema
        Voice:
            Format:     --add-action voice NAME COUNTRY_CODE PHONE_NUMBER
            Example:    --add-action voice charli 1 4441234567
        Logic App:
            Format:     --add-action logicapp NAME RESOURCE_ID CALLBACK_URL [usecommonalertschema]
            Example:    --add-action logicapp test_logicapp test_rsrc http://callback
        Azure Function:
            Format:     --add-action azurefunction NAME FUNCTION_APP_RESOURCE_ID FUNCTION_NAME HTTP_TRIGGER_URL [usecommonalertschema]
            Example:    --add-action azurefunction test_function test_rsrc test_func http://trigger usecommonalertschema
        Multiple actions can be specified by using more than one `--add-action` argument.
        'useaadauth', 'isglobalrunbook' and 'usecommonalertschema' are optional arguements that only need to be passed to set the respective parameter to True.
        If the 'useaadauth' argument is passed, then the OBJECT_ID and IDENTIFIER_URI values are required as well.
  - name: --remove-action -r
    short-summary: Remove receivers from the action group. Accept space-separated list of receiver names.
examples:
  - name: Update an action group (autogenerated)
    text: |
        az monitor action-group update --name MyActionGroup --resource-group MyResourceGroup --set retentionPolicy.days=365 --subscription MySubscription
    crafted: true
"""

aladdin_helps['monitor activity-log alert scope add'] = """
type: command
short-summary: Add scopes to this activity log alert.
parameters:
  - name: --name -n
    short-summary: Name of the activity log alerts
  - name: --scope -s
    short-summary: List of scopes to add. Each scope could be a resource ID, a resource group ID or a subscription ID.
  - name: --reset
    short-summary: Remove all the existing scopes before add new scopes.
examples:
  - name: Add scopes to this activity log alert. (autogenerated)
    text: |
        az monitor activity-log alert scope add --name MyActivityLogAlerts --resource-group MyResourceGroup --scope /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myRG  /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myRG/Microsoft.KeyVault/vaults/mykey
    crafted: true
"""

aladdin_helps['monitor activity-log alert update'] = """
type: command
short-summary: Update the details of this activity log alert
parameters:
  - name: --description
    short-summary: A description of this activity log alert.
  - name: --condition -c
    short-summary: The conditional expression that will cause the alert to activate. The format is FIELD=VALUE[ and FIELD=VALUE...].
    long-summary: >
        The possible values for the field are 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup',
        'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
examples:
  - name: Update the details of this activity log alert (autogenerated)
    text: |
        az monitor activity-log alert update --enabled true --name MyActivityLogAlerts --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['monitor alert delete'] = """
type: command
short-summary: Delete an alert rule.
examples:
  - name: Delete an alert rule. (autogenerated)
    text: |
        az monitor alert delete --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor alert list'] = """
type: command
short-summary: List alert rules in a resource group.
examples:
  - name: List alert rules in a resource group. (autogenerated)
    text: |
        az monitor alert list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor alert list-incidents'] = """
type: command
short-summary: List all incidents for an alert rule.
examples:
  - name: List all incidents for an alert rule. (autogenerated)
    text: |
        az monitor alert list-incidents --resource-group MyResourceGroup --rule-name MyRule
    crafted: true
"""

aladdin_helps['monitor alert show'] = """
type: command
short-summary: Show an alert rule.
examples:
  - name: Show an alert rule. (autogenerated)
    text: |
        az monitor alert show --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor alert update'] = """
type: command
short-summary: Update a classic metric-based alert rule.
parameters:
  - name: --description
    short-summary: Description of the rule.
  - name: --condition
    short-summary: The condition which triggers the rule.
    long-summary: >
        The form of a condition is "METRIC {>,>=,<,<=} THRESHOLD {avg,min,max,total,last} PERIOD".
        Values for METRIC and appropriate THRESHOLD values can be obtained from `az monitor metric` commands,
        and PERIOD is of the form "##h##m##s".
  - name: --add-action -a
    short-summary: Add an action to fire when the alert is triggered.
    long-summary: |
        Usage:   --add-action TYPE KEY [ARG ...]
        Email:   --add-action email bob@contoso.com ann@contoso.com
        Webhook: --add-action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --add-action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--add-action` argument.
  - name: --remove-action -r
    short-summary: Remove one or more actions.
    long-summary: |
        Usage:   --remove-action TYPE KEY [KEY ...]
        Email:   --remove-action email bob@contoso.com ann@contoso.com
        Webhook: --remove-action webhook https://contoso.com/alert https://alerts.contoso.com
  - name: --email-service-owners
    short-summary: Email the service owners if an alert is triggered.
  - name: --metric
    short-summary: Name of the metric to base the rule on.
    populator-commands:
      - az monitor metrics list-definitions
  - name: --operator
    short-summary: How to compare the metric against the threshold.
  - name: --threshold
    short-summary: Numeric threshold at which to trigger the alert.
  - name: --aggregation
    short-summary: Type of aggregation to apply based on --period.
  - name: --period
    short-summary: >
        Time span over which to apply --aggregation, in nDnHnMnS shorthand or full ISO8601 format.
examples:
  - name: Update a classic metric-based alert rule. (autogenerated)
    text: |
        az monitor alert update --email-service-owners true --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
  - name: Update a classic metric-based alert rule. (autogenerated)
    text: |
        az monitor alert update --name MyAlertRule --remove-action email bob@contoso.com --resource-group MyResourceGroup
    crafted: true
  - name: Update a classic metric-based alert rule. (autogenerated)
    text: |
        az monitor alert update --name MyAlertRule --resource-group MyResourceGroup --set retentionPolicy.days=365
    crafted: true
"""

aladdin_helps['monitor autoscale create'] = """
type: command
short-summary: Create new autoscale settings.
long-summary: >
    For more information on autoscaling, visit: https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
parameters:
  - name: --action -a
    short-summary: Add an action to fire when a scaling event occurs.
    long-summary: |
        Usage:   --action TYPE KEY [ARG ...]
        Email:   --action email bob@contoso.com ann@contoso.com
        Webhook: --action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--action` argument.
examples:
  - name: Create new autoscale settings. (autogenerated)
    text: |
        az monitor autoscale create --count 3 --max-count 5 --min-count 2 --name MyAutoscaleSettings --resource myScaleSet --resource-group MyResourceGroup --resource-type Microsoft.Compute/virtualMachineScaleSets
    crafted: true
"""

aladdin_helps['monitor autoscale profile create'] = """
type: command
short-summary: Create a fixed or recurring autoscale profile.
long-summary: >
    For more information on autoscaling, visit: https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
parameters:
  - name: --timezone
    short-summary: Timezone name.
    populator-commands:
      - az monitor autoscale profile list-timezones
  - name: --recurrence -r
    short-summary: When the profile recurs. If omitted, a fixed (non-recurring) profile is created.
    long-summary: |
        Usage:     --recurrence {week} [ARG ARG ...]
        Weekly:    --recurrence week Sat Sun
  - name: --start
    short-summary: When the autoscale profile begins. Format depends on the type of profile.
    long-summary: |
        Fixed:  --start yyyy-mm-dd [hh:mm:ss]
        Weekly: [--start hh:mm]
  - name: --end
    short-summary: When the autoscale profile ends. Format depends on the type of profile.
    long-summary: |
        Fixed:  --end yyyy-mm-dd [hh:mm:ss]
        Weekly: [--end hh:mm]
examples:
  - name: Create a fixed or recurring autoscale profile. (autogenerated)
    text: |
        az monitor autoscale profile create --autoscale-name MyAutoscale --copy-rules default --count 2 --end 2018-12-26 --max-count 10 --min-count 1 --name Christmas --recurrence week sat sun --resource-group MyResourceGroup --start 2018-12-24 --timezone "Pacific Standard Time"
    crafted: true
  - name: Create a fixed or recurring autoscale profile. (autogenerated)
    text: |
        az monitor autoscale profile create --autoscale-name MyAutoscale --count 2 --max-count 10 --min-count 1 --name Christmas --recurrence week sat sun --resource-group MyResourceGroup --start 2018-12-24 --subscription MySubscription --timezone "Pacific Standard Time"
    crafted: true
"""

aladdin_helps['monitor autoscale profile delete'] = """
type: command
short-summary: Delete an autoscale profile.
examples:
  - name: Delete an autoscale profile. (autogenerated)
    text: |
        az monitor autoscale profile delete --autoscale-name MyAutoscale --name MyAutoscaleProfile --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor autoscale profile list'] = """
type: command
short-summary: List autoscale profiles.
examples:
  - name: List autoscale profiles. (autogenerated)
    text: |
        az monitor autoscale profile list --autoscale-name MyAutoscale --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor autoscale rule list'] = """
type: command
short-summary: List autoscale rules for a profile.
examples:
  - name: List autoscale rules for a profile. (autogenerated)
    text: |
        az monitor autoscale rule list --autoscale-name MyAutoscale --profile-name MyProfile --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor autoscale show'] = """
type: command
short-summary: Show autoscale setting details.
examples:
  - name: Show autoscale setting details. (autogenerated)
    text: |
        az monitor autoscale show --name MyAutoscaleSettings --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor autoscale update'] = """
type: command
short-summary: Update autoscale settings.
long-summary: >
    For more information on autoscaling, visit: https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
parameters:
  - name: --add-action -a
    short-summary: Add an action to fire when a scaling event occurs.
    long-summary: |
        Usage:   --add-action TYPE KEY [ARG ...]
        Email:   --add-action email bob@contoso.com ann@contoso.com
        Webhook: --add-action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --add-action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--add-action` argument.
  - name: --remove-action -r
    short-summary: Remove one or more actions.
    long-summary: |
        Usage:   --remove-action TYPE KEY [KEY ...]
        Email:   --remove-action email bob@contoso.com ann@contoso.com
        Webhook: --remove-action webhook https://contoso.com/alert https://alerts.contoso.com
examples:
  - name: Update autoscale settings. (autogenerated)
    text: |
        az monitor autoscale update --count 3 --email-administrator true --enabled true --max-count 5 --min-count 2 --name MyAutoscaleSettings --resource-group MyResourceGroup --tags key[=value]
    crafted: true
"""

aladdin_helps['monitor autoscale-settings update'] = """
type: command
short-summary: Updates an autoscale setting.
examples:
  - name: Updates an autoscale setting. (autogenerated)
    text: |
        az monitor autoscale-settings update --name MyAutoscaleSetting --resource-group MyResourceGroup --set retentionPolicy.days=365
    crafted: true
"""

aladdin_helps['monitor diagnostic-settings update'] = """
type: command
short-summary: Update diagnostic settings.
examples:
  - name: Update diagnostic settings. (autogenerated)
    text: |
        az monitor diagnostic-settings update --name MyDiagnosticSetting --resource myScaleSet --set retentionPolicy.days=365
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace delete'] = """
type: command
short-summary: Delete a workspace instance.
examples:
  - name: Delete a workspace instance. (autogenerated)
    text: |
        az monitor log-analytics workspace delete --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace get-schema'] = """
type: command
short-summary: Get the schema for a given workspace.
long-summary: >
    Schema represents the internal structure of the workspace, which can be used during the query.
    For more information, visit: https://docs.microsoft.com/en-us/rest/api/loganalytics/workspaces%202015-03-20/getschema
examples:
  - name: Get the schema for a given workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace get-schema --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace get-shared-keys'] = """
type: command
short-summary: Get the shared keys for a workspace.
examples:
  - name: Get the shared keys for a workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace get-shared-keys --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace list-management-groups'] = """
type: command
short-summary: Get a list of management groups connected to a workspace.
examples:
  - name: Get a list of management groups connected to a workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace list-management-groups --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace list-usages'] = """
type: command
short-summary: Get a list of usage metrics for a workspace.
examples:
  - name: Get a list of usage metrics for a workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace list-usages --resource-group MyResourceGroup --subscription MySubscription --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace pack enable'] = """
type: command
short-summary: Enable an intelligence pack for a given workspace.
examples:
  - name: Enable an intelligence pack for a given workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace pack enable --name MyIntelligencePack --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace pack list'] = """
type: command
short-summary: List all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
examples:
  - name: List all the intelligence packs possible and whether they are enabled or disabled for a given workspace. (autogenerated)
    text: |
        az monitor log-analytics workspace pack list --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace show'] = """
type: command
short-summary: Show a workspace instance.
examples:
  - name: Show a workspace instance. (autogenerated)
    text: |
        az monitor log-analytics workspace show --resource-group MyResourceGroup --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-analytics workspace update'] = """
type: command
short-summary: Update a workspace instance
examples:
  - name: Update a workspace instance. (autogenerated)
    text: az monitor log-analytics workspace update --resource-group MyResourceGroup --set retentionPolicy.days=365 --workspace-name MyWorkspace
    crafted: true
"""

aladdin_helps['monitor log-profiles create'] = """
type: command
short-summary: Create a log profile.
parameters:
  - name: --name -n
    short-summary: The name of the log profile.
  - name: --locations
    short-summary: Space-separated list of regions for which Activity Log events should be stored.
  - name: --categories
    short-summary: Space-separated categories of the logs. These categories are created as is convenient to the user. Some values are Write, Delete, and/or Action.
  - name: --storage-account-id
    short-summary: The resource id of the storage account to which you would like to send the Activity Log.
  - name: --service-bus-rule-id
    short-summary: The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format '{service bus resource ID}/authorizationrules/{key name}'.
  - name: --days
    short-summary: The number of days for the retention in days. A value of 0 will retain the events indefinitely
  - name: --enabled
    short-summary: Whether the retention policy is enabled.
examples:
  - name: Create a log profile. (autogenerated)
    text: |
        az monitor log-profiles create --categories "Delete" --days 0 --enabled true --location westus2 --locations westus --name MyLogProfile --service-bus-rule-id "/subscriptions/{YOUR SUBSCRIPTION ID}/resourceGroups/{RESOURCE GROUP NAME}/providers/Microsoft.EventHub/namespaces/{EVENT HUB NAME SPACE}/authorizationrules/RootManageSharedAccessKey"
    crafted: true
"""

aladdin_helps['monitor log-profiles update'] = """
type: command
short-summary: Update a log profile.
examples:
  - name: Update a log profile. (autogenerated)
    text: |
        az monitor log-profiles update --name MyLogProfile --set retentionPolicy.days=365
    crafted: true
"""

aladdin_helps['monitor metrics alert delete'] = """
type: command
short-summary: Delete a metrics-based alert rule.
examples:
  - name: Delete a metrics-based alert rule. (autogenerated)
    text: |
        az monitor metrics alert delete --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor metrics alert list'] = """
type: command
short-summary: List metric-based alert rules.
examples:
  - name: List metric-based alert rules. (autogenerated)
    text: |
        az monitor metrics alert list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor metrics alert show'] = """
type: command
short-summary: Show a metrics-based alert rule.
examples:
  - name: Show a metrics-based alert rule. (autogenerated)
    text: |
        az monitor metrics alert show --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor metrics alert update'] = """
type: command
short-summary: Update a metric-based alert rule.
parameters:
  - name: --add-condition
    short-summary: Add a condition which triggers the rule.
    long-summary: |
        Usage:  --add-condition {avg,min,max,total,count} [NAMESPACE.]METRIC {=,!=,>,>=,<,<=} THRESHOLD
                               [where DIMENSION {includes,excludes} VALUE [or VALUE ...]
                               [and   DIMENSION {includes,excludes} VALUE [or VALUE ...] ...]]

        Dimensions can be queried by adding the 'where' keyword and multiple dimensions can be queried by combining them with the 'and' keyword.

        Values for METRIC, DIMENSION and appropriate THRESHOLD values can be obtained from `az monitor metrics list-definitions` command.

        Multiple conditions can be specified by using more than one `--condition` argument.
  - name: --remove-conditions
    short-summary: Space-separated list of condition names to remove.
  - name: --add-action
    short-summary: Add an action group and optional webhook properties to fire when the alert is triggered.
    long-summary: |
        Usage:   --add-action ACTION_GROUP_NAME_OR_ID [KEY=VAL [KEY=VAL ...]]

        Multiple action groups can be specified by using more than one `--action` argument.
  - name: --remove-actions
    short-summary: Space-separated list of action group names to remove.
examples:
  - name: Update a metric-based alert rule. (autogenerated)
    text: |
        az monitor metrics alert update --enabled true --name MyAlertRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['monitor metrics list-definitions'] = """
type: command
short-summary: Lists the metric definitions for the resource.
examples:
  - name: Lists the metric definitions for the resource. (autogenerated)
    text: |
        az monitor metrics list-definitions --resource /subscriptions/{subscriptionID}/resourceGroups/Space1999/providers/Microsoft.Network/networkSecurityGroups/ADDS-NSG
    crafted: true
"""

aladdin_helps['monitor private-link-scope private-endpoint-connection approve'] = """
type: command
short-summary: Approve a private endpoint connection of a private link scope resource.
parameters:
  - name: --name -n
    short-summary: Name of the private endpoint connection.
    populator-commands:
      - az monitor private-link-scope show
example:
  - name: Approve a private endpoint connection.
    text: az monitor private-link-scope private-endpoint-connection approve --scope-name MyScope -g MyRG --name PrivateEndpointConnection
examples:
  - name: Approve a private endpoint connection of a private link scope resource. (autogenerated)
    text: az monitor private-link-scope private-endpoint-connection approve --name MyPrivateEndpointConnection --resource-group MyResourceGroup --scope-name MyScope
    crafted: true
"""

aladdin_helps['monitor private-link-scope private-endpoint-connection reject'] = """
type: command
parameters:
  - name: --name -n
    short-summary: Name of the private endpoint connection.
    populator-commands:
      - az monitor private-link-scope show
short-summary: Reject a private endpoint connection of a private link scope resource.
examples:
  - name: Reject a private endpoint connection of a private link scope resource. (autogenerated)
    text: az monitor private-link-scope private-endpoint-connection reject --name MyPrivateEndpointConnection --resource-group MyResourceGroup --scope-name MyScope
    crafted: true
"""



aladdin_helps['netappfiles pool update'] = """
type: command
short-summary: Update the tags of the specified ANF pool.
parameters:
  - name: --account-name -a
    short-summary: The name of the ANF account
  - name: --name --pool-name -n -p
    short-summary: The name of the ANF pool
  - name: --size
    short-summary: The size for the ANF pool. Must be an integer number of tebibytes in multiples of 4
  - name: --service-level
    short-summary: The service level for the ANF pool
  - name: --tags
    short-summary: Space-separated tags in `key[=value]` format
examples:
  - name: Update the tags of the specified ANF pool. (autogenerated)
    text: az netappfiles pool update --account-name myaccname --pool-name mypoolname --resource-group mygroup --size 8
    crafted: true
"""

aladdin_helps['netappfiles snapshot create'] = """
type: command
short-summary: Create a new Azure NetApp Files (ANF) snapshot.
parameters:
  - name: --account-name -a
    short-summary: The name of the ANF account
  - name: --pool-name -p
    short-summary: The name of the ANF pool
  - name: --volume-name -v
    short-summary: The name of the ANF volume
  - name: --name --snapshot-name -n -s
    short-summary: The name of the ANF snapshot
  - name: --file-system-id
    short-summary: The uuid of the volume
examples:
  - name: Create a new Azure NetApp Files (ANF) snapshot. (autogenerated)
    text: az netappfiles snapshot create --account-name myaccname --location eastus --pool-name mypoolname --resource-group mygroup --snapshot-name mysnapname --subscription MySubscription --volume-name myvolname
    crafted: true
"""

aladdin_helps['network application-gateway create'] = """
type: command
short-summary: Create an application gateway.
examples:
  - name: Create an application gateway. (autogenerated)
    text: |
        az network application-gateway create --capacity 2 --frontend-port MyFrontendPort --http-settings-cookie-based-affinity Enabled --http-settings-port 80 --http-settings-protocol Http --location westus2 --name MyAppGateway --public-ip-address MyAppGatewayPublicIp --resource-group MyResourceGroup --sku Standard_Small --subnet MySubnet --vnet-name MyVNet
    crafted: true
"""

aladdin_helps['network application-gateway frontend-ip create'] = """
type: command
short-summary: Create a frontend IP address.
examples:
  - name: Create a frontend IP address. (autogenerated)
    text: |
        az network application-gateway frontend-ip create --gateway-name MyAppGateway --name MyFrontendIp --private-ip-address 10.10.10.50 --resource-group MyResourceGroup --subnet MySubnet --vnet-name MyVnet
    crafted: true
"""

aladdin_helps['network application-gateway frontend-ip update'] = """
type: command
short-summary: Update a frontend IP address.
examples:
  - name: Update a frontend IP address. (autogenerated)
    text: |
        az network application-gateway frontend-ip update --gateway-name MyAppGateway --name MyFrontendIp --private-ip-address 10.10.10.50 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway http-settings create'] = """
type: command
short-summary: Create HTTP settings.
examples:
  - name: Create HTTP settings. (autogenerated)
    text: az network application-gateway http-settings create --affinity-cookie-name MyAffinityCookie --cookie-based-affinity Enabled --gateway-name MyAppGateway --host-name MyHost --name MyHttpSettings --port 80 --probe MyNewProbe --protocol Http --resource-group MyResourceGroup --timeout 30
    crafted: true
"""

aladdin_helps['network application-gateway http-settings update'] = """
type: command
short-summary: Update HTTP settings.
examples:
  - name: Update HTTP settings. (autogenerated)
    text: |
        az network application-gateway http-settings update --enable-probe true --gateway-name MyAppGateway --name MyHttpSettings --probe MyNewProbe --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway probe delete'] = """
type: command
short-summary: Delete a probe.
examples:
  - name: Delete a probe. (autogenerated)
    text: |
        az network application-gateway probe delete --gateway-name MyAppGateway --name MyProbe --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network application-gateway probe update'] = """
type: command
short-summary: Update a probe.
examples:
  - name: Update a probe. (autogenerated)
    text: az network application-gateway probe update --gateway-name MyAppGateway --host 127.0.0.1 --name MyProbe --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network application-gateway redirect-config update'] = """
type: command
short-summary: Update a redirect configuration.
examples:
  - name: Update a redirect configuration. (autogenerated)
    text: |
        az network application-gateway redirect-config update --gateway-name MyAppGateway --include-path true --include-query-string true --name MyRedirectConfig --resource-group MyResourceGroup --target-listener MyNewBackendListener --type Permanent
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule condition list'] = """
short-summary: List rewrite rule conditions.
type: command
examples:
  - name: List rewrite rule conditions. (autogenerated)
    text: |
        az network application-gateway rewrite-rule condition list --gateway-name MyGateway --resource-group MyResourceGroup --rule-name MyRule --rule-set-name MyRuleSet
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule delete'] = """
short-summary: Delete a rewrite rule.
type: command
examples:
  - name: Delete a rewrite rule. (autogenerated)
    text: az network application-gateway rewrite-rule delete --gateway-name MyGateway --name MyRewriteRule --resource-group MyResourceGroup --rule-set-name MyRuleSet
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule list'] = """
short-summary: List rewrite rules.
type: command
examples:
  - name: List rewrite rules. (autogenerated)
    text: |
        az network application-gateway rewrite-rule list --gateway-name MyGateway --resource-group MyResourceGroup --rule-set-name MyRuleSet
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule set create'] = """
short-summary: Create a rewrite rule set.
type: command
examples:
  - name: Create a rewrite rule set. (autogenerated)
    text: |
        az network application-gateway rewrite-rule set create --gateway-name MyGateway --name MyRewriteRuleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule set list'] = """
short-summary: List rewrite rule sets.
type: command
examples:
  - name: List rewrite rule sets. (autogenerated)
    text: |
        az network application-gateway rewrite-rule set list --gateway-name MyGateway --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule set show'] = """
short-summary: Get the details of a rewrite rule set.
type: command
examples:
  - name: Get the details of a rewrite rule set. (autogenerated)
    text: |
        az network application-gateway rewrite-rule set show --gateway-name MyGateway --name MyRewriteRuleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule set update'] = """
short-summary: Update a rewrite rule set.
type: command
examples:
  - name: Update a rewrite rule set. (autogenerated)
    text: az network application-gateway rewrite-rule set update --gateway-name MyGateway --name MyRewriteRuleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule show'] = """
short-summary: Get the details of a rewrite rule.
type: command
examples:
  - name: Get the details of a rewrite rule. (autogenerated)
    text: |
        az network application-gateway rewrite-rule show --gateway-name MyGateway --name MyRewriteRule --resource-group MyResourceGroup --rule-set-name MyRuleSet
    crafted: true
"""

aladdin_helps['network application-gateway rewrite-rule update'] = """
short-summary: Update a rewrite rule.
type: command
parameters:
  - name: --request-headers
    populator-commands:
      - az network application-gateway rewrite-rule list-request-headers
  - name: --response-headers
    populator-commands:
      - az network application-gateway rewrite-rule list-response-headers
examples:
  - name: Update a rewrite rule. (autogenerated)
    text: az network application-gateway rewrite-rule update --gateway-name MyGateway --name MyRewriteRule --resource-group MyResourceGroup --rule-set-name MyRuleSet
    crafted: true
"""

aladdin_helps['network application-gateway root-cert create'] = """
type: command
short-summary: Upload a trusted root certificate.
examples:
  - name: Upload a trusted root certificate. (autogenerated)
    text: |
        az network application-gateway root-cert create --cert-file /path/to/cert/file --gateway-name MyGateway --name MyTrustedRootCertificate --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway root-cert update'] = """
type: command
short-summary: Update a trusted root certificate.
examples:
  - name: Update a trusted root certificate. (autogenerated)
    text: az network application-gateway root-cert update --cert-file /path/to/cert/file --gateway-name MyGateway --name MyTrustedRootCertificate --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway rule update'] = """
type: command
short-summary: Update a rule.
examples:
  - name: Update a rule. (autogenerated)
    text: |
        az network application-gateway rule update --address-pool MyAddressPool --gateway-name MyAppGateway --name MyRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway update'] = """
type: command
short-summary: Update an application gateway.
examples:
  - name: Update an application gateway. (autogenerated)
    text: |
        az network application-gateway update --name MyApplicationGateway --resource-group MyResourceGroup --set useRemoteGateways=true
    crafted: true
"""

aladdin_helps['network application-gateway url-path-map update'] = """
type: command
short-summary: Update a URL path map.
examples:
  - name: Update a URL path map. (autogenerated)
    text: |
        az network application-gateway url-path-map update --default-address-pool MyAddressPool --default-http-settings MyNewHttpSettings --gateway-name MyAppGateway --name MyUrlPathMap --resource-group MyResourceGroup
    crafted: true
  - name: Update a URL path map. (autogenerated)
    text: az network application-gateway url-path-map update --gateway-name MyAppGateway --name MyUrlPathMap --resource-group MyResourceGroup --set useRemoteGateways=true
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy create'] = """
type: command
short-summary: Create an application gateway WAF policy.
examples:
  - name: Create an application gateway WAF policy. (autogenerated)
    text: |
        az network application-gateway waf-policy create --name MyApplicationGatewayWAFPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy custom-rule list'] = """
type: command
short-summary: List application gateway WAF policy custom rules.
examples:
  - name: List application gateway WAF policy custom rules. (autogenerated)
    text: |
        az network application-gateway waf-policy custom-rule list --policy-name MyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy custom-rule match-condition list'] = """
type: command
short-summary: List application gateway WAF policy custom rule match conditions.
examples:
  - name: List application gateway WAF policy custom rule match conditions. (autogenerated)
    text: |
        az network application-gateway waf-policy custom-rule match-condition list --name MyWAFPolicyRule --policy-name MyPolicy --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy custom-rule show'] = """
type: command
short-summary: Get the details of an application gateway WAF policy custom rule.
examples:
  - name: Get the details of an application gateway WAF policy custom rule. (autogenerated)
    text: |
        az network application-gateway waf-policy custom-rule show --name MyWAFPolicyRule --policy-name MyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy custom-rule update'] = """
type: command
short-summary: Update an application gateway WAF policy custom rule.
examples:
  - name: Update an application gateway WAF policy custom rule. (autogenerated)
    text: |
        az network application-gateway waf-policy custom-rule update --name MyWAFPolicyRule --policy-name MyPolicy --resource-group MyResourceGroup --set useRemoteGateways=true
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy delete'] = """
type: command
short-summary: Delete an application gateway WAF policy.
examples:
  - name: Delete an application gateway WAF policy. (autogenerated)
    text: |
        az network application-gateway waf-policy delete --name MyApplicationGatewayWAFPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy list'] = """
type: command
short-summary: List application gateway WAF policies.
examples:
  - name: List application gateway WAF policies. (autogenerated)
    text: |
        az network application-gateway waf-policy list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy managed-rule rule-set list'] = """
type: command
short-summary: List all managed rule set.
examples:
  - name: List all managed rule set. (autogenerated)
    text: az network application-gateway waf-policy managed-rule rule-set list --policy-name MyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy policy-setting list'] = """
type: command
short-summary: List properties of a web application firewall global configuration.
examples:
  - name: List properties of a web application firewall global configuration. (autogenerated)
    text: |
        az network application-gateway waf-policy policy-setting list --policy-name MyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy policy-setting update'] = """
type: command
short-summary: Update properties of a web application firewall global configuration.
examples:
  - name: Update properties of a web application firewall global configuration. (autogenerated)
    text: |
        az network application-gateway waf-policy policy-setting update --mode Prevention --policy-name MyPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy show'] = """
type: command
short-summary: Get the details of an application gateway WAF policy.
examples:
  - name: Get the details of an application gateway WAF policy. (autogenerated)
    text: |
        az network application-gateway waf-policy show --name MyApplicationGatewayWAFPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network application-gateway waf-policy update'] = """
type: command
short-summary: Update an application gateway WAF policy.
examples:
  - name: Update an application gateway WAF policy. (autogenerated)
    text: |
        az network application-gateway waf-policy update --add communities='12076:5010' --name MyApplicationGatewayWAFPolicy --resource-group MyResourceGroup
    crafted: true
  - name: Update an application gateway WAF policy. (autogenerated)
    text: az network application-gateway waf-policy update --name MyApplicationGatewayWAFPolicy --remove tags.no_80 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network bastion create'] = """
type: command
short-summary: Create a Azure bastion host machine.
examples:
  - name: Create a Azure bastion host machine. (autogenerated)
    text: az network bastion create --location westus2 --name MyBastionHost --public-ip-address MyPublicIpAddress --resource-group MyResourceGroup --vnet-name MyVnet
    crafted: true
"""

aladdin_helps['network bastion delete'] = """
type: command
short-summary: Delete a Azure bastion host machine.
examples:
  - name: Delete a Azure bastion host machine. (autogenerated)
    text: az network bastion delete --name MyBastionHost --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network bastion show'] = """
type: command
short-summary: Show a Azure bastion host machine.
examples:
  - name: Show a Azure bastion host machine (autogenerated)
    text: az network bastion show --name MyBastionHost --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network ddos-protection create'] = """
type: command
short-summary: Create a DDoS protection plan.
parameters:
  - name: --vnets
    long-summary: >
        This parameter can only be used if all the VNets are within the same subscription as
        the DDoS protection plan. If this is not the case, set the protection plan on the VNet
        directly using the `az network vnet update` command.
examples:
  - name: Create a DDoS protection plan. (autogenerated)
    text: |
        az network ddos-protection create --location westus2 --name MyDdosPlan --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network ddos-protection update'] = """
type: command
short-summary: Update a DDoS protection plan.
parameters:
  - name: --vnets
    long-summary: >
        This parameter can only be used if all the VNets are within the same subscription as
        the DDoS protection plan. If this is not the case, set the protection plan on the VNet
        directly using the `az network vnet update` command.
examples:
  - name: Update a DDoS protection plan. (autogenerated)
    text: |
        az network ddos-protection update --name MyDdosPlan --remove tags.no_80 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network dns record-set a create'] = """
type: command
short-summary: Create an empty A record set.
examples:
  - name: Create an empty A record set. (autogenerated)
    text: |
        az network dns record-set a create --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set a update'] = """
type: command
short-summary: Update an A record set.
examples:
  - name: Update an A record set. (autogenerated)
    text: |
        az network dns record-set a update --name MyRecordSet --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set aaaa list'] = """
type: command
short-summary: List all AAAA record sets in a zone.
examples:
  - name: List all AAAA record sets in a zone. (autogenerated)
    text: |
        az network dns record-set aaaa list --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set caa create'] = """
type: command
short-summary: Create an empty CAA record set.
examples:
  - name: Create an empty CAA record set. (autogenerated)
    text: |
        az network dns record-set caa create --name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set caa delete'] = """
type: command
short-summary: Delete a CAA record set and all associated records.
examples:
  - name: Delete a CAA record set and all associated records. (autogenerated)
    text: |
        az network dns record-set caa delete --name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set cname create'] = """
type: command
short-summary: Create an empty CNAME record set.
examples:
  - name: Create an empty CNAME record set. (autogenerated)
    text: |
        az network dns record-set cname create --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set mx create'] = """
type: command
short-summary: Create an empty MX record set.
examples:
  - name: Create an empty MX record set. (autogenerated)
    text: |
        az network dns record-set mx create --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set mx list'] = """
type: command
short-summary: List all MX record sets in a zone.
examples:
  - name: List all MX record sets in a zone (autogenerated)
    text: az network dns record-set mx list --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set mx update'] = """
type: command
short-summary: Update an MX record set.
examples:
  - name: Update an MX record set. (autogenerated)
    text: |
        az network dns record-set mx update --name MyRecordSet --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set ns create'] = """
type: command
short-summary: Create an empty NS record set.
examples:
  - name: Create an empty NS record set. (autogenerated)
    text: |
        az network dns record-set ns create --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set ns delete'] = """
type: command
short-summary: Delete an NS record set and all associated records.
examples:
  - name: Delete an NS record set and all associated records. (autogenerated)
    text: az network dns record-set ns delete --name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --yes --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set ns remove-record'] = """
type: command
short-summary: Remove an NS record from its record set.
long-summary: >
    By default, if the last record in a set is removed, the record set is deleted.
    To retain the empty record set, include --keep-empty-record-set.
examples:
  - name: Remove an NS record from its record set. (autogenerated)
    text: az network dns record-set ns remove-record --keep-empty-record-set --nsdname ns.mysite.com --record-set-name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set ns update'] = """
type: command
short-summary: Update an NS record set.
examples:
  - name: Update an NS record set. (autogenerated)
    text: |
        az network dns record-set ns update --name MyRecordSet --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set ptr list'] = """
type: command
short-summary: List all PTR record sets in a zone.
examples:
  - name: List all PTR record sets in a zone. (autogenerated)
    text: |
        az network dns record-set ptr list --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set soa show'] = """
type: command
short-summary: Get the details of an SOA record.
examples:
  - name: Get the details of an SOA record (autogenerated)
    text: az network dns record-set soa show --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set srv create'] = """
type: command
short-summary: Create an empty SRV record set.
examples:
  - name: Create an empty SRV record set. (autogenerated)
    text: az network dns record-set srv create --metadata owner=WebTeam --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set txt create'] = """
type: command
short-summary: Create an empty TXT record set.
examples:
  - name: Create an empty TXT record set. (autogenerated)
    text: |
        az network dns record-set txt create --name MyRecordSet --resource-group MyResourceGroup --ttl 30 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set txt show'] = """
type: command
short-summary: Get the details of a TXT record set.
examples:
  - name: Get the details of a TXT record set. (autogenerated)
    text: |
        az network dns record-set txt show --name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns record-set txt update'] = """
type: command
short-summary: Update a TXT record set.
examples:
  - name: Update a TXT record set. (autogenerated)
    text: |
        az network dns record-set txt update --name MyRecordSet --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network dns zone update'] = """
type: command
short-summary: Update a DNS zone properties. Does not modify DNS records within the zone.
parameters:
  - name: --if-match
    short-summary: Update only if the resource with the same ETAG exists.
examples:
  - name: Update a DNS zone properties (autogenerated)
    text: az network dns zone update --name www.mysite.com --remove tags.no_80 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route auth list'] = """
type: command
short-summary: List link authorizations of an ExpressRoute circuit.
examples:
  - name: List link authorizations of an ExpressRoute circuit. (autogenerated)
    text: |
        az network express-route auth list --circuit-name MyCircuit --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network express-route gateway connection delete'] = """
type: command
short-summary: Delete an ExpressRoute gateway connection.
examples:
  - name: Delete an ExpressRoute gateway connection. (autogenerated)
    text: |
        az network express-route gateway connection delete --gateway-name MyGateway --name MyExpressRouteConnection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route gateway connection list'] = """
type: command
short-summary: List ExpressRoute gateway connections.
examples:
  - name: List ExpressRoute gateway connections. (autogenerated)
    text: |
        az network express-route gateway connection list --gateway-name MyGateway --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route gateway connection show'] = """
type: command
short-summary: Get the details of an ExpressRoute gateway connection.
examples:
  - name: Get the details of an ExpressRoute gateway connection. (autogenerated)
    text: |
        az network express-route gateway connection show --gateway-name MyGateway --name MyExpressRouteConnection --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route gateway delete'] = """
type: command
short-summary: Delete an ExpressRoute gateway.
examples:
  - name: Delete an ExpressRoute gateway. (autogenerated)
    text: |
        az network express-route gateway delete --name MyExpressRouteGateway --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route gateway list'] = """
type: command
short-summary: List ExpressRoute gateways.
examples:
  - name: List ExpressRoute gateways. (autogenerated)
    text: az network express-route gateway list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route gateway show'] = """
type: command
short-summary: Get the details of an ExpressRoute gateway.
examples:
  - name: Get the details of an ExpressRoute gateway. (autogenerated)
    text: |
        az network express-route gateway show --name MyExpressRouteGateway --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route peering connection delete'] = """
type: command
short-summary: Delete an ExpressRoute circuit connection.
examples:
  - name: Delete an ExpressRoute circuit connection. (autogenerated)
    text: |
        az network express-route peering connection delete --circuit-name MyCircuit --name MyPeeringConnection --peering-name MyPeering --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route peering update'] = """
type: command
short-summary: Update peering settings of an ExpressRoute circuit.
examples:
  - name: Update peering settings of an ExpressRoute circuit. (autogenerated)
    text: az network express-route peering update --circuit-name MyCircuit --name MyPeering --peer-asn 10002 --primary-peer-subnet 2002:db00::/126 --resource-group MyResourceGroup --secondary-peer-subnet 2003:db00::/126 --shared-key Abc123 --vlan-id 103
    crafted: true
"""

aladdin_helps['network express-route port create'] = """
type: command
short-summary: Create an ExpressRoute port.
examples:
  - name: Create an ExpressRoute port. (autogenerated)
    text: |
        az network express-route port create --bandwidth 200 --encapsulation Dot1Q --location westus2 --name MyExpressRoutePort --peering-location westus --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route port delete'] = """
type: command
short-summary: Delete an ExpressRoute port.
examples:
  - name: Delete an ExpressRoute port. (autogenerated)
    text: |
        az network express-route port delete --name MyExpressRoutePort --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route port link list'] = """
type: command
short-summary: List ExpressRoute links.
examples:
  - name: List ExpressRoute links. (autogenerated)
    text: |
        az network express-route port link list --port-name MyPort --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route port link show'] = """
type: command
short-summary: Get the details of an ExpressRoute link.
examples:
  - name: Get the details of an ExpressRoute link. (autogenerated)
    text: |
        az network express-route port link show --name MyLinkExpressRoutePort --port-name MyPort --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route port location show'] = """
type: command
short-summary: Get the details of an ExpressRoute port location.
examples:
  - name: Get the details of an ExpressRoute port location. (autogenerated)
    text: |
        az network express-route port location show --location westus2
    crafted: true
"""

aladdin_helps['network express-route port show'] = """
type: command
short-summary: Get the details of an ExpressRoute port.
examples:
  - name: Get the details of an ExpressRoute port. (autogenerated)
    text: |
        az network express-route port show --name MyExpressRoutePort --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network express-route port update'] = """
type: command
short-summary: Update settings of an ExpressRoute port.
examples:
  - name: Update settings of an ExpressRoute port (autogenerated)
    text: |
        az network express-route port update --name MyExpressRoutePort --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb frontend-ip show'] = """
type: command
short-summary: Get the details of a frontend IP address.
examples:
  - name: Get the details of a frontend IP address (autogenerated)
    text: |
        az network lb frontend-ip show --lb-name MyLb --name MyFrontendIp --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network lb frontend-ip update'] = """
type: command
short-summary: Update a frontend IP address.
examples:
  - name: Update a frontend IP address. (autogenerated)
    text: |
        az network lb frontend-ip update --lb-name MyLb --name MyFrontendIp --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup
    crafted: true
"""

aladdin_helps['network lb inbound-nat-pool update'] = """
type: command
short-summary: Update an inbound NAT address pool.
examples:
  - name: Update an inbound NAT address pool. (autogenerated)
    text: |
        az network lb inbound-nat-pool update --backend-port 8080 --enable-tcp-reset true --frontend-port-range-end 89 --frontend-port-range-start 80 --lb-name MyLb --name MyNatPool --resource-group MyResourceGroup
    crafted: true
  - name: Update an inbound NAT address pool. (autogenerated)
    text: |
        az network lb inbound-nat-pool update --enable-tcp-reset true --lb-name MyLb --name MyNatPool --protocol Udp --resource-group MyResourceGroup
    crafted: true
  - name: Update an inbound NAT address pool. (autogenerated)
    text: az network lb inbound-nat-pool update --backend-port 8080 --frontend-port-range-end 89 --frontend-port-range-start 80 --lb-name MyLb --name MyNatPool --protocol Udp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb inbound-nat-rule update'] = """
type: command
short-summary: Update an inbound NAT rule.
examples:
  - name: Update an inbound NAT rule. (autogenerated)
    text: |
        az network lb inbound-nat-rule update --backend-port 3389 --frontend-port 5432 --lb-name MyLb --name MyNatRule --protocol Udp --resource-group MyResourceGroup
    crafted: true
  - name: Update an inbound NAT rule. (autogenerated)
    text: |
        az network lb inbound-nat-rule update --lb-name MyLb --name MyNatRule --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup
    crafted: true
"""

aladdin_helps['network lb outbound-rule create'] = """
type: command
short-summary: Create an outbound-rule.
examples:
  - name: Create an outbound-rule. (autogenerated)
    text: |
        az network lb outbound-rule create --address-pool MyAddressPool --frontend-ip-configs myfrontendoutbound --idle-timeout 5 --lb-name MyLb --name MyOutboundRule --outbound-ports 10000 --protocol Udp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb outbound-rule delete'] = """
type: command
short-summary: Delete an outbound-rule.
examples:
  - name: Delete an outbound-rule. (autogenerated)
    text: |
        az network lb outbound-rule delete --lb-name MyLb --name MyOutboundRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb outbound-rule list'] = """
type: command
short-summary: List outbound rules.
examples:
  - name: List outbound rules. (autogenerated)
    text: |
        az network lb outbound-rule list --lb-name MyLb --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb outbound-rule show'] = """
type: command
short-summary: Get the details of an outbound rule.
examples:
  - name: Get the details of an outbound rule. (autogenerated)
    text: |
        az network lb outbound-rule show --lb-name MyLb --name MyOutboundRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb outbound-rule update'] = """
type: command
short-summary: Update an outbound-rule.
examples:
  - name: Update an outbound-rule. (autogenerated)
    text: az network lb outbound-rule update --enable-tcp-reset true --lb-name MyLb --name MyOutboundRule --outbound-ports 10000 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network lb probe update'] = """
type: command
short-summary: Update a probe.
examples:
  - name: Update a probe. (autogenerated)
    text: az network lb probe update --lb-name MyLb --name MyProbe --port 81 --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network lb rule update'] = """
type: command
short-summary: Update a load balancing rule.
examples:
  - name: Update a load balancing rule. (autogenerated)
    text: |
        az network lb rule update --disable-outbound-snat true --lb-name MyLb --name MyLbRule --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network list-service-aliases'] = """
type: command
short-summary: List available service aliases in the region which can be used for Service Endpoint Policies.
examples:
  - name: List available service aliases in the region which can be used for Service Endpoint Policies. (autogenerated)
    text: az network list-service-aliases --location westus2
    crafted: true
"""

aladdin_helps['network list-service-tags'] = """
type: command
short-summary: List all service tags which are below to different resources
long-summary: >
    A service tag represents a group of IP address prefixes to help minimize complexity for security rule creation.
    To learn more about list-service-tags, visit https://docs.microsoft.com/en-us/azure/virtual-network/security-overview#service-tags
examples:
  - name: Gets a list of service tag information resources. (autogenerated)
    text: |
        az network list-service-tags --location westus2
    crafted: true
"""

aladdin_helps['network local-gateway delete'] = """
type: command
short-summary: Delete a local VPN gateway.
long-summary: >
    In order to delete a Local Network Gateway, you must first delete ALL Connection objects in Azure
    that are connected to the Gateway. After deleting the Gateway, proceed to delete other resources now not in use.
    For more information, follow the order of instructions on this page: https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-delete-vnet-gateway-portal
examples:
  - name: Delete a local VPN gateway. (autogenerated)
    text: |
        az network local-gateway delete --name MyLocalGateway --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network local-gateway update'] = """
type: command
short-summary: Update a local VPN gateway.
examples:
  - name: Update a local VPN gateway. (autogenerated)
    text: |
        az network local-gateway update --gateway-ip-address 23.99.221.164 --name MyLocalGateway --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config address-pool add'] = """
type: command
short-summary: Add an address pool to an IP configuration.
examples:
  - name: Add an address pool to an IP configuration. (autogenerated)
    text: |
        az network nic ip-config address-pool add --address-pool MyAddressPool --ip-config-name MyIpConfig --lb-name MyLb --nic-name MyNic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config address-pool remove'] = """
type: command
short-summary: Remove an address pool of an IP configuration.
examples:
  - name: Remove an address pool of an IP configuration. (autogenerated)
    text: |
        az network nic ip-config address-pool remove --address-pool MyAddressPool --ip-config-name MyIpConfig --lb-name MyLb --nic-name MyNic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config create'] = """
type: command
short-summary: Create an IP configuration.
long-summary: >
    You must have the Microsoft.Network/AllowMultipleIpConfigurationsPerNic feature enabled for your subscription.
    Only one configuration may be designated as the primary IP configuration per NIC, using the `--make-primary` flag.
examples:
  - name: Create an IP configuration. (autogenerated)
    text: |
        az network nic ip-config create --name MyIpConfig --nic-name MyNic --private-ip-address 10.0.0.9 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config inbound-nat-rule add'] = """
type: command
short-summary: Add an inbound NAT rule to an IP configuration.
examples:
  - name: Add an inbound NAT rule to an IP configuration. (autogenerated)
    text: |
        az network nic ip-config inbound-nat-rule add --inbound-nat-rule MyNatRule --ip-config-name MyIpConfig --lb-name MyLb --nic-name MyNic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config inbound-nat-rule remove'] = """
type: command
short-summary: Remove an inbound NAT rule of an IP configuration.
examples:
  - name: Remove an inbound NAT rule of an IP configuration. (autogenerated)
    text: |
        az network nic ip-config inbound-nat-rule remove --inbound-nat-rule MyNatRule --ip-config-name MyIpConfig --lb-name MyLb --nic-name MyNic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic ip-config update'] = """
type: command
short-summary: Update an IP configuration.
examples:
  - name: Update an IP configuration. (autogenerated)
    text: |
        az network nic ip-config update --name MyIpConfig --nic-name MyNic --public-ip-address MyAppGatewayPublicIp --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nic update'] = """
type: command
short-summary: Update a network interface.
examples:
  - name: Update a network interface. (autogenerated)
    text: |
        az network nic update --accelerated-networking true --name MyNic --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network nsg rule update'] = """
type: command
short-summary: Update a network security group rule.
examples:
  - name: Update a network security group rule. (autogenerated)
    text: |
        az network nsg rule update --name MyNsgRule --nsg-name MyNsg --resource-group MyResourceGroup --source-address-prefixes 208.130.28/24
    crafted: true
"""

aladdin_helps['network nsg update'] = """
type: command
short-summary: Update a network security group.
long-summary: >
    This command can only be used to update the tags of an NSG. Name and resource group are immutable and cannot be updated.
examples:
  - name: Update a network security group. (autogenerated)
    text: |
        az network nsg update --name MyNsg --resource-group MyResourceGroup --set tags.CostCenter=MyBusinessGroup
    crafted: true
"""

aladdin_helps['network private-endpoint delete'] = """
type: command
short-summary: Delete a private endpoint.
examples:
  - name: Delete a private endpoint. (autogenerated)
    text: |
        az network private-endpoint delete --name MyPrivateEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-endpoint dns-zone-group delete'] = """
type: command
short-summary: Delete a private endpoint dns zone group.
examples:
  - name: Delete a private endpoint dns zone group. (autogenerated)
    text: az network private-endpoint dns-zone-group delete --endpoint-name MyEndpoint --name MyPrivateDnsZoneGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-endpoint dns-zone-group list'] = """
type: command
short-summary: List all private endpoint dns zone groups.
examples:
  - name: List all private endpoint dns zone groups. (autogenerated)
    text: az network private-endpoint dns-zone-group list --endpoint-name MyEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-endpoint dns-zone-group show'] = """
type: command
short-summary: Show a private endpoint dns zone group.
examples:
  - name: Show a private endpoint dns zone group. (autogenerated)
    text: az network private-endpoint dns-zone-group show --endpoint-name MyEndpoint --name MyPrivateDnsZoneGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-endpoint show'] = """
type: command
short-summary: Get the details of a private endpoint.
examples:
  - name: Get the details of a private endpoint (autogenerated)
    text: |
        az network private-endpoint show --name MyPrivateEndpoint --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-endpoint update'] = """
type: command
short-summary: Update a private endpoint.
examples:
  - name: Update a private endpoint. (autogenerated)
    text: az network private-endpoint update --name MyPE --resource-group MyResourceGroup --set useRemoteGateways=true
    crafted: true
"""

aladdin_helps['network private-link-service connection delete'] = """
type: command
short-summary: Delete a private link service endpoint connection.
examples:
  - name: Delete a private link service endpoint connection. (autogenerated)
    text: |
        az network private-link-service connection delete --name MyPrivateEndpointConnection --resource-group MyResourceGroup --service-name MyService
    crafted: true
"""

aladdin_helps['network private-link-service delete'] = """
type: command
short-summary: Delete a private link service.
examples:
  - name: Delete a private link service. (autogenerated)
    text: |
        az network private-link-service delete --name MyPrivateLinkService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network private-link-service show'] = """
type: command
short-summary: Get the details of a private link service.
examples:
  - name: Get the details of a private link service. (autogenerated)
    text: |
        az network private-link-service show --name MyPrivateLinkService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network profile delete'] = """
type: command
short-summary: Delete a network profile.
examples:
  - name: Delete a network profile. (autogenerated)
    text: |
        az network profile delete --name MyNetworkProfile --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network profile list'] = """
type: command
short-summary: List network profiles.
examples:
  - name: List network profiles (autogenerated)
    text: |
        az network profile list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network profile show'] = """
type: command
short-summary: Get the details of a network profile.
examples:
  - name: Get the details of a network profile. (autogenerated)
    text: |
        az network profile show --name MyNetworkProfile --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network public-ip prefix create'] = """
type: command
short-summary: Create a public IP prefix resource.
examples:
  - name: Create a public IP prefix resource. (autogenerated)
    text: |
        az network public-ip prefix create --length 28 --location westus2 --name MyPublicIPPrefix --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network public-ip prefix delete'] = """
type: command
short-summary: Delete a public IP prefix resource.
examples:
  - name: Delete a public IP prefix resource. (autogenerated)
    text: |
        az network public-ip prefix delete --name MyPublicIPPrefix --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network public-ip prefix show'] = """
type: command
short-summary: Get the details of a public IP prefix resource.
examples:
  - name: Get the details of a public IP prefix resource. (autogenerated)
    text: |
        az network public-ip prefix show --name MyPublicIPPrefix --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network public-ip prefix update'] = """
type: command
short-summary: Update a public IP prefix resource.
examples:
  - name: Update a public IP prefix resource. (autogenerated)
    text: |
        az network public-ip prefix update --name MyPublicIPPrefix --resource-group MyResourceGroup --set useRemoteGateways=true
    crafted: true
"""

aladdin_helps['network route-filter create'] = """
type: command
short-summary: Create a route filter.
examples:
  - name: Create a route filter. (autogenerated)
    text: |
        az network route-filter create --location westus2 --name MyRouteFilter --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network route-filter show'] = """
type: command
short-summary: Get the details of a route filter.
examples:
  - name: Get the details of a route filter. (autogenerated)
    text: |
        az network route-filter show --expand peerings --name MyRouteFilter --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network route-table route update'] = """
type: command
short-summary: Update a route in a route table.
examples:
  - name: Update a route in a route table. (autogenerated)
    text: |
        az network route-table route update --address-prefix 10.0.0.0/16 --name MyRoute --next-hop-ip-address 10.0.100.5 --next-hop-type VirtualNetworkGateway --route-table-name MyRouteTable
    crafted: true
"""

aladdin_helps['network service-endpoint policy create'] = """
type: command
short-summary: Create a service endpoint policy.
examples:
  - name: Create a service endpoint policy. (autogenerated)
    text: |
        az network service-endpoint policy create --name MyServiceEndpointPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network service-endpoint policy list'] = """
type: command
short-summary: List service endpoint policies.
examples:
  - name: List service endpoint policies. (autogenerated)
    text: |
        az network service-endpoint policy list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network service-endpoint policy show'] = """
type: command
short-summary: Get the details of a service endpoint policy.
examples:
  - name: Get the details of a service endpoint policy. (autogenerated)
    text: |
        az network service-endpoint policy show --name MyServiceEndpointPolicy --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network service-endpoint policy-definition list'] = """
type: command
short-summary: List service endpoint policy definitions.
examples:
  - name: List service endpoint policy definitions. (autogenerated)
    text: az network service-endpoint policy-definition list --policy-name MyPolicy --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network service-endpoint policy-definition update'] = """
type: command
short-summary: Update a service endpoint policy definition.
examples:
  - name: Update a service endpoint policy definition. (autogenerated)
    text: |
        az network service-endpoint policy-definition update --add communities='12076:5010' --name MyServiceEndpointPolicyDefinition --policy-name MyPolicy --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network traffic-manager endpoint delete'] = """
type: command
short-summary: Delete a traffic manager endpoint.
examples:
  - name: Delete a traffic manager endpoint. (autogenerated)
    text: |
        az network traffic-manager endpoint delete --name MyEndpoint --profile-name MyTmProfile --resource-group MyResourceGroup --subscription MySubscription --type azureEndpoints
    crafted: true
"""

aladdin_helps['network traffic-manager endpoint update'] = """
type: command
short-summary: Update a traffic manager endpoint.
examples:
  - name: Update a traffic manager endpoint. (autogenerated)
    text: |
        az network traffic-manager endpoint update --name MyEndpoint --profile-name MyTmProfile --resource-group MyResourceGroup --target webserver.mysite.com --type azureEndpoints
    crafted: true
  - name: Update a traffic manager endpoint. (autogenerated)
    text: |
        az network traffic-manager endpoint update --endpoint-status Enabled --name MyEndpoint --profile-name MyTmProfile --resource-group MyResourceGroup --type azureEndpoints
    crafted: true
"""

aladdin_helps['network traffic-manager profile delete'] = """
type: command
short-summary: Delete a traffic manager profile.
examples:
  - name: Delete a traffic manager profile. (autogenerated)
    text: |
        az network traffic-manager profile delete --name MyTmProfile --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network traffic-manager profile update'] = """
type: command
short-summary: Update a traffic manager profile.
examples:
  - name: Update a traffic manager profile. (autogenerated)
    text: |
        az network traffic-manager profile update --name MyTmProfile --resource-group MyResourceGroup --status Enabled
    crafted: true
  - name: Update a traffic manager profile. (autogenerated)
    text: |
        az network traffic-manager profile update --name MyTmProfile --path "/" --routing-method Performance
    crafted: true
"""

aladdin_helps['network vnet create'] = """
type: command
short-summary: Create a virtual network.
long-summary: >
    You may also create a subnet at the same time by specifying a subnet name and (optionally) an address prefix.
    To learn about how to create a virtual network visit https://docs.microsoft.com/azure/virtual-network/manage-virtual-network#create-a-virtual-network
examples:
  - name: Create a virtual network. (autogenerated)
    text: |
        az network vnet create --address-prefixes 10.0.0.0/16 --name MyVirtualNetwork --resource-group MyResourceGroup --subnet-name MyAseSubnet --subnet-prefixes 10.0.0.0/24
    crafted: true
"""

aladdin_helps['network vnet subnet delete'] = """
type: command
short-summary: Delete a subnet.
examples:
  - name: Delete a subnet. (autogenerated)
    text: |
        az network vnet subnet delete --name MySubnet --resource-group MyResourceGroup --vnet-name MyVnet
    crafted: true
"""

aladdin_helps['network vnet subnet list-available-delegations'] = """
type: command
short-summary: List the services available for subnet delegation.
examples:
  - name: List the services available for subnet delegation. (autogenerated)
    text: |
        az network vnet subnet list-available-delegations --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network vnet update'] = """
type: command
short-summary: Update a virtual network.
examples:
  - name: Update a virtual network. (autogenerated)
    text: |
        az network vnet update --address-prefixes 40.1.0.0/24 --name MyVNet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network vnet-gateway create'] = """
type: command
short-summary: Create a virtual network gateway.
examples:
  - name: Create a virtual network gateway. (autogenerated)
    text: |
        az network vnet-gateway create --gateway-type Vpn --location westus2 --name MyVnetGateway --no-wait --public-ip-addresses myVGPublicIPAddress --resource-group MyResourceGroup --sku Basic --vnet MyVnet --vpn-type PolicyBased
    crafted: true
"""

aladdin_helps['network vnet-gateway revoked-cert delete'] = """
type: command
short-summary: Delete a revoked certificate.
examples:
  - name: Delete a revoked certificate. (autogenerated)
    text: |
        az network vnet-gateway revoked-cert delete --gateway-name MyVnetGateway --name MyRootCertificate --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network vnet-gateway root-cert delete'] = """
type: command
short-summary: Delete a root certificate.
examples:
  - name: Delete a root certificate. (autogenerated)
    text: |
        az network vnet-gateway root-cert delete --gateway-name MyVnetGateway --name MyRootCertificate --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network vnet-gateway update'] = """
type: command
short-summary: Update a virtual network gateway.
examples:
  - name: Update a virtual network gateway. (autogenerated)
    text: |
        az network vnet-gateway update --address-prefixes 40.1.0.0/24 --client-protocol IkeV2 --name MyVnetGateway --resource-group MyResourceGroup
    crafted: true
  - name: Update a virtual network gateway. (autogenerated)
    text: az network vnet-gateway update --name MyVnetGateway --remove tags.no_80 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['network vnet-gateway vpn-client generate'] = """
type: command
short-summary: Generate VPN client configuration.
long-summary: The command outputs a URL to a zip file for the generated VPN client configuration.
examples:
  - name: Generate VPN client configuration. (autogenerated)
    text: |
        az network vnet-gateway vpn-client generate --name MyVnetGateway --processor-architecture Amd64 --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network vnet-gateway wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of the virtual network gateway is met.
examples:
  - name: Place the CLI in a waiting state until a condition of the virtual network gateway is met. (autogenerated)
    text: |
        az network vnet-gateway wait --name MyVnetGateway --resource-group MyResourceGroup --updated
    crafted: true
"""

aladdin_helps['network vpn-connection create'] = """
type: command
short-summary: Create a VPN connection.
long-summary: The VPN Gateway and Local Network Gateway must be provisioned before creating the connection between them.
parameters:
  - name: --vnet-gateway1
    short-summary: Name or ID of the source virtual network gateway.
  - name: --vnet-gateway2
    short-summary: Name or ID of the destination virtual network gateway to connect to using a 'Vnet2Vnet' connection.
  - name: --local-gateway2
    short-summary: Name or ID of the destination local network gateway to connect to using an 'IPSec' connection.
  - name: --express-route-circuit2
    short-summary: Name or ID of the destination ExpressRoute to connect to using an 'ExpressRoute' connection.
  - name: --authorization-key
    short-summary: The authorization key for the VPN connection.
  - name: --enable-bgp
    short-summary: Enable BGP for this VPN connection.
  - name: --validate
    short-summary: Display and validate the ARM template but do not create any resources.
examples:
  - name: Create a VPN connection. (autogenerated)
    text: |
        az network vpn-connection create --location westus2 --name MyConnection --resource-group MyResourceGroup --shared-key Abc123 --vnet-gateway1 MyVnetGateway --vnet-gateway2 /subscriptions/{subscriptionID}/resourceGroups/TestBGPRG1/providers/Microsoft.Network/virtualNetworkGateways/VNet1GW
    crafted: true
  - name: Create a VPN connection. (autogenerated)
    text: |
        az network vpn-connection create --local-gateway2 MyLocalGateway --location westus2 --name MyConnection --resource-group MyResourceGroup --shared-key Abc123 --vnet-gateway1 MyVnetGateway
    crafted: true
"""

aladdin_helps['network vpn-connection shared-key show'] = """
type: command
short-summary: Retrieve a VPN connection shared key.
examples:
  - name: Retrieve a VPN connection shared key. (autogenerated)
    text: |
        az network vpn-connection shared-key show --connection-name MyConnection --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['network vpn-connection shared-key update'] = """
type: command
short-summary: Update a VPN connection shared key.
examples:
  - name: Update a VPN connection shared key. (autogenerated)
    text: |
        az network vpn-connection shared-key update --connection-name MyConnection --resource-group MyResourceGroup --subscription MySubscription --value Abc123
    crafted: true
"""

aladdin_helps['network vpn-connection update'] = """
type: command
short-summary: Update a VPN connection.
examples:
  - name: Update a VPN connection. (autogenerated)
    text: |
        az network vpn-connection update --name MyConnection --resource-group MyResourceGroup --use-policy-based-traffic-selectors true
    crafted: true
"""

aladdin_helps['network watcher connection-monitor create'] = """
type: command
short-summary: Create a connection monitor.
long-summary: |
    This extension allow to create V1 and V2 version of connection monitor.
    V1 connection monitor supports single source and destination endpoint which comes with V1 argument groups as usual.
    V2 connection monitor supports multiple endpoints and several test protocol which comes with V2 argument groups.
parameters:
  - name: --source-resource
    short-summary: >
        Currently only Virtual Machines are supported.
  - name: --dest-resource
    short-summary: >
        Currently only Virtual Machines are supported.
examples:
  - name: Create a connection monitor. (autogenerated)
    text: |
        az network watcher connection-monitor create --endpoint-dest-address bing.com --endpoint-dest-name bing --endpoint-source-name "vm01" --endpoint-source-resource-id MyVM01ResourceID --location westus2 --name MyConnectionMonitorName --protocol Tcp --tcp-port 2048 --test-config-name TCPTestConfig
    crafted: true
"""

aladdin_helps['network watcher connection-monitor list'] = """
type: command
short-summary: List connection monitors for the given region.
examples:
  - name: List connection monitors for the given region. (autogenerated)
    text: |
        az network watcher connection-monitor list --location westus --subscription MySubscription
    crafted: true
"""

aladdin_helps['network watcher flow-log delete'] = """
type: command
short-summary: Delete the specified flow log resource.
examples:
  - name: Delete the specified flow log resource. (autogenerated)
    text: az network watcher flow-log delete --location westus2 --name MyFlowLogger --subscription MySubscription
    crafted: true
"""

aladdin_helps['network watcher flow-log list'] = """
type: command
short-summary: List all flow log resources for the specified Network Watcher
examples:
  - name: List all flow log resources for the specified Network Watcher. (autogenerated)
    text: az network watcher flow-log list --location westus2
    crafted: true
"""

aladdin_helps['network watcher packet-capture delete'] = """
type: command
short-summary: Delete a packet capture session.
examples:
  - name: Delete a packet capture session. (autogenerated)
    text: |
        az network watcher packet-capture delete --location westcentralus --name packetCaptureName --subscription MySubscription
    crafted: true
"""

aladdin_helps['network watcher packet-capture list'] = """
type: command
short-summary: List all packet capture sessions within a resource group.
examples:
  - name: List all packet capture sessions within a resource group (autogenerated)
    text: |
        az network watcher packet-capture list --location westus --subscription MySubscription
    crafted: true
"""

aladdin_helps['policy remediation delete'] = """
type: command
short-summary: Delete a resource policy remediation.
examples:
  - name: Delete a resource policy remediation. (autogenerated)
    text: az policy remediation delete --name MyRemediation
    crafted: true
"""

aladdin_helps['policy remediation show'] = """
type: command
short-summary: Show a resource policy remediation.
examples:
  - name: Show a resource policy remediation. (autogenerated)
    text: az policy remediation show --name MyRemediation
    crafted: true
"""

aladdin_helps['network private-dns link vnet create'] = """
type: command
short-summary: Create a virtual network link to the specified Private DNS zone.
parameters:
  - name: --tags
    short-summary: Resource tags for the virtual network link.
examples:
  - name: Create a virtual network link to the specified Private DNS zone. (autogenerated)
    text: |
        az network private-dns link vnet create --name MyLinkName --registration-enabled true --resource-group MyResourceGroup --subscription MySubscription --tags CostCenter=Marketing --virtual-network MyVirtualNetworkId --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network private-dns link vnet update'] = """
type: command
short-summary: Update a virtual network link's properties. Does not modify virtual network within the link.
parameters:
  - name: --tags
    short-summary: Resource tags for the virtual network link.
  - name: --if-match
    short-summary: The ETag of the virtual network link to the Private DNS zone.
    long-summary: Omit this value to always overwrite the current virtual network link. Specify the last-seen ETag value to prevent accidentally overwritting any concurrent changes.
examples:
  - name: Update a virtual network link's properties (autogenerated)
    text: |
        az network private-dns link vnet update --name MyLinkName --registration-enabled true --resource-group MyResourceGroup --tags CostCenter=Marketing --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network private-dns record-set a update'] = """
type: command
short-summary: Update an A record set.
examples:
  - name: Update an A record set. (autogenerated)
    text: |
        az network private-dns record-set a update --name MyRecordSet --resource-group MyResourceGroup --set useRemoteGateways=true --subscription MySubscription --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network private-dns record-set cname delete'] = """
type: command
short-summary: Delete a CNAME record set and its associated record.
examples:
  - name: Delete a CNAME record set and its associated record. (autogenerated)
    text: az network private-dns record-set cname delete --name MyRecordSet --resource-group MyResourceGroup --subscription MySubscription --yes --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['network private-dns record-set srv create'] = """
type: command
short-summary: Create an empty SRV record set.
examples:
  - name: Create an empty SRV record set. (autogenerated)
    text: az network private-dns record-set srv create --name MyRecordSet --resource-group MyResourceGroup --ttl 300 --zone-name www.mysite.com
    crafted: true
"""

aladdin_helps['account set'] = """
type: command
short-summary: Set a subscription to be the current active subscription.
examples:
  - name: Set a subscription to be the current active subscription. (autogenerated)
    text: az account set --subscription Subscription
    crafted: true
"""

aladdin_helps['mariadb server configuration list'] = """
type: command
short-summary: List the configuration values for a server.
examples:
  - name: List the configuration values for a server. (autogenerated)
    text: az mariadb server configuration list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mariadb server configuration show'] = """
type: command
short-summary: Get the configuration for a server."
examples:
  - name: Get the configuration for a server." (commonly used with --output). (autogenerated)
    text: az mariadb server configuration show --name MyServerConfiguration --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mariadb server delete'] = """
type: command
short-summary: Delete a server.
examples:
  - name: Delete a server. (autogenerated)
    text: az mariadb server delete --name testsvr --resource-group testgroup --subscription MySubscription --yes
    crafted: true
"""

aladdin_helps['mariadb server firewall-rule delete'] = """
type: command
short-summary: Delete a firewall rule.
examples:
  - name: Delete a firewall rule. (autogenerated)
    text: az mariadb server firewall-rule delete --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer --subscription MySubscription --yes
    crafted: true
"""

aladdin_helps['mariadb server firewall-rule list'] = """
type: command
short-summary: List all firewall rules for a server.
examples:
  - name: List all firewall rules for a server (autogenerated)
    text: az mariadb server firewall-rule list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mariadb server firewall-rule show'] = """
type: command
short-summary: Get the details of a firewall rule.
examples:
  - name: Get the details of a firewall rule. (autogenerated)
    text: az mariadb server firewall-rule show --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mariadb server replica create'] = """
type: command
short-summary: Create a read replica for a server.
examples:
  - name: Create a read replica for a server. (autogenerated)
    text: |
        az mariadb server replica create --location westus2 --name testreplsvr --resource-group testgroup --source-server "/subscriptions/${SubID}/resourceGroups/${ResourceGroup}/providers/Microsoft.DBforMariaDB/servers/testsvr2" --subscription MySubscription
    crafted: true
"""

aladdin_helps['mariadb server show'] = """
type: command
short-summary: Get the details of a server.
examples:
  - name: Get the details of a server. (autogenerated)
    text: az mariadb server show --name MyServer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['mariadb server update'] = """
type: command
short-summary: Update a server.
examples:
  - name: Update a server. (autogenerated)
    text: az mariadb server update --admin-password password --name testsvrnew --resource-group testgroup
    crafted: true
  - name: Update a server. (autogenerated)
    text: az mariadb server update --name testsvrnew --resource-group testgroup --ssl-enforcement Enabled
    crafted: true
"""

aladdin_helps['mariadb server vnet-rule create'] = """
type: command
short-summary: Create a virtual network rule to allows access to a MariaDB server.
examples:
  - name: Create a virtual network rule to allows access to a MariaDB server. (autogenerated)
    text: az mariadb server vnet-rule create --ignore-missing-endpoint true --name vnetRuleName --resource-group testgroup --server-name testsvr --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/vnetName/subnets/subnetName --subscription MySubscription --vnet-name vnetName
    crafted: true
"""

aladdin_helps['mysql server configuration list'] = """
type: command
short-summary: List the configuration values for a server.
examples:
  - name: List the configuration values for a server. (autogenerated)
    text: az mysql server configuration list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server configuration show'] = """
type: command
short-summary: Get the configuration for a server."
examples:
  - name: Get the configuration for a server." (autogenerated)
    text: az mysql server configuration show --name MyServerConfiguration --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server delete'] = """
type: command
short-summary: Delete a server.
examples:
  - name: Delete a server. (autogenerated)
    text: az mysql server delete --name testsvr --resource-group testgroup --subscription MySubscription --yes
    crafted: true
"""

aladdin_helps['mysql server firewall-rule delete'] = """
type: command
short-summary: Delete a firewall rule.
examples:
  - name: Delete a firewall rule. (autogenerated)
    text: az mysql server firewall-rule delete --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server firewall-rule list'] = """
type: command
short-summary: List all firewall rules for a server.
examples:
  - name: List all firewall rules for a server. (autogenerated)
    text: az mysql server firewall-rule list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server firewall-rule show'] = """
type: command
short-summary: Get the details of a firewall rule.
examples:
  - name: Get the details of a firewall rule (autogenerated)
    text: az mysql server firewall-rule show --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer --subscription MySubscription
    crafted: true
"""

aladdin_helps['mysql server private-endpoint-connection show'] = """
type: command
short-summary: Show details of a private endpoint connection associated with a MySQL server.
examples:
  - name: Show details of a private endpoint connection associated with a MySQL server. (autogenerated)
    text: az mysql server private-endpoint-connection show --name MyPrivateEndpointConnectionAssociatedServer --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server private-link-resource list'] = """
type: command
short-summary: List the private link resources supported for a MySQL server.
examples:
  - name: List the private link resources supported for a MySQL server. (autogenerated)
    text: az mysql server private-link-resource list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['mysql server replica create'] = """
type: command
short-summary: Create a read replica for a server.
examples:
  - name: Create a read replica for a server. (autogenerated)
    text: |
        az mysql server replica create --location westus2 --name testreplsvr --resource-group testgroup --source-server "/subscriptions/${SubID}/resourceGroups/${ResourceGroup}/providers/Microsoft.DBforMySQL/servers/testsvr2"
    crafted: true
"""

aladdin_helps['mysql server restart'] = """
type: command
short-summary: Restart a server.
examples:
  - name: Restart a server. (autogenerated)
    text: az mysql server restart --name testsvr --resource-group testgroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['mysql server show'] = """
type: command
short-summary: Get the details of a server.
examples:
  - name: Get the details of a server
    text: az mysql server show --name MyServer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['mysql server update'] = """
type: command
short-summary: Update a server.
examples:
  - name: Update a server. (autogenerated)
    text: az mysql server update --name testsvrnew --resource-group testgroup --ssl-enforcement Enabled
    crafted: true
"""

aladdin_helps['mysql server wait'] = """
type: command
short-summary: Wait for server to satisfy certain conditions.
examples:
  - name: Wait for server to satisfy certain conditions. (autogenerated)
    text: az mysql server wait --exists --name MyServer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['postgres server ad-admin create'] = """
type: command
short-summary: Create an Active Directory Administrator for PostgreSQL server.
examples:
  - name: Create an Active Directory Administrator for PostgreSQL server. (autogenerated)
    text: az postgres server ad-admin create --display-name username@domain.com --object-id 1FCD6583-267B-4484-BF9B-507E4B62DE79 --resource-group testgroup --server-name testsvr --subscription MySubscription
    crafted: true
"""

aladdin_helps['postgres server configuration list'] = """
type: command
short-summary: List the configuration values for a server.
examples:
  - name: List the configuration values for a server. (autogenerated)
    text: az postgres server configuration list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['postgres server configuration show'] = """
type: command
short-summary: Get the configuration for a server."
examples:
  - name: Get the configuration for a server." (autogenerated)
    text: az postgres server configuration show --name MyServerConfiguration --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['postgres server firewall-rule delete'] = """
type: command
short-summary: Delete a firewall rule.
examples:
  - name: Delete a firewall rule. (autogenerated)
    text: az postgres server firewall-rule delete --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['postgres server firewall-rule list'] = """
type: command
short-summary: List all firewall rules for a server.
examples:
  - name: List all firewall rules for a server. (autogenerated)
    text: az postgres server firewall-rule list --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['postgres server firewall-rule show'] = """
type: command
short-summary: Get the details of a firewall rule.
examples:
  - name: Get the details of a firewall rule. (autogenerated)
    text: az postgres server firewall-rule show --name MyFirewallRule --resource-group MyResourceGroup --server-name MyServer
    crafted: true
"""

aladdin_helps['postgres server replica create'] = """
type: command
short-summary: Create a read replica for a server.
examples:
  - name: Create a read replica for a server. (autogenerated)
    text: |
        az postgres server replica create --location westus2 --name testreplsvr --resource-group testgroup --source-server "/subscriptions/${SubID}/resourceGroups/${ResourceGroup}/providers/Microsoft.DBforPostgreSQL/servers/testsvr2"
    crafted: true
"""

aladdin_helps['postgres server show'] = """
type: command
short-summary: Get the details of a server.
examples:
  - name: Get the details of a server. (autogenerated)
    text: az postgres server show --name MyServer --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['postgres server update'] = """
type: command
short-summary: Update a server.
examples:
  - name: Update a server. (autogenerated)
    text: az postgres server update --name testsvrnew --resource-group testgroup --ssl-enforcement Enabled
    crafted: true
"""

aladdin_helps['redis create'] = """
type: command
short-summary: Create new Redis Cache instance.
examples:
  - name: Create new Redis Cache instance. (autogenerated)
    text: az redis create --location westus2 --name MyRedisCache --resource-group MyResourceGroup --sku Basic --vm-size c0
    crafted: true
"""

aladdin_helps['relay hyco authorization-rule keys list'] = """
type: command
short-summary: List the keys and connection strings of Authorization Rule for Relay Service Hybrid Connection.
examples:
  - name: List the keys and connection strings of Authorization Rule for Relay Service Hybrid Connection (autogenerated)
    text: az relay hyco authorization-rule keys list --hybrid-connection-name myhyco --name myauthorule --namespace-name mynamespace --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['relay namespace authorization-rule keys list'] = """
type: command
short-summary: List the keys and connection strings of Authorization Rule for Relay Service Namespace
examples:
  - name: List the keys and connection strings of Authorization Rule for Relay Service Namespace (commonly used with --output and --query). (autogenerated)
    text: az relay namespace authorization-rule keys list --name myauthorule --namespace-name mynamespace --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""



aladdin_helps['deployment group validate'] = """
type: command
short-summary: Validate whether a template is valid at resource group.
parameters:
  - name: --parameters -p
    short-summary: Supply deployment parameter values.
    long-summary: >
        Parameters may be supplied from a file using the `@{path}` syntax, a JSON string, or as <KEY=VALUE> pairs. Parameters are evaluated in order, so when a value is assigned twice, the latter value will be used.
        It is recommended that you supply your parameters file first, and then override selectively using KEY=VALUE syntax.
  - name: --template-file -f
    short-summary: The path to the template file.
  - name: --template-uri -u
    short-summary: The URI to the template file.
  - name: --resource-group -g
    short-summary: The resource group to create deployment at.
  - name: --name -n
    short-summary: The deployment name.
  - name: --mode
    short-summary: The deployment mode.
examples:
  - name: Validate whether a template is valid at resource group. (autogenerated)
    text: az deployment group validate --parameters MyValue=This MyArray=@array.json --resource-group testrg --template-file azuredeploy.json
    crafted: true
"""

aladdin_helps['deployment group wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a deployment condition is met.
examples:
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: az deployment group wait --created --name MyDeployment --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['deployment operation group list'] = """
type: command
short-summary: List deployment operations at resource group.
examples:
  - name: List deployment operations at resource group (autogenerated)
    text: az deployment operation group list --name MyDeployment --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['deployment operation list'] = """
type: command
short-summary: List deployment operations at subscription scope.
examples:
  - name: List deployment operations at subscription scope. (autogenerated)
    text: az deployment operation list --name MyDeployment
    crafted: true
"""

aladdin_helps['deployment sub validate'] = """
type: command
short-summary: Validate whether a template is valid at subscription scope.
parameters:
  - name: --parameters -p
    short-summary: Supply deployment parameter values.
    long-summary: >
        Parameters may be supplied from a file using the `@{path}` syntax, a JSON string, or as <KEY=VALUE> pairs. Parameters are evaluated in order, so when a value is assigned twice, the latter value will be used.
        It is recommended that you supply your parameters file first, and then override selectively using KEY=VALUE syntax.
  - name: --template-file -f
    short-summary: The path to the template file.
  - name: --template-uri -u
    short-summary: The URI to the template file.
  - name: --location -l
    short-summary: The location to store the deployment metadata.
  - name: --name -n
    short-summary: The deployment name.
examples:
  - name: Validate whether a template is valid at subscription scope. (autogenerated)
    text: az deployment sub validate --location westus2 --parameters MyValue=This MyArray=@array.json --template-file azuredeploy.json
    crafted: true
"""

aladdin_helps['deployment sub wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a deployment condition is met.
examples:
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: az deployment sub wait --created --name MyDeployment --updated
    crafted: true
"""

aladdin_helps['deployment tenant wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a deployment condition is met.
examples:
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: |
        az deployment tenant wait --deleted --name MyDeployment
    crafted: true
"""

aladdin_helps['deployment wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a deployment condition is met.
examples:
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: |
        az deployment wait --deleted --name MyDeployment --subscription MySubscription
    crafted: true
"""

aladdin_helps['group deployment export'] = """
type: command
short-summary: Export the template used for a deployment.
examples:
  - name: Export the template used for a deployment. (autogenerated)
    text: |
        az group deployment export --name MyDeployment --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['group deployment validate'] = """
type: command
short-summary: Validate whether a template is syntactically correct.
parameters:
  - name: --parameters -p
    short-summary: Supply deployment parameter values.
    long-summary: >
        Parameters may be supplied from a file using the `@{path}` syntax, a JSON string, or as <KEY=VALUE> pairs. Parameters are evaluated in order, so when a value is assigned twice, the latter value will be used.
        It is recommended that you supply your parameters file first, and then override selectively using KEY=VALUE syntax.
examples:
  - name: Validate whether a template is syntactically correct. (autogenerated)
    text: |
        az group deployment validate --parameters "{ \\"location\\": { \\"value\\": \\"westus\\" } }" \\
            --resource-group MyResourceGroup --template-file storage.json
    crafted: true
"""

aladdin_helps['group deployment wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a deployment condition is met.
examples:
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: |
        az group deployment wait --name MyDeployment --resource-group MyResourceGroup --updated
    crafted: true
  - name: Place the CLI in a waiting state until a deployment condition is met. (autogenerated)
    text: |
        az group deployment wait --created --name MyDeployment --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['group update'] = """
type: command
short-summary: Update a resource group.
examples:
  - name: Update a resource group. (autogenerated)
    text: |
        az group update --resource-group MyResourceGroup --set tags.CostCenter='{"Dept":"IT","Environment":"Test"}'
    crafted: true
"""

aladdin_helps['group wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of the resource group is met.
examples:
  - name: Place the CLI in a waiting state until a condition of the resource group is met. (autogenerated)
    text: |
        az group wait --created  --resource-group MyResourceGroup
    crafted: true
  - name: Place the CLI in a waiting state until a condition of the resource group is met. (autogenerated)
    text: |
        az group wait --deleted --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['lock show'] = """
type: command
short-summary: Show the properties of a lock
examples:
  - name: Show the properties of a lock (autogenerated)
    text: |
        az lock show --name lockname --resource-group MyResourceGroup --resource-name MyResource --resource-type Microsoft.Network/virtualNetworks
    crafted: true
"""

aladdin_helps['managedapp definition delete'] = """
type: command
short-summary: Delete a managed application definition.
examples:
  - name: Delete a managed application definition. (autogenerated)
    text: |
        az managedapp definition delete --name MyManagedApplicationDefinition --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['managedapp definition list'] = """
type: command
short-summary: List managed application definitions.
examples:
  - name: List managed application definitions. (autogenerated)
    text: |
        az managedapp definition list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['managedapp delete'] = """
type: command
short-summary: Delete a managed application.
examples:
  - name: Delete a managed application. (autogenerated)
    text: |
        az managedapp delete --name MyManagedApplication --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['managedapp list'] = """
type: command
short-summary: List managed applications.
examples:
  - name: List managed applications. (autogenerated)
    text: |
        az managedapp list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['policy assignment delete'] = """
type: command
short-summary: Delete a resource policy assignment.
examples:
  - name: Delete a resource policy assignment. (autogenerated)
    text: |
        az policy assignment delete --name MyPolicyAssignment
    crafted: true
"""

aladdin_helps['policy assignment identity show'] = """
type: command
short-summary: Show a policy assignment's managed identity.
examples:
  - name: Show a policy assignment's managed identity. (autogenerated)
    text: |
        az policy assignment identity show --name MyPolicyAssignment --scope '/providers/Microsoft.Management/managementGroups/MyManagementGroup'
    crafted: true
"""

aladdin_helps['policy assignment show'] = """
type: command
short-summary: Show a resource policy assignment.
examples:
  - name: Show a resource policy assignment. (autogenerated)
    text: |
        az policy assignment show --name MyPolicyAssignment
    crafted: true
"""

aladdin_helps['policy definition delete'] = """
type: command
short-summary: Delete a policy definition.
examples:
  - name: Delete a policy definition. (autogenerated)
    text: |
        az policy definition delete --name MyPolicyDefinition
    crafted: true
"""

aladdin_helps['policy definition show'] = """
type: command
short-summary: Show a policy definition.
examples:
  - name: Show a policy definition. (autogenerated)
    text: |
        az policy definition show --name MyPolicyDefinition
    crafted: true
"""

aladdin_helps['policy definition update'] = """
type: command
short-summary: Update a policy definition.
examples:
  - name: Update a policy definition. (autogenerated)
    text: |
        az policy definition update --name MyPolicyDefinition
    crafted: true
"""

aladdin_helps['policy set-definition delete'] = """
type: command
short-summary: Delete a policy set definition.
examples:
  - name: Delete a policy set definition. (autogenerated)
    text: |
        az policy set-definition delete --management-group myMg --name MyPolicySetDefinition
    crafted: true
"""

aladdin_helps['policy set-definition show'] = """
type: command
short-summary: Show a policy set definition.
examples:
  - name: Show a policy set definition. (autogenerated)
    text: |
        az policy set-definition show --name MyPolicySetDefinition
    crafted: true
"""

aladdin_helps['provider operation show'] = """
type: command
short-summary: Get an individual provider's operations.
examples:
  - name: Get an individual provider's operations. (autogenerated)
    text: |
        az provider operation show --namespace Microsoft.Storage
    crafted: true
"""

aladdin_helps['provider register'] = """
type: command
short-summary: Register a provider.
examples:
  - name: Register a provider. (autogenerated)
    text: |
        az provider register --namespace 'Microsoft.PolicyInsights'
    crafted: true
"""

aladdin_helps['provider unregister'] = """
type: command
short-summary: Unregister a provider.
examples:
  - name: Unregister a provider. (autogenerated)
    text: |
        az provider unregister --namespace Microsoft.Automation
    crafted: true
"""

aladdin_helps['resource invoke-action'] = """
type: command
short-summary: Invoke an action on the resource.
long-summary: >
    A list of possible actions corresponding to a resource can be found at https://docs.microsoft.com/rest/api/. All POST requests are actions that can be invoked and are specified at the end of the URI path. For instance, to stop a VM, the
    request URI is https://management.azure.com/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.Compute/virtualMachines/{VM}/powerOff?api-version={APIVersion} and the corresponding action is `powerOff`. This can
    be found at https://docs.microsoft.com/rest/api/compute/virtualmachines/virtualmachines-stop.
examples:
  - name: Invoke an action on the resource. (autogenerated)
    text: |
        az resource invoke-action --action capture --name MyResource --resource-group MyResourceGroup --resource-type Microsoft.web/sites
    crafted: true
"""

aladdin_helps['resource lock delete'] = """
type: command
short-summary: Delete a resource-level lock.
examples:
  - name: Delete a resource-level lock. (autogenerated)
    text: |
        az resource lock delete --ids /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Web/sites/{WebApp}
    crafted: true
"""

aladdin_helps['resource lock update'] = """
type: command
short-summary: Update a resource-level lock.
examples:
  - name: Update a resource-level lock. (autogenerated)
    text: az resource lock update --lock-type CanNotDelete --name lockName --namespace Microsoft.Network --resource-group MyResourceGroup --resource-name myvnet --resource-type Microsoft.Network/virtualNetworks
    crafted: true
"""

aladdin_helps['resource update'] = """
type: command
short-summary: Update a resource.
examples:
  - name: Update a resource. (autogenerated)
    text: |
        az resource update --ids $id --set properties.connectionType=Proxy
    crafted: true
"""

aladdin_helps['resource wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of a resources is met.
examples:
  - name: Place the CLI in a waiting state until a condition of a resources is met. (autogenerated)
    text: |
        az resource wait --exists --ids /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Web/sites/{WebApp}
    crafted: true
  - name: Place the CLI in a waiting state until a condition of a resources is met. (autogenerated)
    text: |
        az resource wait --exists --ids /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Web/sites/{WebApp} --include-response-body true
    crafted: true
  - name: Place the CLI in a waiting state until a condition of a resources is met. (autogenerated)
    text: |
        az resource wait --exists --name MyResource --resource-group MyResourceGroup --resource-type subnets
    crafted: true
"""

aladdin_helps['ad app credential delete'] = """
type: command
short-summary: delete an application's password or certificate credentials
examples:
  - name: delete an application's password or certificate credentials (autogenerated)
    text: az ad app credential delete --id 00000000-0000-0000-0000-000000000000 --key-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad app credential list'] = """
type: command
short-summary: list an application's password or certificate credentials
examples:
  - name: list an application's password or certificate credentials (autogenerated)
    text: az ad app credential list --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad app credential reset'] = """
type: command
short-summary: append or overwrite an application's password or certificate credentials
examples:
  - name: append or overwrite an application's password or certificate credentials (autogenerated)
    text: az ad app credential reset --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad app delete'] = """
type: command
short-summary: Delete an application.
examples:
  - name: Delete an application. (autogenerated)
    text: az ad app delete --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad app owner add'] = """
type: command
short-summary: add an application owner.
examples:
  - name: add an application owner. (autogenerated)
    text: az ad app owner add --id 00000000-0000-0000-0000-000000000000 --owner-object-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad app owner list'] = """
type: command
short-summary: List application owners.
examples:
  - name: List application owners. (autogenerated)
    text: az ad app owner list --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad app owner remove'] = """
type: command
short-summary: remove an application owner.
examples:
  - name: remove an application owner. (autogenerated)
    text: az ad app owner remove --id 00000000-0000-0000-0000-000000000000 --owner-object-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad app permission admin-consent'] = """
type: command
short-summary: grant Application & Delegated permissions through admin-consent.
long-summary: you must login as a directory administrator
examples:
  - name: grant Application & Delegated permissions through admin-consent. (autogenerated)
    text: az ad app permission admin-consent --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad app show'] = """
type: command
short-summary: Get the details of an application.
examples:
  - name: Get the details of an application. (autogenerated)
    text: az ad app show --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad group create'] = """
type: command
short-summary: Create a group in the directory.
examples:
  - name: Create a group in the directory. (autogenerated)
    text: az ad group create --display-name MyDisplay --mail-nickname MyDisplay
    crafted: true
"""

aladdin_helps['ad group member check'] = """
type: command
short-summary: Check if a member is in a group.
examples:
  - name: Check if a member is in a group. (autogenerated)
    text: az ad group member check --group MyGroupDisplayName --member-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad group owner add'] = """
type: command
short-summary: add a group owner.
examples:
  - name: add a group owner. (autogenerated)
    text: az ad group owner add --group MyGroupDisplayName --owner-object-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad group owner list'] = """
type: command
short-summary: List group owners.
examples:
  - name: List group owners. (autogenerated)
    text: az ad group owner list --group MyGroupDisplayName
    crafted: true
"""

aladdin_helps['ad group owner remove'] = """
type: command
short-summary: remove a group owner.
examples:
  - name: remove a group owner. (autogenerated)
    text: az ad group owner remove --group MyGroupDisplayName --owner-object-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad sp create'] = """
type: command
short-summary: Create a service principal.
examples:
  - name: Create a service principal. (autogenerated)
    text: az ad sp create --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad sp credential delete'] = """
type: command
short-summary: delete a service principal's credential.
examples:
  - name: delete a service principal's credential. (autogenerated)
    text: az ad sp credential delete --id 00000000-0000-0000-0000-000000000000 --key-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    crafted: true
"""

aladdin_helps['ad sp credential list'] = """
type: command
short-summary: list a service principal's credentials.
examples:
  - name: list a service principal's credentials. (autogenerated)
    text: az ad sp credential list --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad sp credential reset'] = """
type: command
short-summary: Reset a service principal credential.
long-summary: Use upon expiration of the service principal's credentials, or in the event that login credentials are lost.
parameters:
  - name: --name -n
    short-summary: Name or app ID of the service principal.
  - name: --password -p
    short-summary: The password used to log in.
    long-summary: If not present and `--cert` is not specified, a random password will be generated.
  - name: --cert
    short-summary: Certificate to use for credentials.
    long-summary: When using `--keyvault,` indicates the name of the cert to use or create. Otherwise, supply a PEM or DER formatted public certificate string. Use `@{path}` to load from a file. Do not include private key info.
  - name: --create-cert
    short-summary: Create a self-signed certificate to use for the credential.
    long-summary: Use with `--keyvault` to create the certificate in Key Vault. Otherwise, a certificate will be created locally.
  - name: --keyvault
    short-summary: Name or ID of a KeyVault to use for creating or retrieving certificates.
  - name: --years
    short-summary: 'Number of years for which the credentials will be valid. Default: 1 year'
examples:
  - name: Reset a service principal credential. (autogenerated)
    text: az ad sp credential reset --name MyAppURIForCredential
    crafted: true
"""

aladdin_helps['ad sp delete'] = """
type: command
short-summary: Delete a service principal and its role assignments.
examples:
  - name: Delete a service principal and its role assignments. (autogenerated)
    text: az ad sp delete --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad sp owner list'] = """
type: command
short-summary: List service principal owners.
examples:
  - name: List service principal owners. (autogenerated)
    text: az ad sp owner list --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad sp show'] = """
type: command
short-summary: Get the details of a service principal.
examples:
  - name: Get the details of a service principal. (autogenerated)
    text: az ad sp show --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad sp update'] = """
type: command
short-summary: update a service principal
examples:
  - name: update a service principal (autogenerated)
    text: az ad sp update --id 00000000-0000-0000-0000-000000000000 --set groupMembershipClaims=All
    crafted: true
"""

aladdin_helps['ad user get-member-groups'] = """
type: command
short-summary: Get groups of which the user is a member
examples:
  - name: Get groups of which the user is a member. (autogenerated)
    text: az ad user get-member-groups --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['ad user update'] = """
type: command
short-summary: Update Azure Active Directory users.
examples:
  - name: Update Azure Active Directory users. (autogenerated)
    text: az ad user update --id 00000000-0000-0000-0000-000000000000
    crafted: true
"""

aladdin_helps['role assignment create'] = """
type: command
short-summary: Create a new role assignment for a user, group, or service principal.
examples:
  - name: Create a new role assignment for a user, group, or service principal. (autogenerated)
    text: |
        az role assignment create --assignee 00000000-0000-0000-0000-000000000000 --role "Storage Account Key Operator Service Role" --scope $id
    crafted: true
"""

aladdin_helps['role assignment delete'] = """
type: command
short-summary: Delete role assignments.
examples:
  - name: Delete role assignments. (autogenerated)
    text: |
        az role assignment delete --assignee 00000000-0000-0000-0000-000000000000 --role "Storage Account Key Operator Service Role"
    crafted: true
"""

aladdin_helps['role definition delete'] = """
type: command
short-summary: Delete a role definition.
examples:
  - name: Delete a role definition. (autogenerated)
    text: az role definition delete --name MyRole
    crafted: true
"""



aladdin_helps['security auto-provisioning-setting update'] = """
type: command
short-summary: Updates your automatic provisioning settings on the subscription.
examples:
  - name: Updates your automatic provisioning settings on the subscription. (autogenerated)
    text: |
        az security auto-provisioning-setting update --auto-provision "Off" --name "default" --subscription MySubscription
    crafted: true
"""

aladdin_helps['security pricing create'] = """
type: command
short-summary: Updates the Azure Security Center Pricing tier for the subscription.
examples:
  - name: Updates the Azure Security Center Pricing tier for the subscription. (autogenerated)
    text: az security pricing create --name default --subscription MySubscription --tier 'standard'
    crafted: true
"""

aladdin_helps['security workspace-setting create'] = """
type: command
short-summary: Creates a workspace settings in your subscription - these settings let you control which workspace will hold your security data
examples:
  - name: Creates a workspace settings in your subscription - these settings let you control which workspace will hold your security data. (autogenerated)
    text: az security workspace-setting create --name default --subscription MySubscription --target-workspace '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace'
    crafted: true
"""

aladdin_helps['servicebus georecovery-alias set'] = """
type: command
short-summary: Sets Service Bus Geo-Disaster Recovery Configuration Alias for the give Namespace
examples:
  - name: Sets Service Bus Geo-Disaster Recovery Configuration Alias for the give Namespace (autogenerated)
    text: az servicebus georecovery-alias set --alias myaliasname --namespace-name primarynamespace --partner-namespace armresourceid --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['servicebus georecovery-alias show'] = """
type: command
short-summary: shows properties of Service Bus Geo-Disaster Recovery Configuration Alias for Primay/Secondary Namespace
examples:
  - name: shows properties of Service Bus Geo-Disaster Recovery Configuration Alias for Primay/Secondary Namespace (autogenerated)
    text: az servicebus georecovery-alias show --alias myaliasname --namespace-name primarynamespace --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['servicebus namespace authorization-rule keys renew'] = """
type: command
short-summary: Regenerate keys of Authorization Rule for the Service Bus Namespace.
examples:
  - name: Regenerate keys of Authorization Rule for the Service Bus Namespace (autogenerated)
    text: az servicebus namespace authorization-rule keys renew --key PrimaryKey --name myauthorule --namespace-name mynamespace --resource-group myresourcegroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['servicebus namespace update'] = """
type: command
short-summary: Updates a Service Bus Namespace
examples:
  - name: Updates a Service Bus Namespace (autogenerated)
    text: az servicebus namespace update --name mynamespace --resource-group myresourcegroup --sku Basic
    crafted: true
"""

aladdin_helps['servicebus topic subscription update'] = """
type: command
short-summary: Updates the ServiceBus Subscription
examples:
  - name: Updates the ServiceBus Subscription (autogenerated)
    text: az servicebus topic subscription update --name mysubscription --namespace-name mynamespace --resource-group myresourcegroup --status Active --subscription MySubscription --topic-name mytopic
    crafted: true
"""

aladdin_helps['servicebus topic update'] = """
type: command
short-summary: Updates the Service Bus Topic
examples:
  - name: Updates the Service Bus Topic (autogenerated)
    text: az servicebus topic update --auto-delete-on-idle PT3M --name mytopic --namespace-name mynamespace --resource-group myresourcegroup
    crafted: true
  - name: Updates the Service Bus Topic (autogenerated)
    text: az servicebus topic update --enable-batched-operations true --name mytopic --namespace-name mynamespace --resource-group myresourcegroup
    crafted: true
"""

aladdin_helps['sf application update'] = """
type: command
short-summary: Update a Azure Service Fabric application. This allows updating the application parameters and/or upgrade the application type version which will trigger an application upgrade.
examples:
  - name: Update a Azure Service Fabric application (autogenerated)
    text: az sf application update --application-name testApp --application-parameters key0=value0 --cluster-name testCluster --force-restart true --resource-group testRG --subscription MySubscription
    crafted: true
"""

aladdin_helps['sf cluster certificate add'] = """
type: command
short-summary: Add a secondary cluster certificate to the cluster.
examples:
  - name: Add a secondary cluster certificate to the cluster. (autogenerated)
    text: az sf cluster certificate add --cluster-name cluster1 --resource-group group-name --secret-identifier 'https://{KeyVault}.vault.azure.net/secrets/{Secret}' --vault-name MyVault
    crafted: true
"""

aladdin_helps['signalr cors list'] = """
type: command
short-summary: List allowed origins of a SignalR Service
examples:
  - name: List allowed origins of a SignalR Service. (autogenerated)
    text: az signalr cors list --name MySignalrService --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['sql db classification update'] = """
type: command
short-summary: Update a columns's sensitivity classification.
examples:
  - name: Update a columns's sensitivity classification. (autogenerated)
    text: |
        az sql db classification update --column mycolumn --information-type Name --label "Confidential - GDPR" --name mydb --resource-group mygroup --schema dbo --server myserver --subscription MySubscription --table mytable
    crafted: true
"""

aladdin_helps['sql db delete'] = """
type: command
short-summary: Delete a database.
examples:
  - name: Delete a database. (autogenerated)
    text: az sql db delete --name MyAzureSQLDatabase --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql db list'] = """
type: command
short-summary: List databases a server or elastic pool.
examples:
  - name: List databases a server or elastic pool. (autogenerated)
    text: az sql db list --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql db rename'] = """
type: command
short-summary: Rename a database.
examples:
  - name: Rename a database. (autogenerated)
    text: az sql db rename --name MyAzureSQLDatabase --new-name MyNew --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql db replica list-links'] = """
type: command
short-summary: List the replicas of a database and their replication status.
examples:
  - name: List the replicas of a database and their replication status. (autogenerated)
    text: az sql db replica list-links --name MyAzureSQLDatabase --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql db replica set-primary'] = """
type: command
short-summary: Set the primary replica database by failing over from the current primary replica database.
examples:
  - name: Set the primary replica database by failing over from the current primary replica database. (autogenerated)
    text: az sql db replica set-primary --allow-data-loss --name MyDatabase --resource-group MyResourceGroup --server myserver --subscription MySubscription
    crafted: true
"""

aladdin_helps['sql db restore'] = """
type: command
short-summary: Create a new database by restoring from a backup.
examples:
  - name: Create a new database by restoring from a backup. (autogenerated)
    text: |
        az sql db restore --dest-name MyDest --edition GeneralPurpose --name MyAzureSQLDatabase --resource-group MyResourceGroup --server myserver --subscription MySubscription --time "2018-05-20T05:34:22"
    crafted: true
"""

aladdin_helps['sql db show'] = """
type: command
short-summary: Get the details for a database.
examples:
  - name: Get the details for a database. (autogenerated)
    text: az sql db show --name MyAzureSQLDatabase --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql db tde set'] = """
type: command
short-summary: Sets a database's transparent data encryption configuration.
examples:
  - name: Sets a database's transparent data encryption configuration. (autogenerated)
    text: az sql db tde set --database mydb --resource-group MyResourceGroup --server myserver --status Enabled
    crafted: true
"""

aladdin_helps['sql dw create'] = """
type: command
short-summary: Create a data warehouse.
examples:
  - name: Create a data warehouse. (autogenerated)
    text: az sql dw create --name MyDataWarehouse --resource-group MyResourceGroup --server myserver --service-objective S0
    crafted: true
"""

aladdin_helps['sql dw delete'] = """
type: command
short-summary: Delete a data warehouse.
examples:
  - name: Delete a data warehouse. (autogenerated)
    text: az sql dw delete --name MyDataWarehouse --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql dw list'] = """
type: command
short-summary: List data warehouses for a server.
examples:
  - name: List data warehouses for a server. (autogenerated)
    text: az sql dw list --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql dw show'] = """
type: command
short-summary: Get the details for a data warehouse.
examples:
  - name: Get the details for a data warehouse. (autogenerated)
    text: az sql dw show --name MyDataWarehouse --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql dw update'] = """
type: command
short-summary: Update a data warehouse.
examples:
  - name: Update a data warehouse. (autogenerated)
    text: az sql dw update --name MyDataWarehouse --resource-group MyResourceGroup --server myserver --service-objective S1
    crafted: true
"""

aladdin_helps['sql elastic-pool update'] = """
type: command
short-summary: Update an elastic pool.
examples:
  - name: Update an elastic pool. (autogenerated)
    text: az sql elastic-pool update --capacity 100 --max-size 500GB --name mypool --resource-group mygroup --server myserver
    crafted: true
"""

aladdin_helps['sql failover-group create'] = """
type: command
short-summary: Creates a failover group.
examples:
  - name: Creates a failover group. (autogenerated)
    text: az sql failover-group create --name MyFailoverGroup --partner-server newDb --resource-group MyResourceGroup --server myserver --subscription MySubscription
    crafted: true
"""

aladdin_helps['sql failover-group set-primary'] = """
type: command
short-summary: Set the primary of the failover group by failing over all databases from the current primary server.
examples:
  - name: Set the primary of the failover group by failing over all databases from the current primary server. (autogenerated)
    text: az sql failover-group set-primary --name MyFailoverGroup --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql mi ad-admin delete'] = """
type: command
short-summary: Deletes an existing managed instance Active Directory Administrator.
examples:
  - name: Deletes an existing managed instance Active Directory Administrator. (autogenerated)
    text: az sql mi ad-admin delete --managed-instance myinstance --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['sql mi ad-admin list'] = """
type: command
short-summary: Returns a list of managed instance Active Directory Administrators.
examples:
  - name: Returns a list of managed instance Active Directory Administrators. (autogenerated)
    text: az sql mi ad-admin list --managed-instance myinstance --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['sql mi create'] = """
type: command
short-summary: Create a managed instance.
examples:
  - name: Create a managed instance. (autogenerated)
    text: az sql mi create --admin-password mypassword --admin-user myusername --assign-identity --capacity 8 --edition GeneralPurpose --family Gen4 --license-type LicenseIncluded --location mylocation --name myinstance --public-data-endpoint-enabled true --resource-group mygroup --storage 32GB --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/{VNETName}/subnets/{SubnetName}
    crafted: true
"""

aladdin_helps['sql mi update'] = """
type: command
short-summary: Update a managed instance.
examples:
  - name: Update a managed instance. (autogenerated)
    text: az sql mi update --name myinstance --proxy-override Default --resource-group mygroup --subscription MySubscription
    crafted: true
  - name: Update a managed instance. (autogenerated)
    text: az sql mi update --name myinstance --public-data-endpoint-enabled true --resource-group mygroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['sql server conn-policy show'] = """
type: command
short-summary: Gets a server's secure connection policy.
examples:
  - name: Gets a server's secure connection policy. (autogenerated)
    text: az sql server conn-policy show --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql server conn-policy update'] = """
type: command
short-summary: Updates a server's secure connection policy.
examples:
  - name: Updates a server's secure connection policy. (autogenerated)
    text: az sql server conn-policy update --connection-type Default --resource-group MyResourceGroup --server myserver
    crafted: true
"""

aladdin_helps['sql server update'] = """
type: command
short-summary: Update a server.
examples:
  - name: Update a server. (autogenerated)
    text: az sql server update --admin-password myadminpassword --name MyAzureSQLServer --resource-group MyResourceGroup
    crafted: true
  - name: Update a server. (autogenerated)
    text: az sql server update --assign_identity --name MyAzureSQLServer --resource-group MyResourceGroup
    crafted: true
"""



aladdin_helps['storage account generate-sas'] = """
type: command
parameters:
  - name: --services
    short-summary: 'The storage services the SAS is applicable for. Allowed values: (b)lob (f)ile (q)ueue (t)able. Can be combined.'
  - name: --resource-types
    short-summary: 'The resource types the SAS is applicable for. Allowed values: (s)ervice (c)ontainer (o)bject. Can be combined.'
  - name: --expiry
    short-summary: Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes invalid.
  - name: --start
    short-summary: Specifies the UTC datetime (Y-m-d'T'H:M'Z') at which the SAS becomes valid. Defaults to the time of the request.
  - name: --account-name
    short-summary: 'Storage account name. Must be used in conjunction with either storage account key or a SAS token. Environment Variable: AZURE_STORAGE_ACCOUNT'
examples:
  - name: Generate a shared access signature for the account (autogenerated)
    text: |
        az storage account generate-sas --account-key 00000000 --account-name MyStorageAccount --expiry 2020-01-01 --https-only --permissions acuw --resource-types co --services bfqt
    crafted: true
"""

aladdin_helps['storage account network-rule list'] = """
type: command
short-summary: List network rules.
examples:
  - name: List network rules. (autogenerated)
    text: |
        az storage account network-rule list --account-name MyAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['storage account network-rule remove'] = """
type: command
short-summary: Remove a network rule.
examples:
  - name: Remove a network rule. (autogenerated)
    text: |
        az storage account network-rule remove --account-name MyAccount --resource-group MyResourceGroup --subnet MySubnetID
    crafted: true
  - name: Remove a network rule. (autogenerated)
    text: |
        az storage account network-rule remove --account-name MyAccount --ip-address 23.45.1.0/24 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['storage account show-connection-string'] = """
type: command
short-summary: Get the connection string for a storage account.
examples:
  - name: Get the connection string for a storage account. (autogenerated)
    text: |
        az storage account show-connection-string --name MyStorageAccount --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['storage account show-usage'] = """
type: command
short-summary: Show the current count and limit of the storage accounts under the subscription.
examples:
  - name: Show the current count and limit of the storage accounts under the subscription. (autogenerated)
    text: |
        az storage account show-usage --location westus2
    crafted: true
"""

aladdin_helps['storage account update'] = """
type: command
short-summary: Update the properties of a storage account.
examples:
  - name: Update the properties of a storage account. (autogenerated)
    text: |
        az storage account update --default-action Allow --name MyStorageAccount --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['storage blob copy start'] = """
type: command
short-summary: Copies a blob asynchronously. Use `az storage blob show` to check the status of the blobs.
examples:
  - name: Copies a blob asynchronously. Use `az storage blob show` to check the status of the blobs. (autogenerated)
    text: |
        az storage blob copy start --account-key 00000000 --account-name MyAccount --destination-blob MyDestinationBlob --destination-container MyDestinationContainer --source-uri https://storage.blob.core.windows.net/photos
    crafted: true
  - name: Copies a blob asynchronously. Use `az storage blob show` to check the status of the blobs (autogenerated)
    text: |
        az storage blob copy start --account-name MyAccount --destination-blob MyDestinationBlob --destination-container MyDestinationContainer --sas-token $sas --source-uri https://storage.blob.core.windows.net/photos
    crafted: true
"""

aladdin_helps['storage blob copy start-batch'] = """
type: command
short-summary: Copy multiple blobs to a blob container. Use `az storage blob show` to check the status of the blobs.
parameters:
  - name: --destination-container -c
    type: string
    short-summary: The blob container where the selected source files or blobs will be copied to.
  - name: --pattern
    type: string
    short-summary: The pattern used for globbing files or blobs in the source. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html.
    long-summary: When you use '*' in --pattern, it will match any character including the the directory separator '/'.
  - name: --dryrun
    type: bool
    short-summary: List the files or blobs to be uploaded. No actual data transfer will occur.
  - name: --source-account-name
    type: string
    short-summary: The source storage account from which the files or blobs are copied to the destination. If omitted, the source account is used.
  - name: --source-account-key
    type: string
    short-summary: The account key for the source storage account.
  - name: --source-container
    type: string
    short-summary: The source container from which blobs are copied.
  - name: --source-share
    type: string
    short-summary: The source share from which files are copied.
  - name: --source-uri
    type: string
    short-summary: A URI specifying a file share or blob container from which the files or blobs are copied.
    long-summary: If the source is in another account, the source must either be public or be authenticated by using a shared access signature.
  - name: --source-sas
    type: string
    short-summary: The shared access signature for the source storage account.
examples:
  - name: Copy multiple blobs to a blob container. Use `az storage blob show` to check the status of the blobs. (autogenerated)
    text: |
        az storage blob copy start-batch --account-key 00000000 --account-name MyAccount --destination-container MyDestinationContainer --source-account-key MySourceKey --source-account-name MySourceAccount --source-container MySourceContainer
    crafted: true
"""

aladdin_helps['storage blob exists'] = """
type: command
short-summary: Check for the existence of a blob in a container.
parameters:
  - name: --name -n
    short-summary: The blob name.
examples:
  - name: Check for the existence of a blob in a container. (autogenerated)
    text: |
        az storage blob exists --account-key 00000000 --account-name MyAccount --container-name MyContainer --name MyBlob
    crafted: true
"""

aladdin_helps['storage blob generate-sas'] = """
type: command
short-summary: Generate a shared access signature for the blob.
examples:
  - name: Generate a shared access signature for the blob. (autogenerated)
    text: |
        az storage blob generate-sas --account-key 00000000 --account-name MyStorageAccount --container-name MyContainer --expiry 2018-01-01T00:00:00Z --name MyBlob --permissions r
    crafted: true
"""

aladdin_helps['storage blob incremental-copy start'] = """
type: command
short-summary: Copies an incremental copy of a blob asynchronously.
long-summary: This operation returns a copy operation properties object, including a copy ID you can use to check or abort the copy operation. The Blob service copies blobs on a best-effort basis. The source blob for an incremental copy operation must be a page blob. Call get_blob_properties on the destination blob to check the status of the copy operation. The final blob will be committed when the copy completes.
examples:
  - name: Copies an incremental copy of a blob asynchronously. (autogenerated)
    text: |
        az storage blob incremental-copy start --account-key 00000000 --account-name MyAccount --destination-blob MyDestinationBlob --destination-container MyDestinationContainer --source-account-key MySourceKey --source-account-name MySourceAccount --source-blob MyBlob --source-container MySourceContainer --source-snapshot MySnapshot
    crafted: true
"""

aladdin_helps['storage blob service-properties delete-policy show'] = """
type: command
short-summary: Show the storage blob delete-policy.
examples:
  - name: Show the storage blob delete-policy. (autogenerated)
    text: |
        az storage blob service-properties delete-policy show --account-name mystorageccount --account-key 00000000
    crafted: true
"""

aladdin_helps['storage blob service-properties delete-policy update'] = """
type: command
short-summary: Update the storage blob delete-policy.
examples:
  - name: Update the storage blob delete-policy. (autogenerated)
    text: |
        az storage blob service-properties delete-policy update --account-name mystorageccount --account-key 00000000 --days-retained 7 --enable true
    crafted: true
"""

aladdin_helps['storage blob service-properties update'] = """
type: command
short-summary: Update storage blob service properties.
examples:
  - name: Update storage blob service properties. (autogenerated)
    text: |
        az storage blob service-properties update --404-document error.html --account-name mystorageccount --account-key 00000000 --index-document index.html --static-website true
    crafted: true
"""

aladdin_helps['storage blob set-tier'] = """
type: command
short-summary: Set the block or page tiers on the blob.
parameters:
  - name: --type -t
    short-summary: The blob type
  - name: --tier
    short-summary: The tier value to set the blob to.
  - name: --timeout
    short-summary: The timeout parameter is expressed in seconds. This method may make multiple calls to the Azure service and the timeout will apply to each call individually.
long-summary: >
    For block blob this command only supports block blob on standard storage accounts.
    For page blob, this command only supports for page blobs on premium accounts.
examples:
  - name: Set the block or page tiers on the blob. (autogenerated)
    text: |
        az storage blob set-tier --account-key 00000000 --account-name MyAccount --container-name MyContainer --name MyBlob --tier P10
    crafted: true
"""

aladdin_helps['storage blob show'] = """
type: command
short-summary: Get the details of a blob.
examples:
  - name: Get the details of a blob (autogenerated)
    text: |
        az storage blob show --account-name mystorageccount --account-key 00000000 --container-name MyContainer --name MyBlob
    crafted: true
"""

aladdin_helps['storage blob upload'] = """
type: command
short-summary: Upload a file to a storage blob.
long-summary: Creates a new blob from a file path, or updates the content of an existing blob with automatic chunking and progress notifications.
parameters:
  - name: --type -t
    short-summary: Defaults to 'page' for *.vhd files, or 'block' otherwise.
  - name: --maxsize-condition
    short-summary: The max length in bytes permitted for an append blob.
  - name: --validate-content
    short-summary: Specifies that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived.
  - name: --tier
    short-summary: A page blob tier value to set the blob to. The tier correlates to the size of the blob and number of allowed IOPS. This is only applicable to page blobs on premium storage accounts.
examples:
  - name: Upload a file to a storage blob. (autogenerated)
    text: az storage blob upload --account-name MyAccount --container-name MyContainer --file /path/to/file --name MyBlob
    crafted: true
"""

aladdin_helps['storage blob url'] = """
type: command
short-summary: Create the url to access a blob.
examples:
  - name: Create the url to access a blob (autogenerated)
    text: |
        az storage blob url --connection-string $connectionString --container-name container1 --name blob1
    crafted: true
  - name: Create the url to access a blob (autogenerated)
    text: |
        az storage blob url --account-name storageacct --account-key 00000000 --container-name container1 --name blob1
    crafted: true
"""

aladdin_helps['storage container delete'] = """
type: command
short-summary: Marks the specified container for deletion.
long-summary: >
    The container and any blobs contained within it are later deleted during garbage collection.
examples:
  - name: Marks the specified container for deletion. (autogenerated)
    text: |
        az storage container delete --account-key 00000000 --account-name MyAccount --name MyContainer
    crafted: true
"""

aladdin_helps['storage container exists'] = """
type: command
short-summary: Check for the existence of a storage container.
examples:
  - name: Check for the existence of a storage container. (autogenerated)
    text: |
        az storage container exists --account-name mystorageccount --account-key 00000000 --name mycontainer
    crafted: true
"""

aladdin_helps['storage container generate-sas'] = """
type: command
short-summary: Generate a SAS token for a storage container.
examples:
  - name: Generate a shared access signature for the container (autogenerated)
    text: |
        az storage container generate-sas --account-key 00000000 --account-name mystorageaccount --expiry 2020-01-01 --name mycontainer --permissions dlrw
    crafted: true
  - name: Generate a SAS token for a storage container. (autogenerated)
    text: az storage container generate-sas --account-name mystorageaccount --as-user --auth-mode login --expiry 2020-01-01 --name container1 --permissions dlrw
    crafted: true
"""

aladdin_helps['storage container legal-hold show'] = """
type: command
short-summary: Get the legal hold properties of a container.
examples:
  - name: Get the legal hold properties of a container. (autogenerated)
    text: |
        az storage container legal-hold show --account-name mystorageccount --container-name MyContainer
    crafted: true
"""

aladdin_helps['storage cors clear'] = """
type: command
short-summary: Remove all CORS rules from a storage account.
parameters:
  - name: --services
    short-summary: >
        The storage service(s) to remove rules from. Allowed options are: (b)lob, (f)ile,
        (q)ueue, (t)able. Can be combined.
examples:
  - name: Remove all CORS rules from a storage account. (autogenerated)
    text: |
        az storage cors clear --account-name MyAccount --services bfqt
    crafted: true
"""

aladdin_helps['storage cors list'] = """
type: command
short-summary: List all CORS rules for a storage account.
parameters:
  - name: --services
    short-summary: >
        The storage service(s) to list rules for. Allowed options are: (b)lob, (f)ile,
        (q)ueue, (t)able. Can be combined.
examples:
  - name: List all CORS rules for a storage account. (autogenerated)
    text: az storage cors list --account-key 00000000 --account-name MyAccount
    crafted: true
"""

aladdin_helps['storage directory exists'] = """
type: command
short-summary: Check for the existence of a storage directory.
examples:
  - name: Check for the existence of a storage directory. (autogenerated)
    text: |
        az storage directory exists --account-key 00000000 --account-name MyAccount --name MyDirectory --share-name MyShare
    crafted: true
"""

aladdin_helps['storage directory list'] = """
type: command
short-summary: List directories in a share.
examples:
  - name: List directories in a share. (autogenerated)
    text: |
        az storage directory list --account-key 00000000 --account-name MyAccount --share-name MyShare
    crafted: true
"""

aladdin_helps['storage entity insert'] = """
type: command
short-summary: Insert an entity into a table.
parameters:
  - name: --table-name -t
    type: string
    short-summary: The name of the table to insert the entity into.
  - name: --entity -e
    type: list
    short-summary: Space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey.
    long-summary: The PartitionKey and RowKey must be unique within the table, and may be up to 64Kb in size. If using an integer value as a key, convert it to a fixed-width string which can be canonically sorted. For example, convert the integer value 1 to the string value "0000001" to ensure proper sorting.
  - name: --if-exists
    type: string
    short-summary: Behavior when an entity already exists for the specified PartitionKey and RowKey.
  - name: --timeout
    short-summary: The server timeout, expressed in seconds.
examples:
  - name: Insert an entity into a table. (autogenerated)
    text: |
        az storage entity insert --connection-string $connectionString --entity PartitionKey=AAA RowKey=BBB Content=ASDF2 --if-exists fail --table-name MyTable
    crafted: true
"""

aladdin_helps['storage entity query'] = """
type: command
short-summary: List entities which satisfy a query.
parameters:
  - name: --marker
    type: list
    short-summary: Space-separated list of key=value pairs. Must contain a nextpartitionkey and a nextrowkey.
    long-summary: This value can be retrieved from the next_marker field of a previous generator object if max_results was specified and that generator has finished enumerating results. If specified, this generator will begin returning results from the point where the previous generator stopped.
examples:
  - name: List entities which satisfy a query. (autogenerated)
    text: |
        az storage entity query --table-name MyTable
    crafted: true
"""

aladdin_helps['storage file delete-batch'] = """
type: command
short-summary: Delete files from an Azure Storage File Share.
parameters:
  - name: --source -s
    type: string
    short-summary: The source of the file delete operation. The source can be the file share URL or the share name.
  - name: --pattern
    type: string
    short-summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html.
    long-summary: When you use '*' in --pattern, it will match any character including the the directory separator '/'.
  - name: --dryrun
    type: bool
    short-summary: List the files and blobs to be deleted. No actual data deletion will occur.
examples:
  - name: Delete files from an Azure Storage File Share. (autogenerated)
    text: |
        az storage file delete-batch --account-key 00000000 --account-name MyAccount --source /path/to/file
    crafted: true
  - name: Delete files from an Azure Storage File Share. (autogenerated)
    text: |
        az storage file delete-batch --account-key 00000000 --account-name MyAccount --pattern *.py --source /path/to/file
    crafted: true
"""

aladdin_helps['storage file download-batch'] = """
type: command
short-summary: Download files from an Azure Storage File Share to a local directory in a batch operation.
parameters:
  - name: --source -s
    type: string
    short-summary: The source of the file download operation. The source can be the file share URL or the share name.
  - name: --destination -d
    type: string
    short-summary: The local directory where the files are downloaded to. This directory must already exist.
  - name: --pattern
    type: string
    short-summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html.
    long-summary: When you use '*' in --pattern, it will match any character including the the directory separator '/'.
  - name: --dryrun
    type: bool
    short-summary: List the files and blobs to be downloaded. No actual data transfer will occur.
  - name: --max-connections
    type: integer
    short-summary: The maximum number of parallel connections to use. Default value is 1.
  - name: --snapshot
    type: string
    short-summary: A string that represents the snapshot version, if applicable.
  - name: --validate-content
    type: bool
    short-summary: If set, calculates an MD5 hash for each range of the file for validation.
    long-summary: >
        The storage service checks the hash of the content that has arrived is identical to the hash that was sent.
        This is mostly valuable for detecting bitflips during transfer if using HTTP instead of HTTPS. This hash is not stored.
examples:
  - name: Download files from an Azure Storage File Share to a local directory in a batch operation. (autogenerated)
    text: |
        az storage file download-batch --account-key 00000000 --account-name MyAccount --destination . --no-progress --source /path/to/file
    crafted: true
"""

aladdin_helps['storage file exists'] = """
type: command
short-summary: Check for the existence of a file.
examples:
  - name: Check for the existence of a file. (autogenerated)
    text: |
        az storage file exists --account-key 00000000 --account-name MyAccount --path path/file.txt --share-name MyShare
    crafted: true
  - name: Check for the existence of a file. (autogenerated)
    text: |
        az storage file exists --connection-string $connectionString --path path/file.txt --share-name MyShare
    crafted: true
"""

aladdin_helps['storage file generate-sas'] = """
type: command
examples:
  - name: Generate a shared access signature for the file. (autogenerated)
    text: |
        az storage file generate-sas --account-name MyStorageAccount --expiry 2037-12-31T23:59:00Z --path path/file.txt --permissions rcdw --share-name MyShare --start 2019-01-01T12:20Z
    crafted: true
"""

aladdin_helps['storage file list'] = """
type: command
short-summary: List files and directories in a share.
parameters:
  - name: --exclude-dir
    type: bool
    short-summary: List only files in the given share.
examples:
  - name: List files and directories in a share. (autogenerated)
    text: |
        az storage file list --share-name MyShare
    crafted: true
"""

aladdin_helps['storage file upload'] = """
type: command
short-summary: Upload a file to a share that uses the SMB 3.0 protocol.
long-summary: Creates or updates an Azure file from a source path with automatic chunking and progress notifications.
examples:
  - name: Upload a file to a share that uses the SMB 3.0 protocol. (autogenerated)
    text: |
        az storage file upload --account-key 00000000 --account-name MyStorageAccount --path path/file.txt --share-name MyShare --source /path/to/file
    crafted: true
"""

aladdin_helps['storage file upload-batch'] = """
type: command
short-summary: Upload files from a local directory to an Azure Storage File Share in a batch operation.
parameters:
  - name: --source -s
    type: string
    short-summary: The directory to upload files from.
  - name: --destination -d
    type: string
    short-summary: The destination of the upload operation.
    long-summary: The destination can be the file share URL or the share name. When the destination is the share URL, the storage account name is parsed from the URL.
  - name: --destination-path
    type: string
    short-summary: The directory where the source data is copied to. If omitted, data is copied to the root directory.
  - name: --pattern
    type: string
    short-summary: The pattern used for file globbing. The supported patterns are '*', '?', '[seq]', and '[!seq]'. For more information, please refer to https://docs.python.org/3.7/library/fnmatch.html.
    long-summary: When you use '*' in --pattern, it will match any character including the the directory separator '/'.
  - name: --dryrun
    type: bool
    short-summary: List the files and blobs to be uploaded. No actual data transfer will occur.
  - name: --max-connections
    type: integer
    short-summary: The maximum number of parallel connections to use. Default value is 1.
  - name: --validate-content
    type: bool
    short-summary: If set, calculates an MD5 hash for each range of the file for validation.
    long-summary: >
        The storage service checks the hash of the content that has arrived is identical to the hash that was sent.
        This is mostly valuable for detecting bitflips during transfer if using HTTP instead of HTTPS. This hash is not stored.
examples:
  - name: Upload files from a local directory to an Azure Storage File Share in a batch operation. (autogenerated)
    text: |
        az storage file upload-batch --account-key 00000000 --account-name MyAccount --destination . --source /path/to/file
    crafted: true
"""

aladdin_helps['storage file url'] = """
type: command
short-summary: Create the url to access a file.
examples:
  - name: Create the url to access a file. (autogenerated)
    text: |
        az storage file url --account-name MyAccount --path path/file.txt --share-name MyShare
    crafted: true
"""

aladdin_helps['storage logging show'] = """
type: command
short-summary: Show logging settings for a storage account.
parameters:
  - name: --services
    short-summary: 'The storage services from which to retrieve logging info: (b)lob (q)ueue (t)able. Can be combined.'
examples:
  - name: Show logging settings for a storage account. (autogenerated)
    text: |
        az storage logging show --account-name MyAccount --services qt
    crafted: true
"""

aladdin_helps['storage metrics show'] = """
type: command
short-summary: Show metrics settings for a storage account.
parameters:
  - name: --services
    short-summary: 'The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined.'
  - name: --interval
    short-summary: Filter the set of metrics to retrieve by time interval
examples:
  - name: Show metrics settings for a storage account. (autogenerated)
    text: |
        az storage metrics show --account-key 00000000 --account-name MyAccount
    crafted: true
"""

aladdin_helps['storage metrics update'] = """
type: command
short-summary: Update metrics settings for a storage account.
parameters:
  - name: --services
    short-summary: 'The storage services from which to retrieve metrics info: (b)lob (q)ueue (t)able. Can be combined.'
  - name: --hour
    short-summary: Update the hourly metrics
  - name: --minute
    short-summary: Update the by-minute metrics
  - name: --api
    short-summary: Specify whether to include API in metrics. Applies to both hour and minute metrics if both are specified. Must be specified if hour or minute metrics are enabled and being updated.
  - name: --retention
    short-summary: Number of days for which to retain metrics. 0 to disable. Applies to both hour and minute metrics if both are specified.
examples:
  - name: Update metrics settings for a storage account. (autogenerated)
    text: |
        az storage metrics update --account-name MyAccount --api true --hour true --minute true --retention 10 --services bfqt
    crafted: true
  - name: Update metrics settings for a storage account. (autogenerated)
    text: az storage metrics update --api true --connection-string $connectionString --hour true --minute true --retention 10 --services bfqt
    crafted: true
"""

aladdin_helps['storage share create'] = """
type: command
short-summary: Creates a new share under the specified account.
examples:
  - name: Creates a new share under the specified account. (autogenerated)
    text: |
        az storage share create --account-name MyAccount --name MyFileShare
    crafted: true
"""

aladdin_helps['storage share exists'] = """
type: command
short-summary: Check for the existence of a file share.
examples:
  - name: Check for the existence of a file share. (autogenerated)
    text: |
        az storage share exists --account-key 00000000 --account-name MyAccount --name MyFileShare
    crafted: true
  - name: Check for the existence of a file share (autogenerated)
    text: |
        az storage share exists --connection-string $connectionString --name MyFileShare
    crafted: true
"""

aladdin_helps['storage share generate-sas'] = """
type: command
examples:
  - name: Generate a shared access signature for the share. (autogenerated)
    text: |
        az storage share generate-sas --account-key 00000000 --account-name MyStorageAccount --expiry 2037-12-31T23:59:00Z --name MyShare --permissions dlrw
    crafted: true
  - name: Generate a shared access signature for the share. (autogenerated)
    text: |
        az storage share generate-sas --connection-string $connectionString --expiry 2019-02-01T12:20Z --name MyShare --permissions dlrw
    crafted: true
"""

aladdin_helps['storage share url'] = """
type: command
short-summary: Create a URI to access a file share.
examples:
  - name: Create a URI to access a file share. (autogenerated)
    text: |
        az storage share url --account-key 00000000 --account-name MyAccount --name MyFileShare
    crafted: true
"""

aladdin_helps['disk delete'] = """
type: command
short-summary: Delete a managed disk.
examples:
  - name: Delete a managed disk. (autogenerated)
    text: |
        az disk delete --name MyManagedDisk --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk grant-access'] = """
type: command
short-summary: Grant a resource access to a managed disk.
examples:
  - name: Grant a resource read access to a managed disk. (autogenerated)
    text: |
        az disk grant-access --access-level Read --duration-in-seconds 3600 --name MyManagedDisk --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk revoke-access'] = """
type: command
short-summary: Revoke a resource's read access to a managed disk.
examples:
  - name: Revoke a resource's read access to a managed disk. (autogenerated)
    text: |
        az disk revoke-access --ids $id
    crafted: true
  - name: Revoke a resource's read access to a managed disk. (autogenerated)
    text: |
        az disk revoke-access --name MyManagedDisk --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk update'] = """
type: command
short-summary: Update a managed disk.
examples:
  - name: Update a managed disk. (autogenerated)
    text: |
        az disk update --name MyManagedDisk --resource-group MyResourceGroup --size-gb 20
    crafted: true
"""

aladdin_helps['disk wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of a managed disk is met.
examples:
  - name: Place the CLI in a waiting state until a condition of a managed disk is met. (autogenerated)
    text: |
        az disk wait --created --name MyManagedDisk --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk-encryption-set create'] = """
type: command
short-summary: Create a disk encryption set.
examples:
  - name: Create a disk encryption set. (autogenerated)
    text: az disk-encryption-set create --key-url MyKey --location westus2 --name MyDiskEncryptionSet --resource-group MyResourceGroup --source-vault MyVault
    crafted: true
"""

aladdin_helps['disk-encryption-set delete'] = """
type: command
short-summary: Delete a disk encryption set.
examples:
  - name: Delete a disk encryption set. (autogenerated)
    text: az disk-encryption-set delete --name MyDiskEncryptionSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk-encryption-set show'] = """
type: command
short-summary: Get information of a disk encryption sets.
examples:
  - name: Get information of a disk encryption sets (autogenerated)
    text: az disk-encryption-set show --name MyDiskEncryptionSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['disk-encryption-set update'] = """
type: command
short-summary: Update a disk encryption set.
examples:
  - name: Update a disk encryption set. (autogenerated)
    text: az disk-encryption-set update --key-url MyKey --name MyDiskEncryptionSet --resource-group MyResourceGroup --source-vault MyVault
    crafted: true
"""

aladdin_helps['image builder delete'] = """
type: command
short-summary: Delete image builder template.
examples:
  - name: Delete image builder template. (autogenerated)
    text: az image builder delete --name MyImageTemplate --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['image builder show'] = """
type: command
short-summary: Show an image builder template.
examples:
  - name: Show an image builder template (autogenerated)
    text: |
        az image builder show --name mytemplate  --resource-group my-group
    crafted: true
"""

aladdin_helps['ppg create'] = """
type: command
short-summary: Create a proximity placement group
examples:
  - name: Create a proximity placement group (autogenerated)
    text: |
        az ppg create --name MyProximityPlacementGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ppg list'] = """
type: command
short-summary: List proximity placement groups
examples:
  - name: List proximity placement groups (autogenerated)
    text: |
        az ppg list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['ppg show'] = """
type: command
short-summary: Get a proximity placement group
examples:
  - name: Get a proximity placement group (commonly used with --output). (autogenerated)
    text: |
        az ppg show --name MyProximityPlacementGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['sig create'] = """
type: command
short-summary: create a share image gallery.
examples:
  - name: create a share image gallery. (autogenerated)
    text: |
        az sig create --gallery-name MyGallery --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['sig image-definition update'] = """
type: command
short-summary: update a share image defintiion.
examples:
  - name: update a share image defintiion. (autogenerated)
    text: |
        az sig image-definition update --gallery-image-definition MyImage --gallery-name MyGallery --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['snapshot grant-access'] = """
type: command
short-summary: Grant read access to a snapshot.
examples:
  - name: Grant read access to a snapshot. (autogenerated)
    text: |
        az snapshot grant-access --duration-in-seconds 3600 --name MySnapshot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['snapshot revoke-access'] = """
type: command
short-summary: Revoke read access to a snapshot.
examples:
  - name: Revoke read access to a snapshot. (autogenerated)
    text: |
        az snapshot revoke-access --name MySnapshot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['snapshot update'] = """
type: command
short-summary: Update a snapshot.
examples:
  - name: Update a snapshot. (autogenerated)
    text: |
        az snapshot update --name MySnapshot --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['snapshot wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of a snapshot is met.
examples:
  - name: Place the CLI in a waiting state until a condition of a snapshot is met. (autogenerated)
    text: |
        az snapshot wait --exists --name MySnapshot --resource-group MyResourceGroup
    crafted: true
  - name: Place the CLI in a waiting state until a condition of a snapshot is met. (autogenerated)
    text: |
        az snapshot wait --created --name MySnapshot --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm boot-diagnostics enable'] = """
type: command
short-summary: Enable the boot diagnostics on a VM.
parameters:
  - name: --storage
    short-summary: Name or URI of a storage account (e.g. https://your_storage_account_name.blob.core.windows.net/)
examples:
  - name: Enable the boot diagnostics on a VM. (autogenerated)
    text: |
        az vm boot-diagnostics enable --name MyVirtualMachine --resource-group MyResourceGroup --storage https://mystor.blob.core.windows.net/
    crafted: true
"""

aladdin_helps['vm boot-diagnostics get-boot-log'] = """
type: command
short-summary: Get the boot diagnostics log from a VM.
examples:
  - name: Get the boot diagnostics log from a VM. (autogenerated)
    text: |
        az vm boot-diagnostics get-boot-log --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm deallocate'] = """
type: command
short-summary: Deallocate a VM.
long-summary: 'For an end-to-end tutorial, see https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-capture-image'
examples:
  - name: Deallocate a VM. (autogenerated)
    text: |
        az vm deallocate --name MyVm --no-wait --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm disk attach'] = """
type: command
short-summary: Attach a managed persistent disk to a VM.
long-summary: This allows for the preservation of data, even if the VM is reprovisioned due to maintenance or resizing.
examples:
  - name: Attach a managed persistent disk to a VM. (autogenerated)
    text: |
        az vm disk attach --disk $diskId --new --resource-group MyResourceGroup --size-gb 128 --sku Standard_LRS --vm-name MyVm
    crafted: true
"""

aladdin_helps['vm encryption disable'] = """
type: command
short-summary: Disable disk encryption on the OS disk and/or data disks. Decrypt mounted disks.
long-summary: |
    For Linux VMs, disabling encryption is only permitted on data volumes.
    For Windows VMS, disabling encryption is permitted on both OS and data volumes.
examples:
  - name: Disable disk encryption on the OS disk and/or data disks. (autogenerated)
    text: |
        az vm encryption disable --name MyVirtualMachine --resource-group MyResourceGroup --volume-type DATA
    crafted: true
"""

aladdin_helps['vm encryption enable'] = """
type: command
short-summary: "Enable disk encryption on the OS disk and/or data disks. Encrypt mounted disks."
long-summary: |
    Note that Azure Active Directory / service principal arguments are unnecessary for vm encryption. The older version of Azure Disk Encryption required AAD arguments.
    For more information, see:
    https://docs.microsoft.com/azure/security/azure-security-disk-encryption-overview
parameters:
  - name: --aad-client-id
    short-summary: Client ID of an AAD app with permissions to write secrets to the key vault.
  - name: --aad-client-secret
    short-summary: Client secret of the AAD app with permissions to write secrets to the key vault.
  - name: --aad-client-cert-thumbprint
    short-summary: Thumbprint of the AAD app certificate with permissions to write secrets to the key vault.
examples:
  - name: Enable disk encryption on the OS disk and/or data disks. Encrypt mounted disks. (autogenerated)
    text: |
        az vm encryption enable --disk-encryption-keyvault MyVault --name MyVm --resource-group MyResourceGroup --volume-type DATA
    crafted: true
"""

aladdin_helps['vm encryption show'] = """
type: command
short-summary: Show encryption status.
examples:
  - name: Show encryption status. (autogenerated)
    text: |
        az vm encryption show --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm extension wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of a virtual machine extension is met.
examples:
  - name: Place the CLI in a waiting state until a condition of a virtual machine extension is met. (autogenerated)
    text: |
        az vm extension wait --created --name MyExtension --resource-group MyResourceGroup --vm-name MyVm
    crafted: true
  - name: Place the CLI in a waiting state until a condition of a virtual machine extension is met. (autogenerated)
    text: |
        az vm extension wait --exists --name MyExtension --resource-group MyResourceGroup --vm-name MyVm
    crafted: true
  - name: Place the CLI in a waiting state until a condition of a virtual machine extension is met. (autogenerated)
    text: |
        az vm extension wait --ids @- --name MyExtension --subscription MySubscription --updated --vm-name MyVm
    crafted: true
"""

aladdin_helps['vm host group create'] = """
type: command
short-summary: Create a dedicated host group.
examples:
  - name: Create a dedicated host group. (autogenerated)
    text: |
        az vm host group create --name MyDedicatedHostGroup --platform-fault-domain-count 2 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm host group show'] = """
type: command
short-summary: Get the details of a dedicated host group.
examples:
  - name: Get the details of a dedicated host group (autogenerated)
    text: |
        az vm host group show --name MyDedicatedHostGroup --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm host list'] = """
type: command
short-summary: List dedicated hosts.
examples:
  - name: List dedicated hosts. (autogenerated)
    text: |
        az vm host list --host-group my-host-group --resource-group my-rg
    crafted: true
"""

aladdin_helps['vm host show'] = """
type: command
short-summary: Get the details of a dedicated host.
examples:
  - name: Get the details of a dedicated host (autogenerated)
    text: |
        az vm host show --host-group my-host-group --name MyDedicatedHost --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm identity show'] = """
type: command
short-summary: display VM's managed identity info.
examples:
  - name: display VM's managed identity info. (autogenerated)
    text: |
        az vm identity show --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm image accept-terms'] = """
type: command
short-summary: Accept Azure Marketplace term so that the image can be used to create VMs
examples:
  - name: Accept Azure Marketplace term so that the image can be used to create VMs. (autogenerated)
    text: |
        az vm image accept-terms --urn publisher:offer:sku:version
    crafted: true
"""

aladdin_helps['vm image show'] = """
type: command
short-summary: Get the details for a VM image available in the Azure Marketplace.
examples:
  - name: Get the details for a VM image available in the Azure Marketplace. (autogenerated)
    text: |
        az vm image show --location westus --urn publisher:offer:sku:version
    crafted: true
"""

aladdin_helps['vm image terms cancel'] = """
type: command
short-summary: Cancel Azure Marketplace image terms.
examples:
  - name: Cancel Azure Marketplace image terms. (autogenerated)
    text: |
        az vm image terms cancel --subscription MySubscription --urn publisher:offer:sku:version
    crafted: true
"""

aladdin_helps['vm monitor metrics list-definitions'] = """
type: command
short-summary: List the metric definitions for a VM.
examples:
  - name: List the metric definitions for a VM. (autogenerated)
    text: az vm monitor metrics list-definitions --name MyIDVirtualMachine --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['vm nic set'] = """
type: command
short-summary: Configure settings of a NIC attached to a VM.
examples:
  - name: Configure settings of a NIC attached to a VM. (autogenerated)
    text: |
        az vm nic set --nics nic_name1 nic_name2 --primary-nic nic_name2 --resource-group MyResourceGroup --vm-name MyVm
    crafted: true
"""

aladdin_helps['vm run-command show'] = """
type: command
parameters:
  - name: --command-id
    type: string
    short-summary: The command id
    populator-commands:
      - az vm run-command list
examples:
  - name: vm run-command show (autogenerated)
    text: |
        az vm run-command show --command-id RunShellScript --location westus2
    crafted: true
"""

aladdin_helps['vm secret add'] = """
type: command
short-summary: Add a secret to a VM.
examples:
  - name: Add a secret to a VM. (autogenerated)
    text: |
        az vm secret add --certificate {certificate} --keyvault {keyvault} --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm secret list'] = """
type: command
short-summary: List secrets on a VM.
examples:
  - name: List secrets on a VM. (autogenerated)
    text: |
        az vm secret list --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm start'] = """
type: command
short-summary: Start a stopped VM.
examples:
  - name: Start a stopped VM. (autogenerated)
    text: |
        az vm start --name MyVm --no-wait --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vm unmanaged-disk attach'] = """
type: command
short-summary: Attach an unmanaged persistent disk to a VM.
long-summary: This allows for the preservation of data, even if the VM is reprovisioned due to maintenance or resizing.
examples:
  - name: Attach an unmanaged persistent disk to a VM. (autogenerated)
    text: |
        az vm unmanaged-disk attach --name MyDataDisk --new --resource-group MyResourceGroup --size-gb 50 --vm-name MyVm
    crafted: true
"""

aladdin_helps['vmss deallocate'] = """
type: command
short-summary: Deallocate VMs within a VMSS.
examples:
  - name: Deallocate VMs within a VMSS. (autogenerated)
    text: |
        az vmss deallocate --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss delete-instances'] = """
type: command
short-summary: Delete VMs within a VMSS.
examples:
  - name: Delete VMs within a VMSS. (autogenerated)
    text: |
        az vmss delete-instances --instance-ids 0 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss diagnostics set'] = """
type: command
short-summary: Enable diagnostics on a VMSS.
examples:
  - name: Enable diagnostics on a VMSS. (autogenerated)
    text: |
        az vmss diagnostics set --protected-settings {protected-settings} --resource-group MyResourceGroup --settings '{"commandToExecute": "echo testing"}' --vmss-name MyVmss
    crafted: true
"""

aladdin_helps['vmss disk attach'] = """
type: command
short-summary: Attach managed data disks to a scale set or its instances.
examples:
  - name: Attach managed data disks to a scale set or its instances. (autogenerated)
    text: |
        az vmss disk attach --disk {disk} --instance-id 0 --resource-group MyResourceGroup
    crafted: true
  - name: Attach managed data disks of a given size to a scale set or its instances. (autogenerated)
    text: |
        az vmss disk attach --vmss-name MyVmss --resource-group MyResourceGroup --size-gb 50
    crafted: true
"""

aladdin_helps['vmss disk detach'] = """
type: command
short-summary: Detach managed data disks from a scale set or its instances.
examples:
  - name: Detach managed data disks from a scale set or its instances. (autogenerated)
    text: |
        az vmss disk detach --instance-id 0 --lun {lun} --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss encryption enable'] = """
type: command
short-summary: "Encrypt a VMSS with managed disks."
long-summary: "For more information, see: For more information, see: https://docs.microsoft.com/azure/security/azure-security-disk-encryption-overview"
examples:
  - name: Encrypt a VMSS with managed disks. (autogenerated)
    text: |
        az vmss encryption enable --disk-encryption-keyvault MyVault --name MyVmss --resource-group MyResourceGroup --volume-type DATA
    crafted: true
"""

aladdin_helps['vmss encryption show'] = """
type: command
short-summary: Show encryption status.
examples:
  - name: Show encryption status. (autogenerated)
    text: |
        az vmss encryption show --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss extension delete'] = """
type: command
short-summary: Delete an extension from a VMSS.
examples:
  - name: Delete an extension from a VMSS. (autogenerated)
    text: |
        az vmss extension delete --name MyExtension --resource-group MyResourceGroup --vmss-name MyVmss
    crafted: true
"""

aladdin_helps['vmss extension list'] = """
type: command
short-summary: List extensions associated with a VMSS.
examples:
  - name: List extensions associated with a VMSS. (autogenerated)
    text: |
        az vmss extension list --resource-group MyResourceGroup --vmss-name MyVmss
    crafted: true
"""

aladdin_helps['vmss extension show'] = """
type: command
short-summary: Show details on a VMSS extension.
examples:
  - name: Show details on a VMSS extension. (autogenerated)
    text: |
        az vmss extension show --name MyExtension --resource-group MyResourceGroup --vmss-name MyVmss
    crafted: true
"""

aladdin_helps['vmss get-instance-view'] = """
type: command
short-summary: View an instance of a VMSS.
parameters:
  - name: --instance-id
    short-summary: A VM instance ID or "*" to list instance view for all VMs in a scale set.

examples:
  - name: View an instance of a VMSS. (autogenerated)
    text: |
        az vmss get-instance-view --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss identity assign'] = """
type: command
short-summary: Enable managed service identity on a VMSS.
long-summary: This is required to authenticate and interact with other Azure services using bearer tokens.
examples:
  - name: Enable managed service identity on a VMSS. (autogenerated)
    text: |
        az vmss identity assign --identities readerId writerId --name MyVmss --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss identity show'] = """
type: command
short-summary: display VM scaleset's managed identity info.
examples:
  - name: display VM scaleset's managed identity info. (autogenerated)
    text: |
        az vmss identity show --name MyVirtualMachine --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss list'] = """
type: command
short-summary: List VMSS.
examples:
  - name: List VMSS (autogenerated)
    text: az vmss list --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss list-instance-connection-info'] = """
type: command
short-summary: Get the IP address and port number used to connect to individual VM instances within a set.
examples:
  - name: Get the IP address and port number used to connect to individual VM instances within a set. (autogenerated)
    text: |
        az vmss list-instance-connection-info --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss list-instance-public-ips'] = """
type: command
short-summary: List public IP addresses of VM instances within a set.
examples:
  - name: List public IP addresses of VM instances within a set. (autogenerated)
    text: |
        az vmss list-instance-public-ips --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss reimage'] = """
type: command
short-summary: Reimage VMs within a VMSS.
parameters:
  - name: --instance-id
    short-summary: VM instance ID. If missing, reimage all instances.
examples:
  - name: Reimage VMs within a VMSS. (autogenerated)
    text: |
        az vmss reimage --instance-id 1 --name MyScaleSet --resource-group MyResourceGroup --subscription MySubscription
    crafted: true
"""

aladdin_helps['vmss restart'] = """
type: command
short-summary: Restart VMs within a VMSS.
examples:
  - name: Restart VMs within a VMSS. (autogenerated)
    text: |
        az vmss restart --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss run-command show'] = """
type: command
parameters:
  - name: --command-id
    type: string
    short-summary: The command id
    populator-commands:
      - az vmss run-command list
examples:
  - name: vmss run-command show (autogenerated)
    text: |
        az vmss run-command show --command-id RunShellScript --location westus2
    crafted: true
"""

aladdin_helps['vmss scale'] = """
type: command
short-summary: Change the number of VMs within a VMSS.
parameters:
  - name: --new-capacity
    short-summary: Number of VMs in the VMSS.
examples:
  - name: Change the number of VMs within a VMSS. (autogenerated)
    text: |
        az vmss scale --name MyScaleSet --new-capacity 6 --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss show'] = """
type: command
short-summary: Get details on VMs within a VMSS.
parameters:
  - name: --instance-id
    short-summary: VM instance ID. If missing, show the VMSS.
examples:
  - name: Get details on VMs within a VMSS. (autogenerated)
    text: |
        az vmss show --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss start'] = """
type: command
short-summary: Start VMs within a VMSS.
examples:
  - name: Start VMs within a VMSS. (autogenerated)
    text: |
        az vmss start --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss stop'] = """
type: command
short-summary: Power off (stop) VMs within a VMSS.
long-summary: The VMs will continue to be billed. To avoid this, you can deallocate VM instances within a VMSS through "az vmss deallocate"
examples:
  - name: Power off (stop) VMs within a VMSS. (autogenerated)
    text: |
        az vmss stop --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss update-instances'] = """
type: command
short-summary: Upgrade VMs within a VMSS.
examples:
  - name: Upgrade VMs within a VMSS. (autogenerated)
    text: |
        az vmss update-instances --instance-ids 1 --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""

aladdin_helps['vmss wait'] = """
type: command
short-summary: Place the CLI in a waiting state until a condition of a scale set is met.
examples:
  - name: Place the CLI in a waiting state until a condition of a scale set is met. (autogenerated)
    text: |
        az vmss wait --created --name MyScaleSet --resource-group MyResourceGroup
    crafted: true
"""
