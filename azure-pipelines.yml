resources:
- repo: self

trigger:
  batch: true
  branches:
    include:
    - '*'
    exclude:
    - 'release*'

pr:
  branches:
    include:
    - '*'

variables:
- template: ${{ variables.Pipeline.Workspace }}/.azure-pipelines/templates/variables.yml
- name: Codeql.Enabled
  value: false
- name: ComponentDetection.ForceScan
  value: eq(variables['Build.SourceBranch'], 'refs/heads/release')

parameters:
- name: architectures
  type: object
  default:
  - name: AMD64
    value: amd64
    pool: pool-ubuntu-latest-multi-core
  - name: ARM64
    value: arm64
    pool: pool-ubuntu-latest-arm64

jobs:
- job: CodegenCoverage
  displayName: "Codegen Coverage"
  continueOnError: true
  pool:
    name: ${{ variables.ubuntu_pool }}
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.11'
    inputs:
      versionSpec: 3.11
  - template: .azure-pipelines/templates/azdev_setup.yml
  - bash: |
      set -ev
      . env/bin/activate
      # clone azure-cli-extensions
      cd ..
      git clone --depth 1 -b main https://github.com/Azure/azure-cli-extensions.git ./azure-cli-extensions
      azdev extension repo add ./azure-cli-extensions
      pip install setuptools==70.0.0 wheel==0.30.0
      azdev extension add "*"
      # Some extension will change the dependence, so run `azdev setup` again after all extensions installed.
      azdev setup -c $CLI_REPO_PATH -r ./azure-cli-extensions
      
      mkdir -p /tmp/module_stats
      
      for module in $(cat /mnt/vss/_work/1/s/scripts/ci/core_modules.txt); do
        azdev statistics list-command-table $module --statistics-only > /tmp/module_stats/${module}.json
      done
      
      for module in $(cat /mnt/vss/_work/1/s/scripts/ci/extension_modules.txt); do
        azdev statistics list-command-table $module --statistics-only > /tmp/module_stats/${module}.json
      done
      
      python $CLI_REPO_PATH/scripts/ci/analyze_module_stats.py
    env:
      BUILD_ID: $(Build.BuildId)
      BUILD_BRANCH: $(Build.SourceBranchName)
    enabled: true
