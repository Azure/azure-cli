# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .overlay import Overlay


class VideoOverlay(Overlay):
    """A video overlay.

    :param input_label: Gets or sets the label of the Input used for the
     Overlay.   The Input must specify exactly one file to use.
    :type input_label: str
    :param input_loop: Gets or sets a value indicating whether the overlay is
     looped to match the duration of the input media.
    :type input_loop: bool
    :param start: Gets or sets the duration in the video at which the overlay
     starts. This is relative to the clip start if one is specified in a job.
     Default is from the beginning of the video.
    :type start: timedelta
    :param end: Gets or sets the duration in the video at which the overlay
     ends.  This is relative to the clip start if specified in a job. Default
     is till the end of the video if InputLoop is  true. else the duration of
     the overlay.
    :type end: timedelta
    :param fade_in_duration: Gets or sets the duration for how long the fade
     in happens. Default is no fade in.
    :type fade_in_duration: timedelta
    :param fade_out_duration: Gets or sets the duration for how long the fade
     out happens. Default is no fade out.
    :type fade_out_duration: timedelta
    :param audio_gain_level: Gets or sets the gain level of audio in the
     overlay. Defaults to a value of 1.0.
    :type audio_gain_level: float
    :param odatatype: Constant filled by server.
    :type odatatype: str
    :param position: Gets or sets the area in the video where the overlay is
     applied.
    :type position: ~accounts.models.Rectangle
    :param opacity: Gets or sets the opacity of the overlay.
    :type opacity: float
    :param preserve_aspect_ratio: Gets or sets a value indicating whether the
     aspect ratio of the overlay needs to be preserved or not.  Defaults to
     true.
    :type preserve_aspect_ratio: bool
    :param crop_rectangle: Gets or sets the optional rectangle to crop the
     video overlay.
    :type crop_rectangle: ~accounts.models.Rectangle
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'input_label': {'key': 'inputLabel', 'type': 'str'},
        'input_loop': {'key': 'inputLoop', 'type': 'bool'},
        'start': {'key': 'start', 'type': 'duration'},
        'end': {'key': 'end', 'type': 'duration'},
        'fade_in_duration': {'key': 'fadeInDuration', 'type': 'duration'},
        'fade_out_duration': {'key': 'fadeOutDuration', 'type': 'duration'},
        'audio_gain_level': {'key': 'audioGainLevel', 'type': 'float'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
        'position': {'key': 'position', 'type': 'Rectangle'},
        'opacity': {'key': 'opacity', 'type': 'float'},
        'preserve_aspect_ratio': {'key': 'preserveAspectRatio', 'type': 'bool'},
        'crop_rectangle': {'key': 'cropRectangle', 'type': 'Rectangle'},
    }

    def __init__(self, input_label=None, input_loop=None, start=None, end=None, fade_in_duration=None, fade_out_duration=None, audio_gain_level=None, position=None, opacity=None, preserve_aspect_ratio=None, crop_rectangle=None):
        super(VideoOverlay, self).__init__(input_label=input_label, input_loop=input_loop, start=start, end=end, fade_in_duration=fade_in_duration, fade_out_duration=fade_out_duration, audio_gain_level=audio_gain_level)
        self.position = position
        self.opacity = opacity
        self.preserve_aspect_ratio = preserve_aspect_ratio
        self.crop_rectangle = crop_rectangle
        self.odatatype = '#Microsoft.Media.VideoOverlay'
