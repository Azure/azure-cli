# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .run_request import RunRequest


class QuickTaskRunRequest(RunRequest):
    """The parameters for a quick task run request.

    :param arguments: The collection of override arguments to be used when
     executing the run.
    :type arguments: list[~containerregistrybuild.models.Argument]
    :param type: Constant filled by server.
    :type type: str
    :param task_definition_content: Base64 encoded value of the
     template/definition file content.
    :type task_definition_content: str
    :param values_content: Base64 encoded value of the parameters/values file
     content.
    :type values_content: str
    :param timeout: Build timeout in seconds. Default value: 3600 .
    :type timeout: int
    :param platform: The platform properties against which the build will
     happen.
    :type platform: ~containerregistrybuild.models.PlatformProperties
    :param agent_configuration: The machine configuration of the build agent.
    :type agent_configuration: ~containerregistrybuild.models.AgentProperties
    """

    _validation = {
        'type': {'required': True},
        'task_definition_content': {'required': True},
        'timeout': {'maximum': 28800, 'minimum': 300},
        'platform': {'required': True},
    }

    _attribute_map = {
        'arguments': {'key': 'arguments', 'type': '[Argument]'},
        'type': {'key': 'type', 'type': 'str'},
        'task_definition_content': {'key': 'taskDefinitionContent', 'type': 'str'},
        'values_content': {'key': 'valuesContent', 'type': 'str'},
        'timeout': {'key': 'timeout', 'type': 'int'},
        'platform': {'key': 'platform', 'type': 'PlatformProperties'},
        'agent_configuration': {'key': 'agentConfiguration', 'type': 'AgentProperties'},
    }

    def __init__(self, task_definition_content, platform, arguments=None, values_content=None, timeout=3600, agent_configuration=None):
        super(QuickTaskRunRequest, self).__init__(arguments=arguments)
        self.task_definition_content = task_definition_content
        self.values_content = values_content
        self.timeout = timeout
        self.platform = platform
        self.agent_configuration = agent_configuration
        self.type = 'QuickTaskRunRequest'
