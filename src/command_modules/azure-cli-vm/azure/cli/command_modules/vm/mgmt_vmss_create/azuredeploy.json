{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Container URI of the template."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Virtual Machine.  Required if SSH (Linux only) is not specified."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "ssh"
      ],
      "metadata": {
        "description": "Password or SSH Public Key authentication."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine.  Requires a new public IP to be created by setting Public IP Address Type to New."
      }
    },
    "dnsNameType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "new"
      ],
      "metadata": {
        "description": "Associate VMs with a public IP address to a DNS name."
      }
    },
    "instanceCount": {
      "type": "string",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs in scale set."
      }
    },
    "loadBalancerBackendPoolName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), 'bepool')]",
      "metadata": {
        "description": "Name of load balancer backend pool."
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), 'lb')]",
      "metadata": {
        "description": "Name for load balancer."
      }
    },
    "loadBalancerNatPoolName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), 'natpool')]",
      "metadata": {
        "description": "Name of load balancer NAT (network address translation) pool."
      }
    },
    "loadBalancerType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Whether to use an existing load balancer, create a new one, or use no load balancer."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for VM resources."
      }
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The VM name."
      }
    },
    "osDiskName": {
      "type": "string",
      "defaultValue": "osdiskimage",
      "metadata": {
        "description": "Name of new VM OS disk."
      }
    },
    "osDiskUri": {
      "type": "string",
      "defaultValue": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/', parameters('storageContainerName'), '/', parameters('osDiskName'), '.vhd')]",
      "metadata": {
        "description": "URI for a custom VHD image."
      }
    },
    "osOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The OS Offer to install."
      }
    },
    "osPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The OS publisher of the OS image."
      }
    },
    "osSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "The OS SKU to install."
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Win2012R2Datacenter",
      "allowedValues": [
        "Win2012R2Datacenter",
        "Win2012Datacenter",
        "Win2008R2SP1",
        "Custom"
      ],
      "metadata": {
        "description": "Common OS choices.  Choose 'Custom' to specify an image with the osPublisher, osOffer, osSKU, and osVersion parameters."
      }
    },
    "osVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The OS version to install."
      }
    },
    "privateIpAddressAllocation": {
      "type": "string",
      "defaultValue": "dynamic",
      "allowedValues": [
        "dynamic",
        "static"
      ],
      "metadata": {
        "description": "Private IP address allocation method."
      }
    },
    "publicIpAddressAllocation": {
      "type": "string",
      "defaultValue": "dynamic",
      "allowedValues": [
        "dynamic",
        "static"
      ],
      "metadata": {
        "description": "Public IP address allocation method."
      }
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[concat('PublicIP', parameters('name'))]",
      "metadata": {
        "description": "Name of public IP address to use."
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "none",
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Use a public IP Address for the VM Nic."
      }
    },
    "sshDestKeyPath": {
      "type": "string",
      "defaultValue": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "metadata": {
        "description": "Destination file path on VM for SSH key."
      }
    },
    "sshKeyValue": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH key file data."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('vhdstorage', uniqueString(parameters('name')))]",
      "metadata": {
        "description": "Name of storage account for the VM OS disk."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing storage account or create a new one."
      }
    },
    "storageContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "Name of storage container for the VM OS disk."
      }
    },
    "storageRedundancyType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The VM storage type (Standard_LRS, Standard_GRS, Standard_RAGRS)."
      }
    },
    "subnetIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet address prefix in CIDR format."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[concat('Subnet', parameters('name'))]",
      "metadata": {
        "description": "The subnet name."
      }
    },
    "virtualNetworkIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network IP address prefix in CIDR format."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat('VNET', parameters('name'))]",
      "metadata": {
        "description": "Name of virtual network to add VM to."
      }
    },
    "virtualNetworkType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing VNet or create a new one."
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set.  See https://azure.microsoft.com/en-us/pricing/details/virtual-machines/ for size info."
      }
    }
  },
  "variables": {
    "instanceCount": "[int(parameters('instanceCount'))]",
    "apiVersion": "2015-06-15",
    "vmssApiVersion": "2016-03-30",
    "resourceLocation": "[parameters('location')]",
    "storageAccountType": "[parameters('storageRedundancyType')]",
    "saCount": 5,
    "namingInfix": "[toLower(substring(concat(parameters('name'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('name'))]",
    "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
    "uniqueStringArray": [
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
    ],
    "vhdContainerName": "[parameters('storageContainerName')]",
    "osDiskName": "[parameters('osDiskName')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "publicIPAddressName": "[parameters('publicIpAddressName')]",
    "subnetName": "[parameters('subnetName')]",
    "loadBalancerName": "[parameters('loadBalancerName')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[parameters('loadBalancerNatPoolName')]",
    "bePoolName": "[parameters('loadBalancerBackendPoolName')]",
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 22,
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "osProfilepassword": {
      "computerNamePrefix": "[variables('namingInfix')]",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    },
    "sshKeyPath": "[parameters('sshDestKeyPath')]",
    "osProfilessh": {
      "computerNamePrefix": "[variables('namingInfix')]",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[variables('sshKeyPath')]",
              "keyData": "[parameters('sshKeyValue')]"
            }
          ]
        }
      }
    },
    "osProfileReference": "[variables(concat('osProfile', parameters('authenticationType')))]",
    "imagePublishers": {
      "Win2012R2Datacenter": "MicrosoftWindowsServer",
      "Win2012Datacenter": "MicrosoftWindowsServer",
      "Win2008R2SP1": "MicrosoftWindowsServer",
      "Custom": "[parameters('osPublisher')]"
    },
    "imageOffers": {
      "Win2012R2Datacenter": "WindowsServer",
      "Win2012Datacenter": "WindowsServer",
      "Win2008R2SP1": "WindowsServer",
      "Custom": "[parameters('osOffer')]"
    },
    "imageSkus": {
      "Win2012R2Datacenter": "2012-R2-Datacenter",
      "Win2012Datacenter": "2012-Datacenter",
      "Win2008R2SP1": "2008-R2-SP1",
      "Custom": "[parameters('osSKU')]"
    },
    "imageVersions": {
      "Win2012R2Datacenter": "latest",
      "Win2012Datacenter": "latest",
      "Win2008R2SP1": "latest",
      "Custom": "[parameters('osVersion')]"
    },
    "authTypePath": {
      "ssh": "sshkey",
      "password": "password"
    },
    "vnetDeploymentName": "[concat('VNet', parameters('name'))]",
    "ipDeploymentName": "[concat('IP', parameters('name'))]",
    "lbDeploymentName": "[concat('LB', parameters('name'))]",
    "vnetAddressPrefix": "[parameters('virtualNetworkIpAddressPrefix')]",
    "subnetAddressPrefix": "[parameters('subnetIpAddressPrefix')]",
    "vhdStorageType": "[parameters('storageRedundancyType')]",
    "publicIPName": "[parameters('publicIpAddressName')]",
    "publicIpAddressAllocation": "[parameters('publicIpAddressAllocation')]",
    "vhdStorageContainerName": "vhds",
    "vmSize": "[parameters('vmSku')]",
    "vmDeploymentName": "[concat('VM', parameters('name'))]",
    "nicDeploymentName": "[concat('NicIp', parameters('name'))]",
    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "ipConfigurations": {
      "new": [
        {
          "name": "[variables('ipConfigName')]",
          "properties": {
            "subnet": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
            },
            "loadBalancerBackendAddressPools": [
              {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              }
            ],
            "loadBalancerInboundNatPools": [
              {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
              }
            ]
          }
        }
      ],
      "existing": [
        {
          "name": "[variables('ipConfigName')]",
          "properties": {
            "subnet": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
            },
            "loadBalancerBackendAddressPools": [
              {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              }
            ],
            "loadBalancerInboundNatPools": [
              {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
              }
            ]
          }
        }
      ],
      "none": [
        {
          "name": "[variables('ipConfigName')]",
          "properties": {
            "subnet": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
            }
          }
        }
      ]
    },
    "storageAccountTemplateFilePaths": {
      "new": "nested_templates/NewStorageAccount.json",
      "existing": "nested_templates/ExistingStorageAccount.json"
    },
    "storageDeploymentName": "[concat(parameters('storageAccountName'), parameters('name'))]",
    "vnetTemplateFilePaths": {
      "new": "nested_templates/VNet_new.json",
      "existing": "nested_templates/VNet_existing.json"
    },
    "ipTemplateFilePaths": {
      "new": "nested_templates/PublicIP_new.json",
      "existing": "nested_templates/PublicIP_existing.json",
      "none": "nested_templates/PublicIP_none.json"
    },
    "lbTemplateFilePaths": {
      "new": "nested_templates/LoadBalancer_new.json",
      "existing": "nested_templates/LoadBalancer_existing.json",
      "none": "nested_templates/LoadBalancer_none.json"
    },
    "nicTemplateFilePaths": {
      "none": "[concat('/nested_templates/nic_ip_none_dns_', parameters('dnsNameType'), '.json')]",
      "new": "[concat('/nested_templates/nic_ip_new_dns_', parameters('dnsNameType'), '.json')]",
      "existing": "[concat('/nested_templates/nic_ip_existing_dns_', parameters('dnsNameType'), '.json')]"
    }
  },
  "resources": [
    {
      "name": "[variables('vnetDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('vnetTemplateFilePaths')[parameters('virtualNetworkType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[variables('vnetName')]" },
          "vnetIpAddressPrefix": { "value": "[variables('vnetAddressPrefix')]" },
          "subnetIpAddressPrefix": { "value": "[variables('subnetAddressPrefix')]" },
          "subnetName": { "value": "[variables('subnetName')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    },
    {
      "name": "[variables('ipDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('ipTemplateFilePaths')[parameters('publicIpAddressType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "publicIPAddressName": { "value": "[variables('publicIPAddressName')]" },
          "publicIpAddressAllocation": { "value": "[variables('publicIpAddressAllocation')]" },
          "privateIpAllocation": { "value": "[parameters('privateIpAddressAllocation')]" },
          "location": { "value": "[parameters('location')]" },
          "dnsNameType": { "value": "[parameters('dnsNameType')]" }
        }
      }
    },
    {
      "name": "[variables('lbDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('ipDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('lbTemplateFilePaths')[parameters('loadBalancerType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "loadBalancerName": { "value": "[variables('loadBalancerName')]" },
          "resourceLocation": { "value": "[variables('resourceLocation')]" },
          "apiVersion": { "value": "[variables('apiVersion')]" },
          "ipDeploymentName": { "value": "[variables('ipDeploymentName')]" },
          "publicIPAddressID": { "value": "[variables('publicIPAddressID')]" },
          "bePoolName": { "value": "[variables('bePoolName')]" },
          "natPoolName": { "value": "[variables('natPoolName')]" },
          "frontEndIPConfigID": { "value": "[variables('frontEndIPConfigID')]" },
          "natStartPort": { "value": "[variables('natStartPort')]" },
          "natEndPort": { "value": "[variables('natEndPort')]" },
          "natBackendPort": { "value": "[variables('natBackendPort')]" },
          "publicIpAddressType": { "value": "[parameters('publicIpAddressType')]" },
          "subnetID": { "value": "[variables('subnetRef')]" }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
      "location": "[variables('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('name')]",
      "location": "[variables('resourceLocation')]",
      "apiVersion": "[variables('vmssApiVersion')]",
      "dependsOn": [
        "storageLoop",
        "[concat('Microsoft.Resources/deployments/', variables('lbDeploymentName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('vnetDeploymentName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[variables('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[2], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[3], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[4], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]"
              ],
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('osPublisher')]",
              "offer": "[parameters('osOffer')]",
              "sku": "[parameters('osSKU')]",
              "version": "[parameters('osVersion')]"
            }
          },
          "osProfile": "[variables('osProfileReference')]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": "[variables('ipConfigurations')[parameters('loadBalancerType')]]"
                }
              }
            ]
          }
        }
      }
    }
  ]
}