{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Container URI of the template."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Virtual Machine.  Required if SSH (Linux only) is not specified."
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshkey"
      ],
      "metadata": {
        "description": "Password or SSH-based authentication."
      }
    },
    "availabilitySetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Existing availability set for the VM."
      }
    },
    "availabilitySetType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "existing"
      ],
      "metadata": {
        "description": "Flag to add the VM to an existing availability set."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine.  Requires a new public IP to be created by setting Public IP Address Type to New."
      }
    },
    "dnsNameType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "new"
      ],
      "metadata": {
        "description": "Associate VMs with a public IP address to a DNS name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for VM resources."
      }
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The VM name."
      }
    },
    "osDiskName": {
      "type": "string",
      "defaultValue": "osdiskimage",
      "metadata": {
        "description": "Name of new VM OS disk."
      }
    },
    "osDiskUri": {
      "type": "string",
      "defaultValue": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/', parameters('storageContainerName'), '/', parameters('osDiskName'), '.vhd')]",
      "metadata": {
        "description": "URI for a custom VHD image."
      }
    },
    "osOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The OS Offer to install."
      }
    },
    "osPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The OS publisher of the OS image."
      }
    },
    "osSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "The OS SKU to install."
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Win2012R2Datacenter",
      "allowedValues": [
        "CentOS",
        "CoreOS",
        "Debian",
        "openSUSE",
        "RHEL",
        "SLES",
        "UbuntuLTS",
        "Win2012R2Datacenter",
        "Win2012Datacenter",
        "Win2008R2SP1",
        "Custom"
      ],
      "metadata": {
        "description": "Common OS choices.  Choose 'Custom' to specify an image with the osPublisher, osOffer, osSKU, and osVersion parameters."
      }
    },
    "osVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The OS version to install."
      }
    },
    "privateIpAddressAllocation": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Private IP address allocation method."
      }
    },
    "publicIpAddressAllocation": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Public IP address allocation method."
      }
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[concat('PublicIP', parameters('name'))]",
      "metadata": {
        "description": "Name of public IP address to use."
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Use a public IP Address for the VM Nic."
      }
    },
    "size": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The VM Size that should be created.  See https://azure.microsoft.com/en-us/pricing/details/virtual-machines/ for size info."
      }
    },
    "sshDestKeyPath": {
      "type": "string",
      "defaultValue": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "metadata": {
        "description": "Destination file path on VM for SSH key."
      }
    },
    "sshKeyValue": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH key file data."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('vhdstorage', uniqueString(parameters('name')))]",
      "metadata": {
        "description": "Name of storage account for the VM OS disk."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing storage account or create a new one."
      }
    },
    "storageContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "Name of storage container for the VM OS disk."
      }
    },
    "storageRedundancyType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The VM storage type (Standard_LRS, Standard_GRS, Standard_RAGRS)."
      }
    },
    "subnetIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet address prefix."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[concat('Subnet', parameters('name'))]",
      "metadata": {
        "description": "The subnet name."
      }
    },
    "virtualNetworkIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network IP address prefix."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat('VNET', parameters('name'))]",
      "metadata": {
        "description": "Name of virtual network to add VM to."
      }
    },
    "virtualNetworkType": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing VNet or create a new one."
      }
    }
  },
  "variables": {
    "imagePublishers": {
      "CoreOS": "CoreOS",
      "Win2012R2Datacenter": "MicrosoftWindowsServer",
      "Win2012Datacenter": "MicrosoftWindowsServer",
      "Win2008R2SP1": "MicrosoftWindowsServer",
      "Debian": "credativ",
      "RHEL": "RedHat",
      "CentOS": "OpenLogic",
      "openSUSE": "SUSE",
      "UbuntuLTS": "Canonical",
      "SLES": "SUSE",
      "Custom": "[parameters('osPublisher')]"
    },
    "imageOffers": {
      "CoreOS": "CoreOS",
      "Win2012R2Datacenter": "WindowsServer",
      "Win2012Datacenter": "WindowsServer",
      "Win2008R2SP1": "WindowsServer",
      "Debian": "Debian",
      "RHEL": "RHEL",
      "CentOS": "CentOS",
      "openSUSE": "openSUSE",
      "UbuntuLTS": "UbuntuServer",
      "SLES": "SLES",
      "Custom": "[parameters('osOffer')]"
    },
    "imageSkus": {
      "CoreOS": "Stable",
      "Win2012R2Datacenter": "2012-R2-Datacenter",
      "Win2012Datacenter": "2012-Datacenter",
      "Win2008R2SP1": "2008-R2-SP1",
      "Debian": "8",
      "RHEL": "7.2",
      "CentOS": "7.2",
      "openSUSE": "13.2",
      "UbuntuLTS": "14.04.4-LTS",
      "SLES": "12-SP1",
      "Custom": "[parameters('osSKU')]"
    },
    "imageVersions": {
      "CoreOS": "latest",
      "Win2012R2Datacenter": "latest",
      "Win2012Datacenter": "latest",
      "Win2008R2SP1": "latest",
      "Debian": "latest",
      "RHEL": "latest",
      "CentOS": "latest",
      "openSUSE": "latest",
      "UbuntuLTS": "latest",
      "SLES": "latest",
      "Custom": "[parameters('osVersion')]"
    },
    "vnetDeploymentName": "[concat('VNet', variables('vmName'))]",
    "nicName": "[concat('VMNic', parameters('name'))]",
    "vnetAddressPrefix": "[parameters('virtualNetworkIpAddressPrefix')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetAddressPrefix": "[parameters('subnetIpAddressPrefix')]",
    "vhdStorageType": "[parameters('storageRedundancyType')]",
    "publicIPName": "[parameters('publicIpAddressName')]",
    "publicIpAddressAllocation": "[parameters('publicIpAddressAllocation')]",
    "vhdStorageContainerName": "vhds",
    "vmName": "[parameters('name')]",
    "vmSize": "[parameters('size')]",
    "vmDeploymentName": "[concat('VM', variables('vmName'))]",
    "nicDeploymentName": "[concat('NicIp', variables('vmName'))]",
    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "storageAccountTemplateFilePaths": {
      "new": "nested_templates/NewStorageAccount.json",
      "existing": "nested_templates/ExistingStorageAccount.json"
    },
    "storageDeploymentName": "[concat(parameters('storageAccountName'), variables('vmName'))]",
    "availSetId": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetId'))]",
    "vnetTemplateFilePaths": {
      "new": "nested_templates/NewVNet.json",
      "existing": "nested_templates/ExistingVNet.json"
    },
    "nicTemplateFilePaths": {
      "none": "[concat('/nested_templates/nic_ip_none_dns_', parameters('dnsNameType'), '.json')]",
      "new": "[concat('/nested_templates/nic_ip_new_dns_', parameters('dnsNameType'), '.json')]",
      "existing": "[concat('/nested_templates/nic_ip_existing_dns_', parameters('dnsNameType'), '.json')]"
    }
  },
  "resources": [
    {
      "name": "[variables('storageDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('storageAccountTemplateFilePaths')[parameters('storageAccountType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "location": { "value": "[parameters('location')]" },
          "vhdStorageType": { "value": "[variables('vhdStorageType')]" }
        }
      }
    },
    {
      "name": "[variables('nicDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('vnetDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), variables('nicTemplateFilePaths')[parameters('publicIpAddressType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "virtualMachineName": { "value": "[parameters('name')]" },
          "publicIPAddressName": { "value": "[variables('publicIPName')]" },
          "publicIpAddressAllocation": { "value": "[variables('publicIpAddressAllocation')]" },
          "nicName": { "value": "[variables('nicName')]" },
          "subnetRef": { "value": "[variables('subnetRef')]" },
          "privateIpAllocation": { "value": "[parameters('privateIpAddressAllocation')]" }
        }
      }
    },
    {
      "name": "[variables('vnetDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('vnetTemplateFilePaths')[parameters('virtualNetworkType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[variables('vnetName')]" },
          "vnetIpAddressType": { "value": "[parameters('publicIpAddressAllocation')]" },
          "vnetIpAddressPrefix": { "value": "[variables('vnetAddressPrefix')]" },
          "subnetIpAddressPrefix": { "value": "[variables('subnetAddressPrefix')]" },
          "subnetName": { "value": "[variables('subnetName')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    },
    {
      "name": "[variables('vmDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('storageDeploymentName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nicDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nested_templates/vm_', parameters('availabilitySetType'), '_', parameters('authenticationType'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "virtualMachineName": { "value": "[variables('vmName')]" },
          "osPublisher": { "value": "[variables('imagePublishers')[parameters('osType')]]" },
          "osOffer": { "value": "[variables('imageOffers')[parameters('osType')]]" },
          "osSKU": { "value": "[variables('imageSkus')[parameters('osType')]]" },
          "osVersion": { "value": "[variables('imageVersions')[parameters('osType')]]" },
          "size": { "value": "[variables('vmSize')]" },
          "storageType": { "value": "[variables('vhdStorageType')]" },
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "storageContainerName": { "value": "[parameters('storageContainerName')]" },
          "osDiskName": { "value": "[parameters('osDiskName')]" },
          "osDiskUri":  { "value": "[parameters('osDiskUri')]"},
          "sshKeyValue": { "value": "[parameters('sshKeyValue')]" },
          "sshKeyPath": { "value": "[parameters('sshDestKeyPath')]" },
          "availabilitySetId": { "value": "[variables('availSetId')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    }
  ],
  "outputs": {
  }
}
