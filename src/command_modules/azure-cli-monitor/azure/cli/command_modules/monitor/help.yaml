version: 1
content:
- group:
    name: monitor
    summary: Manage the Azure Monitor Service.
- group:
    name: monitor alert
    summary: Manage classic metric-based alert rules.
- command:
    name: monitor alert create
    summary: Create a classic metric-based alert rule.
    arguments:
    - name: --action
      summary: Add an action to fire when the alert is triggered.
      description: |
        Usage:   --action TYPE KEY [ARG ...]
        Email:   --action email bob@contoso.com ann@contoso.com
        Webhook: --action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--action` argument.
    - name: --description
      summary: Free-text description of the rule. Defaults to the condition expression.
    - name: --disabled
      summary: Create the rule in a disabled state.
    - name: --condition
      summary: The condition which triggers the rule.
      description: >
        The form of a condition is "METRIC {>,>=,<,<=} THRESHOLD {avg,min,max,total,last} PERIOD".
        Values for METRIC and appropriate THRESHOLD values can be obtained from `az monitor metric` commands,
        and PERIOD is of the form "##h##m##s".
    - name: --email-service-owners
      summary: Email the service owners if an alert is triggered.
    examples:
    - summary: Create a high CPU usage alert on a VM with no actions.
      command: >
        az monitor alert create -n rule1 -g {ResourceGroup} --target {VirtualMachineID} --condition "Percentage CPU > 90 avg 5m"
    - summary: Create a high CPU usage alert on a VM with email and webhook actions.
      command: |
        az monitor alert create -n rule1 -g {ResourceGroup} --target {VirtualMachineID} \
            --condition "Percentage CPU > 90 avg 5m" \
            --action email bob@contoso.com ann@contoso.com --email-service-owners \
            --action webhook https://www.contoso.com/alerts?type=HighCPU \
            --action webhook https://alerts.contoso.com apiKey={APIKey} type=HighCPU
- command:
    name: monitor alert update
    summary: Update a classic metric-based alert rule.
    arguments:
    - name: --description
      summary: Description of the rule.
    - name: --condition
      summary: The condition which triggers the rule.
      description: >
        The form of a condition is "METRIC {>,>=,<,<=} THRESHOLD {avg,min,max,total,last} PERIOD".
        Values for METRIC and appropriate THRESHOLD values can be obtained from `az monitor metric` commands,
        and PERIOD is of the form "##h##m##s".
    - name: --add-action
      summary: Add an action to fire when the alert is triggered.
      description: |
        Usage:   --add-action TYPE KEY [ARG ...]
        Email:   --add-action email bob@contoso.com ann@contoso.com
        Webhook: --add-action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --add-action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--add-action` argument.
    - name: --remove-action
      summary: Remove one or more actions.
      description: |
        Usage:   --remove-action TYPE KEY [KEY ...]
        Email:   --remove-action email bob@contoso.com ann@contoso.com
        Webhook: --remove-action webhook https://contoso.com/alert https://alerts.contoso.com
    - name: --email-service-owners
      summary: Email the service owners if an alert is triggered.
    - name: --metric
      summary: Name of the metric to base the rule on.
      value-sources:
      - link:
          command: az monitor metrics list-definitions
    - name: --operator
      summary: How to compare the metric against the threshold.
    - name: --threshold
      summary: Numeric threshold at which to trigger the alert.
    - name: --aggregation
      summary: Type of aggregation to apply based on --period.
    - name: --period
      summary: >
        Time span over which to apply --aggregation, in nDnHnMnS shorthand or full ISO8601 format.
- command:
    name: monitor alert delete
    summary: Delete an alert rule.
- command:
    name: monitor alert list
    summary: List alert rules in a resource group.
- command:
    name: monitor alert show
    summary: Show an alert rule.
- command:
    name: monitor alert show-incident
    summary: Get the details of an alert rule incident.
- command:
    name: monitor alert list-incidents
    summary: List all incidents for an alert rule.
- group:
    name: monitor metrics
    summary: View Azure resource metrics.
- command:
    name: monitor metrics list
    summary: List the metric values for a resource.
    arguments:
    - name: --aggregation
      summary: The list of aggregation types (space-separated) to retrieve.
      value-sources:
      - link:
          command: az monitor metrics list-definitions
    - name: --interval
      summary: >
        The interval over which to aggregate metrics, in ##h##m format.
    - name: --filter
      summary: A string used to reduce the set of metric data returned. eg. "BlobType eq '*'"
      description: For a full list of filters, see the filter string reference at https://docs.microsoft.com/en-us/rest/api/monitor/metrics/list
    - name: --metadata
      summary: Returns the metadata values instead of metric data
    - name: --dimension
      summary: The list of dimensions (space-separated) the metrics are queried into.
      value-sources:
      - link:
          command: az monitor metrics list-definitions
    - name: --namespace
      summary: Namespace to query metric definitions for.
      value-sources:
      - link:
          command: az monitor metrics list-definitions
    - name: --offset
      summary: >
        Time offset of the query range, in ##d##h format.
      description: >
        Can be used with either --start-time or --end-time. If used with --start-time, then
        the end time will be calculated by adding the offset. If used with --end-time (default), then
        the start time will be calculated by subtracting the offset. If --start-time and --end-time are
        provided, then --offset will be ignored.
    - name: --metrics
      summary: >
        Space-separated list of metric names to retrieve.
      value-sources:
      - link:
          command: az monitor metrics list-definitions
    examples:
    - summary: List a VM's CPU usage for the past hour
      command: >
        az monitor metrics list --resource {ResourceName} --metric "Percentage CPU"
    - summary: List success E2E latency of a storage account and split the data series based on API name
      command: >
        az monitor metrics list --resource {ResourceName} --metric SuccessE2ELatency \
                                --dimension ApiName
    - summary: List success E2E latency of a storage account and split the data series based on both API name and geo type
      command: >
        az monitor metrics list --resource {ResourceName} --metric SuccessE2ELatency \
                                --dimension ApiName GeoType
    - summary: List success E2E latency of a storage account and split the data series based on both API name and geo type using "--filter" parameter
      command: >
        az monitor metrics list --resource {ResourceName} --metric SuccessE2ELatency \
                                --filter "ApiName eq '*' and GeoType eq '*'"
    - summary: List success E2E latency of a storage account and split the data series based on both API name and geo type. Limits the api name to 'DeleteContainer'
      command: >
        az monitor metrics list --resource {ResourceName} --metric SuccessE2ELatency \
                                --filter "ApiName eq 'DeleteContainer' and GeoType eq '*'"
    - summary: List transactions of a storage account per day since 2017-01-01
      command: >
        az monitor metrics list --resource {ResourceName} --metric Transactions \
                                --start-time 2017-01-01T00:00:00Z \
                                --interval PT24H
    - summary: List the metadata values for a storage account under transaction metric's api name dimension since 2017
      command: >
        az monitor metrics list --resource {ResourceName} --metric Transactions \
                                --filter "ApiName eq '*'" \
                                --start-time 2017-01-01T00:00:00Z
- command:
    name: monitor metrics list-definitions
    summary: Lists the metric definitions for the resource.
- group:
    name: monitor metrics alert
    summary: Manage near-realtime metric alert rules.
- command:
    name: monitor metrics alert create
    summary: Create a metric-based alert rule.
    arguments:
    - name: --action
      summary: Add an action group and optional webhook properties to fire when the alert is triggered.
      description: |
        Usage:   --action ACTION_GROUP_NAME_OR_ID [KEY=VAL [KEY=VAL ...]]

        Multiple action groups can be specified by using more than one `--action` argument.
    - name: --disabled
      summary: Create the rule in a disabled state.
    - name: --condition
      summary: The condition which triggers the rule.
      description: |
        Usage:  --conditon {avg,min,max,total} [NAMESPACE.]METRIC {=,!=,>,>=,<,<=} THRESHOLD
                           [where DIMENSION {includes,excludes} VALUE [or VALUE ...]
                           [and   DIMENSION {includes,excludes} VALUE [or VALUE ...] ...]]

        Dimensions can be queried by adding the 'where' keyword and multiple dimensions can be queried by combining them with the 'and' keyword.

        Values for METRIC, DIMENSION and appropriate THRESHOLD values can be obtained from `az monitor metrics list-definition` command.

        Multiple conditons can be specified by using more than one `--condition` argument.
    examples:
    - summary: Create a high CPU usage alert on a VM with no actions.
      command: >
        az monitor metrics alert create -n alert1 -g {ResourceGroup} --scopes {VirtualMachineID} --condition "avg Percentage CPU > 90"
        --description "High CPU"
    - summary: Create a high CPU usage alert on a VM with email and webhook actions.
      command: |
        az monitor metrics alert create -n alert1 -g {ResourceGroup} --scopes {VirtualMachineID} \
            --condition "avg Percentage CPU > 90" --window-size 5m --evaluation-frequency 1m \
            --action {actionGroupId} apiKey={APIKey} type=HighCPU --description "High CPU"
    - summary: Create an alert when a storage account shows a high number of slow transactions, using multi-dimensional filters.
      command: |
        az monitor metrics alert create -g {ResourceGroup} -n alert1 --scopes {StorageAccountId} \
            --description "Storage Slow Transactions" \
            --condition "total transactions > 5 where ResponseType includes Success" \
            --condition "avg SuccessE2ELatency > 250 where ApiName includes GetBlob or PutBlob"
- command:
    name: monitor metrics alert update
    summary: Update a metric-based alert rule.
    arguments:
    - name: --add-condition
      summary: Add a condition which triggers the rule.
      description: |
        Usage:  --add-conditon {avg,min,max,total} [NAMESPACE.]METRIC {=,!=,>,>=,<,<=} THRESHOLD
                               [where DIMENSION {includes,excludes} VALUE [or VALUE ...]
                               [and   DIMENSION {includes,excludes} VALUE [or VALUE ...] ...]]

        Dimensions can be queried by adding the 'where' keyword and multiple dimensions can be queried by combining them with the 'and' keyword.

        Values for METRIC, DIMENSION and appropriate THRESHOLD values can be obtained from `az monitor metrics list-definition` command.

        Multiple conditons can be specified by using more than one `--condition` argument.
    - name: --remove-conditions
      summary: Space-separated list of condition names to remove.
    - name: --add-action
      summary: Add an action group and optional webhook properties to fire when the alert is triggered.
      description: |
        Usage:   --add-action ACTION_GROUP_NAME_OR_ID [KEY=VAL [KEY=VAL ...]]

        Multiple action groups can be specified by using more than one `--action` argument.
    - name: --remove-actions
      summary: Space-separated list of action group names to remove.
- command:
    name: monitor metrics alert delete
    summary: Delete a metrics-based alert rule.
- command:
    name: monitor metrics alert list
    summary: List metric-based alert rules.
- command:
    name: monitor metrics alert show
    summary: Show a metrics-based alert rule.
- group:
    name: monitor log-profiles
    summary: Manage log profiles.
- command:
    name: monitor log-profiles create
    summary: Create a log profile.
    arguments:
    - name: --name
      summary: The name of the log profile.
    - name: --locations
      summary: Space-separated list of regions for which Activity Log events should be stored.
    - name: --categories
      summary: Space-separated categories of the logs. These categories are created as is convenient to the user. Some values are Write, Delete, and/or Action.
    - name: --storage-account-id
      summary: The resource id of the storage account to which you would like to send the Activity Log.
    - name: --service-bus-rule-id
      summary: The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format '{service bus resource ID}/authorizationrules/{key name}'.
    - name: --days
      summary: The number of days for the retention in days. A value of 0 will retain the events indefinitely
    - name: --enabled
      summary: Whether the retention policy is enabled.
- command:
    name: monitor log-profiles update
    summary: Update a log profile.
- group:
    name: monitor diagnostic-settings
    summary: Manage service diagnostic settings.
- group:
    name: monitor diagnostic-settings categories
    summary: Retrieve service diagnostic settings categories.
- command:
    name: monitor diagnostic-settings create
    summary: Create diagnostic settings for the specified resource.
    description: >
      For more information, visit: https://docs.microsoft.com/en-us/rest/api/monitor/diagnosticsettings/createorupdate#metricsettings
    arguments:
    - name: --name
      summary: The name of the diagnostic settings.
    - name: --resource-group
      summary: Name of the resource group for the Log Analytics and Storage Account when the name of the service instead of a full resource ID is given.
    - name: --logs
      summary: JSON encoded list of logs settings. Use '@{file}' to load from a file.
    - name: --metrics
      summary: JSON encoded list of metric settings. Use '@{file}' to load from a file.
    - name: --storage-account
      summary: Name or ID of the storage account to send diagnostic logs to.
    - name: --workspace
      summary: Name or ID of the Log Analytics workspace to send diagnostic logs to.
    - name: --event-hub
      summary: >
        Name or ID an event hub. If none is specified, the default event hub will be selected.
    - name: --event-hub-rule
      summary: Name or ID of the event hub authorization rule.
    examples:
    - summary: Create diagnostic settings with EventHub.
      command: |
        az monitor diagnostic-settings create --resource {ID} -n {name}
           --event-hub-rule {eventHubRuleID} --storage-account {storageAccount}
           --logs '[
             {
               "category": "WorkflowRuntime",
               "enabled": true,
               "retentionPolicy": {
                 "enabled": false,
                 "days": 0
               }
             }
           ]'
           --metrics '[
             {
               "category": "WorkflowRuntime",
               "enabled": true,
               "retentionPolicy": {
                 "enabled": false,
                 "days": 0
               }
             }
           ]'
- command:
    name: monitor diagnostic-settings update
    summary: Update diagnostic settings.
- group:
    name: monitor autoscale
    summary: Manage autoscale settings.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
- command:
    name: monitor autoscale show
    summary: Show autoscale setting details.
- command:
    name: monitor autoscale create
    summary: Create new autoscale settings.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
    arguments:
    - name: --action
      summary: Add an action to fire when a scaling event occurs.
      description: |
        Usage:   --action TYPE KEY [ARG ...]
        Email:   --action email bob@contoso.com ann@contoso.com
        Webhook: --action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--action` argument.
    examples:
    - summary: Create autoscale settings to scale between 2 and 5 instances (3 as default). Email the administrator when scaling occurs.
      command: |
        az monitor autoscale create -g {myrg} --resource {resource-id} --min-count 2 --max-count 5 \
          --count 3 --email-administrator

        az monitor autoscale rule create -g {myrg} --autoscale-name {resource-name} --scale out 1 \
          --condition "Percentage CPU > 75 avg 5m"

        az monitor autoscale rule create -g {myrg} --autoscale-name {resource-name} --scale in 1 \
          --condition "Percentage CPU < 25 avg 5m"
    - summary: Create autoscale settings for exactly 4 instances.
      command: >
        az monitor autoscale create -g {myrg} --resource {resource-id} --count 4
- command:
    name: monitor autoscale update
    summary: Update autoscale settings.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
    arguments:
    - name: --add-action
      summary: Add an action to fire when a scaling event occurs.
      description: |
        Usage:   --add-action TYPE KEY [ARG ...]
        Email:   --add-action email bob@contoso.com ann@contoso.com
        Webhook: --add-action webhook https://www.contoso.com/alert apiKey=value
        Webhook: --add-action webhook https://www.contoso.com/alert?apiKey=value
        Multiple actions can be specified by using more than one `--add-action` argument.
    - name: --remove-action
      summary: Remove one or more actions.
      description: |
        Usage:   --remove-action TYPE KEY [KEY ...]
        Email:   --remove-action email bob@contoso.com ann@contoso.com
        Webhook: --remove-action webhook https://contoso.com/alert https://alerts.contoso.com
    examples:
    - summary: Update autoscale settings to use a fixed 3 instances by default.
      command: |
        az monitor autoscale update -g {myrg} -n {autoscale-name} --count 3
    - summary: Update autoscale settings to remove an email notification.
      command: |
        az monitor autoscale update -g {myrg} -n {autoscale-name} \
          --remove-action email bob@contoso.com
- group:
    name: monitor autoscale profile
    summary: Manage autoscaling profiles.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
- command:
    name: monitor autoscale profile create
    summary: Create a fixed or recurring autoscale profile.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
    arguments:
    - name: --timezone
      summary: Timezone name.
      value-sources:
      - link:
          command: az monitor autoscale profile list-timezones
    - name: --recurrence
      summary: When the profile recurs. If omitted, a fixed (non-recurring) profile is created.
      description: |
        Usage:     --recurrence {week} [ARG ARG ...]
        Weekly:    --recurrence week Sat Sun
    - name: --start
      summary: When the autoscale profile begins. Format depends on the type of profile.
      description: |
        Fixed:  --start yyyy-mm-dd [hh:mm:ss]
        Weekly: [--start hh:mm]
    - name: --end
      summary: When the autoscale profile ends. Format depends on the type of profile.
      description: |
        Fixed:  --end yyyy-mm-dd [hh:mm:ss]
        Weekly: [--end hh:mm]
    examples:
    - summary: Create a fixed date profile, inheriting the default scaling rules but changing the capacity.
      command: |
        az monitor autoscale create -g {myrg} --resource {resource-id} --min-count 2 --count 3 \
          --max-count 5

        az monitor autoscale rule create -g {myrg} --autoscale-name {name} --scale out 1 \
          --condition "Percentage CPU > 75 avg 5m"

        az monitor autoscale rule create -g {myrg} --autoscale-name {name} --scale in 1 \
          --condition "Percentage CPU < 25 avg 5m"

        az monitor autoscale profile create -g {myrg} --autoscale-name {name} -n Christmas \
          --copy-rules default --min-count 3 --count 6 --max-count 10 --start 2018-12-24 \
          --end 2018-12-26 --timezone "Pacific Standard Time"
    - summary: Create a recurring weekend profile, inheriting the default scaling rules but changing the capacity.
      command: |
        az monitor autoscale create -g {myrg} --resource {resource-id} --min-count 2 --count 3 \
          --max-count 5

        az monitor autoscale rule create -g {myrg} --autoscale-name {name} --scale out 1 \
          --condition "Percentage CPU > 75 avg 5m"

        az monitor autoscale rule create -g {myrg} --autoscale-name {name} --scale in 1 \
          --condition "Percentage CPU < 25 avg 5m"

        az monitor autoscale profile create -g {myrg} --autoscale-name {name} -n weeekend \
          --copy-rules default --min-count 1 --count 2 --max-count 2 \
          --recurrence week sat sun --timezone "Pacific Standard Time"
- command:
    name: monitor autoscale profile delete
    summary: Delete an autoscale profile.
- command:
    name: monitor autoscale profile list
    summary: List autoscale profiles.
- command:
    name: monitor autoscale profile list-timezones
    summary: Look up time zone information.
- command:
    name: monitor autoscale profile show
    summary: Show details of an autoscale profile.
- group:
    name: monitor autoscale rule
    summary: Manage autoscale scaling rules.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
- command:
    name: monitor autoscale rule create
    summary: Add a new autoscale rule.
    description: >
      For more information on autoscaling, visit: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-understanding-autoscale-settings
    arguments:
    - name: --condition
      summary: The condition which triggers the scaling action.
      description: >
        The form of a condition is "METRIC {==,!=,>,>=,<,<=} THRESHOLD {avg,min,max,total,count} PERIOD".
        Values for METRIC and appropriate THRESHOLD values can be obtained from the `az monitor metric` command.
        Format of PERIOD is "##h##m##s".
    - name: --scale
      summary: The direction and amount to scale.
      description: |
        Usage:          --scale {to,in,out} VAL[%]
        Fixed Count:    --scale to 5
        In by Count:    --scale in 2
        Out by Percent: --scale out 10%
    - name: --timegrain
      summary: >
        The way metrics are polled across instances.
      description: >
        The form of the timegrain is {avg,min,max,sum} VALUE. Values can be obtained from the `az monitor metric` command.
        Format of VALUE is "##h##m##s".
    examples:
    - summary: Scale to 5 instances when the CPU Percentage across instances is greater than 75 averaged over 10 minutes.
      command: |
        az monitor autoscale rule create -g {myrg} --autoscale-name {myvmss} \
          --scale to 5 --condition "Percentage CPU > 75 avg 10m"
    - summary: Scale up 2 instances when the CPU Percentage across instances is greater than 75 averaged over 5 minutes.
      command: |
        az monitor autoscale rule create -g {myrg} --autoscale-name {myvmss} \
          --scale out 2 --condition "Percentage CPU > 75 avg 5m"
    - summary: Scale down 50% when the CPU Percentage across instances is less than 25 averaged over 15 minutes.
      command: |
        az monitor autoscale rule create -g {myrg} --autoscale-name {myvmss} \
          --scale in 50% --condition "Percentage CPU < 25 avg 15m"
- command:
    name: monitor autoscale rule list
    summary: List autoscale rules for a profile.
- command:
    name: monitor autoscale rule copy
    summary: Copy autoscale rules from one profile to another.
- command:
    name: monitor autoscale rule delete
    summary: Remove autoscale rules from a profile.
- group:
    name: monitor autoscale-settings
    summary: Manage autoscale settings.
- command:
    name: monitor autoscale-settings update
    summary: Updates an autoscale setting.
- group:
    name: monitor activity-log
    summary: Manage activity logs.
- group:
    name: monitor action-group
    summary: Manage action groups
- command:
    name: monitor action-group list
    summary: List action groups under a resource group or the current subscription
    arguments:
    - name: --resource-group
      summary: >
        Name of the resource group under which the action groups are being listed. If it is omitted, all the action groups under
        the current subscription are listed.
- command:
    name: monitor action-group show
    summary: Show the details of an action group
- command:
    name: monitor action-group create
    summary: Create a new action group
    arguments:
    - name: --action
      summary: Add receivers to the action group during the creation
      description: |
        Usage:   --action TYPE NAME [ARG ...]
        Email:   --action email bob bob@contoso.com
        SMS:     --action sms charli 1 5551234567
        Webhook: --action webhook alert_hook https://www.contoso.com/alert
        Multiple actions can be specified by using more than one `--action` argument.
    - name: --short-name
      summary: The short name of the action group
- command:
    name: monitor action-group update
    summary: Update an action group
    arguments:
    - name: --short-name
      summary: Update the group short name of the action group
    - name: --add-action
      summary: Add receivers to the action group
      description: |
        Usage:   --add-action TYPE NAME [ARG ...]
        Email:   --add-action email bob bob@contoso.com
        SMS:     --add-action sms charli 1 5551234567
        Webhook: --add-action https://www.contoso.com/alert
        Multiple actions can be specified by using more than one `--add-action` argument.
    - name: --remove-action
      summary: Remove receivers from the action group. Accept space-separated list of receiver names.
- group:
    name: monitor activity-log alert
    summary: Manage activity log alerts
- command:
    name: monitor activity-log alert list
    summary: List activity log alerts under a resource group or the current subscription.
    arguments:
    - name: --resource-group
      summary: Name of the resource group under which the activity log alerts are being listed. If it is omitted, all the activity log alerts under the current subscription are listed.
- command:
    name: monitor activity-log alert create
    summary: Create a default activity log alert
    description: This command will create a default activity log with one condition which compares if the activities logs 'category' field equals to 'ServiceHealth'. The newly created activity log alert does not have any action groups attached to it.
    arguments:
    - name: --name
      summary: Name of the activity log alerts
    - name: --scope
      summary: A list of strings that will be used as prefixes.
      description: >
        The alert will only apply to activity logs with resourceIDs that fall under one of these prefixes.
        If not provided, the path to the resource group will be used.
    - name: --disable
      summary: Disable the activity log alert after it is created.
    - name: --description
      summary: A description of this activity log alert
    - name: --condition
      summary: The condition that will cause the alert to activate. The format is FIELD=VALUE[ and FIELD=VALUE...].
      description: >
        The possible values for the field are 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup',
        'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
    - name: --action-group
      summary: >
        Add an action group. Accepts space-separated action group identifiers. The identifier can be the action group's name
        or its resource ID.
    - name: --webhook-properties
      summary: >
        Space-separated webhook properties in 'key[=value]' format. These properties are associated with the action groups
        added in this command.
      description: >
        For any webhook receiver in these action group, this data is appended to the webhook payload. To attach different webhook
        properties to different action groups, add the action groups in separate update-action commands.
    examples:
    - summary: Create an alert with default settings.
      command: >
        az monitor activity-log alert create -n {AlertName} -g {ResourceGroup}
    - summary: Create an alert with condition about error level service health log.
      command: >
        az monitor activity-log alert create -n {AlertName} -g {ResourceGroup} \
          --condition category=ServiceHealth and level=Error
    - summary: Create an alert with an action group and specify webhook properties.
      command: >
        az monitor activity-log alert create -n {AlertName} -g {ResourceGroup} \
          -a /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/microsoft.insights/actionGroups/{ActionGroup} \
          -w usage=test owner=jane
    - summary: Create an alert which is initially disabled.
      command: >
        az monitor activity-log alert create -n {AlertName} -g {ResourceGroup} --disable
- command:
    name: monitor activity-log alert update
    summary: Update the details of this activity log alert
    arguments:
    - name: --description
      summary: A description of this activity log alert.
    - name: --condition
      summary: The conditional expression that will cause the alert to activate. The format is FIELD=VALUE[ and FIELD=VALUE...].
      description: >
        The possible values for the field are 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup',
        'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'.
    examples:
    - summary: Update the condition
      command: >
        az monitor activity-log alert update -n {AlertName} -g {ResourceGroup} \
          --condition category=ServiceHealth and level=Error
    - summary: Disable an alert
      command: >
        az monitor activity-log alert update -n {AlertName} -g {ResourceGroup} --enable false
- group:
    name: monitor activity-log alert action-group
    summary: Manage action groups for activity log alerts
- command:
    name: monitor activity-log alert action-group add
    summary: Add action groups to this activity log alert. It can also be used to overwrite existing webhook properties of particular action groups.
    arguments:
    - name: --name
      summary: Name of the activity log alerts
    - name: --action-group
      summary: The names or the resource ids of the action groups to be added.
    - name: --reset
      summary: Remove all the existing action groups before add new conditions.
    - name: --webhook-properties
      summary: >
        Space-separated webhook properties in 'key[=value]' format. These properties will be associated with
        the action groups added in this command.
      description: >
        For any webhook receiver in these action group, these data are appended to the webhook payload.
        To attach different webhook properties to different action groups, add the action groups in separate update-action commands.
    - name: --strict
      summary: Fails the command if an action group to be added will change existing webhook properties.
    examples:
    - summary: Add an action group and specify webhook properties.
      command: |
        az monitor activity-log alert action-group add -n {AlertName} -g {ResourceGroup} \
          --action /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/microsoft.insights/actionGroups/{ActionGroup} \
          --webhook-properties usage=test owner=jane
    - summary: Overwite an existing action group's webhook properties.
      command: |
        az monitor activity-log alert action-group add -n {AlertName} -g {ResourceGroup} \
          -a /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/microsoft.insights/actionGroups/{ActionGroup} \
          --webhook-properties usage=test owner=john
    - summary: Remove webhook properties from an existing action group.
      command: |
        az monitor activity-log alert action-group add -n {AlertName} -g {ResourceGroup} \
          -a /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/microsoft.insights/actionGroups/{ActionGroup}
    - summary: Add new action groups but prevent the command from accidently overwrite existing webhook properties
      command: |
        az monitor activity-log alert action-group add -n {AlertName} -g {ResourceGroup} --strict \
          --action-group {ResourceIDList}
- command:
    name: monitor activity-log alert action-group remove
    summary: Remove action groups from this activity log alert
    arguments:
    - name: --name
      summary: Name of the activity log alerts
    - name: --action-group
      summary: The names or the resource ids of the action groups to be added.
- group:
    name: monitor activity-log alert scope
    summary: Manage scopes for activity log alerts
- command:
    name: monitor activity-log alert scope add
    summary: Add scopes to this activity log alert.
    arguments:
    - name: --name
      summary: Name of the activity log alerts
    - name: --scope
      summary: The scopes to add
    - name: --reset
      summary: Remove all the existing scopes before add new scopes.
- command:
    name: monitor activity-log alert scope remove
    summary: Removes scopes from this activity log alert.
    arguments:
    - name: --name
      summary: Name of the activity log alerts
    - name: --scope
      summary: The scopes to remove
- command:
    name: monitor activity-log list
    summary: List and query activity log events.
    arguments:
    - name: --correlation-id
      summary: Correlation ID to query.
    - name: --resource-id
      summary: ARM ID of a resource.
    - name: --namespace
      summary: Resource provider namespace.
    - name: --caller
      summary: Caller to query for, such as an e-mail address or service principal ID.
    - name: --status
      summary: >
        Status to query for (ex: Failed)
    - name: --max-events
      summary: Maximum number of records to return.
    - name: --select
      summary: Space-separated list of properties to return.
    - name: --offset
      summary: >
        Time offset of the query range, in ##d##h format.
      description: >
        Can be used with either --start-time or --end-time. If used with --start-time, then
        the end time will be calculated by adding the offset. If used with --end-time (default), then
        the start time will be calculated by subtracting the offset. If --start-time and --end-time are
        provided, then --offset will be ignored.
    examples:
    - summary: List all events from July 1st, looking forward one week.
      command: az monitor activity-log list --start-time 2018-07-01 --offset 7d
    - summary: List events within the past six hours based on a correlation ID.
      command: az monitor activity-log list --correlation-id b5eac9d2-e829-4c9a-9efb-586d19417c5f
    - summary: List events within the past hour based on resource group.
      command: az monitor activity-log list -g {ResourceGroup} --offset 1h
- command:
    name: monitor activity-log list-categories
    summary: List the event categories of activity logs.
