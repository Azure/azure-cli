# Some content of this file is generated.

trigger:
  branches:
    exclude:
    - '*'

schedules:
- cron: "0 18 * * 5"
  displayName: Weekly Friday test
  branches:
    include:
    - CLITest
  always: true

jobs:
- job: LiveTestPython38
  displayName: Live Test Python 3.8
  timeoutInMinutes: 9999
  strategy:
    maxParallel: 20
    matrix:
    
      maps:
        Target: maps
    
      resource:
        Target: resource
    
      network:
        Target: network
    
      appconfig:
        Target: appconfig
    
      sqlvm:
        Target: sqlvm
    
      reservations:
        Target: reservations
    
      acs:
        Target: acs
    
      cosmosdb:
        Target: cosmosdb
    
      interactive:
        Target: interactive
    
      backup:
        Target: backup
    
      apim:
        Target: apim
    
      deploymentmanager:
        Target: deploymentmanager
    
      extension:
        Target: extension
    
      configure:
        Target: configure
    
      consumption:
        Target: consumption
    
      hdinsight:
        Target: hdinsight
    
      dms:
        Target: dms
    
      feedback:
        Target: feedback
    
      relay:
        Target: relay
    
      monitor:
        Target: monitor
    
      dls:
        Target: dls
    
      sql:
        Target: sql
    
      natgateway:
        Target: natgateway
    
      aro:
        Target: aro
    
      acr:
        Target: acr
    
      iotcentral:
        Target: iotcentral
    
      servicefabric:
        Target: servicefabric
    
      appservice:
        Target: appservice
    
      privatedns:
        Target: privatedns
    
      eventgrid:
        Target: eventgrid
    
      security:
        Target: security
    
      redis:
        Target: redis
    
      policyinsights:
        Target: policyinsights
    
      netappfiles:
        Target: netappfiles
    
      eventhubs:
        Target: eventhubs
    
      dla:
        Target: dla
    
      servicebus:
        Target: servicebus
    
      rdbms:
        Target: rdbms
    
      ams:
        Target: ams
    
      role:
        Target: role
    
      managedservices:
        Target: managedservices
    
      signalr:
        Target: signalr
    
      cdn:
        Target: cdn
    
      kusto:
        Target: kusto
    
      advisor:
        Target: advisor
    
      billing:
        Target: billing
    
      iot:
        Target: iot
    
      profile:
        Target: profile
    
      container:
        Target: container
    
      batchai:
        Target: batchai
    
      cloud:
        Target: cloud
    
      batch:
        Target: batch
    
      keyvault:
        Target: keyvault
    
      cognitiveservices:
        Target: cognitiveservices
    
      lab:
        Target: lab
    
      find:
        Target: find
    
      botservice:
        Target: botservice
    
      storage:
        Target: storage
    
      vm:
        Target: vm
    
      search:
        Target: search
    
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true
        architecture: 'x64'
    - bash: |
        if [[ "$(USER_TARGET)" =~ "$(Target)" || "$(USER_TARGET)" == "" ]]; then
          echo "Match!"
        else
          echo "Not match!"
          exit
        fi
        cd ..
        pwd
        ls
        git clone -b $(USER_BRANCH) $(USER_REPO)
        #git clone https://github.com/Azure/azure-cli-extensions.git
        python -m venv env
        source env/bin/activate
        pip install azdev
        azdev setup -c azure-cli
        az login --service-principal --username $(APP_ID) --password $(PASSWORD) --tenant $(TENANT_ID)
        azdev test $(Target) $(USER_LIVE) -a "-n 8" --no-exitfirst
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '/home/vsts/.azdev/env_config/home/vsts/work/1/env/test_results.xml'
        testRunTitle: 'Azure CLI live test results of $(Target)'
        # mergeTestResults: true
        # testResultsFormat: 'JUnit'

- job: SendEmail
  displayName: Send email
  dependsOn: LiveTestPython38
  condition: succeededOrFailed()
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true
        architecture: 'x64'
    - bash: |
        pwd
        # Send notification when target is all.
        if [[ "$(USER_TARGET)" == "" ]]; then
          commit_id=`git ls-remote https://github.com/Azure/azure-cli.git HEAD`
          pip install sendgrid
          python /home/vsts/work/1/s/scripts/live_test/sendemail.py $(SENDGRID_KEY) $(Build.BuildId) $(USER_REPO) $(USER_BRANCH)
        fi