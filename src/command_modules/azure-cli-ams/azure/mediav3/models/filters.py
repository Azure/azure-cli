# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Filters(Model):
    """A class to encapsulate all the filters for a source.

    :param pad: Gets or sets a value indicating whether to pad the source to
     align jagged-edge audio and video.
    :type pad: bool
    :param deinterlace: Gets or sets the default de-interlacing settings.
    :type deinterlace: ~accounts.models.Deinterlace
    :param rotation: Gets or sets the rotation if any to be applied to the
     video. Possible values include: 'Auto', 'None', 'Rotate0', 'Rotate90',
     'Rotate180', 'Rotate270'
    :type rotation: str or ~accounts.models.Rotation
    :param adjust_loudness: Gets or sets the loudness correction mode.
     Possible values include: 'None', 'Auto', 'Manual'
    :type adjust_loudness: str or ~accounts.models.LoudnessAdjustment
    :param loudness_in_db: Gets or sets the Loudness specified in decibels
     (Applicable for the case of AdjustLoudness.Manual
    :type loudness_in_db: float
    :param flip: Gets or sets whether the video needs to be flipped. Possible
     values include: 'None', 'Horizontal', 'Vertical'
    :type flip: str or ~accounts.models.Flip
    :param crop: Gets or sets the co-ordinates of the video to be cropped.
    :type crop: ~accounts.models.Rectangle
    :param video_overlay: Gets or sets the details of the video overlay to
     apply if any.
    :type video_overlay: ~accounts.models.VideoOverlay
    :param audio_overlay: Gets or sets the details of the audio overlay to
     apply if any.
    :type audio_overlay: ~accounts.models.AudioOverlay
    """

    _attribute_map = {
        'pad': {'key': 'pad', 'type': 'bool'},
        'deinterlace': {'key': 'deinterlace', 'type': 'Deinterlace'},
        'rotation': {'key': 'rotation', 'type': 'Rotation'},
        'adjust_loudness': {'key': 'adjustLoudness', 'type': 'LoudnessAdjustment'},
        'loudness_in_db': {'key': 'loudnessInDB', 'type': 'float'},
        'flip': {'key': 'flip', 'type': 'Flip'},
        'crop': {'key': 'crop', 'type': 'Rectangle'},
        'video_overlay': {'key': 'videoOverlay', 'type': 'VideoOverlay'},
        'audio_overlay': {'key': 'audioOverlay', 'type': 'AudioOverlay'},
    }

    def __init__(self, pad=None, deinterlace=None, rotation=None, adjust_loudness=None, loudness_in_db=None, flip=None, crop=None, video_overlay=None, audio_overlay=None):
        super(Filters, self).__init__()
        self.pad = pad
        self.deinterlace = deinterlace
        self.rotation = rotation
        self.adjust_loudness = adjust_loudness
        self.loudness_in_db = loudness_in_db
        self.flip = flip
        self.crop = crop
        self.video_overlay = video_overlay
        self.audio_overlay = audio_overlay
