# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .audio import Audio


class DDPlusAudio(Audio):
    """An object to represent EAC3 audio encoding settings.

    :param label: Gets or sets the codec label.
    :type label: str
    :param odatatype: Constant filled by server.
    :type odatatype: str
    :param channels: Gets or sets number of channels in the Audio.
    :type channels: int
    :param sampling_rate: Gets or sets the sampling rate to use for encoding.
    :type sampling_rate: int
    :param bitrate: Gets or sets the bitrate of the encoded audio.
    :type bitrate: int
    :param lf_eon: Gets or sets a value indicating whether "LFE" is on.
    :type lf_eon: bool
    :param ac_mode: Gets or sets the AC mode. Possible values include:
     'ACMOD20', 'ACMOD32'
    :type ac_mode: str or ~accounts.models.DDPlusACMode
    """

    _validation = {
        'odatatype': {'required': True},
        'lf_eon': {'required': True},
        'ac_mode': {'required': True},
    }

    _attribute_map = {
        'label': {'key': 'label', 'type': 'str'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
        'channels': {'key': 'channels', 'type': 'int'},
        'sampling_rate': {'key': 'samplingRate', 'type': 'int'},
        'bitrate': {'key': 'bitrate', 'type': 'int'},
        'lf_eon': {'key': 'lfEon', 'type': 'bool'},
        'ac_mode': {'key': 'acMode', 'type': 'DDPlusACMode'},
    }

    def __init__(self, lf_eon, ac_mode, label=None, channels=None, sampling_rate=None, bitrate=None):
        super(DDPlusAudio, self).__init__(label=label, channels=channels, sampling_rate=sampling_rate, bitrate=bitrate)
        self.lf_eon = lf_eon
        self.ac_mode = ac_mode
        self.odatatype = '#Microsoft.Media.DDPlusAudio'
