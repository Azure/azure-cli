version: 1
content:
- group:
    name: sql
    summary: Manage Azure SQL Databases and Data Warehouses.
- group:
    name: sql db
    summary: Manage databases.
- command:
    name: sql db copy
    summary: Create a copy of a database.
    description: A full list of performance level options can be seen by executing `az sql db list-editions -a -o table -l LOCATION`. The copy destination database must have the same edition as the source database, but you can change the edition after the copy has completed.
    examples:
    - summary: Create a database with performance level S0 as a copy of an existing Standard database.
      command: az sql db copy -g mygroup -s myserver -n originalDb --dest-name newDb --service-objective S0
    - summary: Create a database with GeneralPurpose edition, Gen4 hardware, and 1 vcore as a copy of an existing GeneralPurpose database.
      command: az sql db copy -g mygroup -s myserver -n originalDb --dest-name newDb -f Gen4 -c 1
- command:
    name: sql db create
    summary: Create a database.
    description: A full list of performance level options can be seen by executing `az sql db list-editions -a -o table -l LOCATION`.
    examples:
    - summary: Create a Standard S0 database.
      command: az sql db create -g mygroup -s myserver -n mydb --service-objective S0
    - summary: Create a database with GeneralPurpose edition, Gen4 hardware and 1 vcore
      command: az sql db create -g mygroup -s myserver -n mydb -e GeneralPurpose -f Gen4 -c 1
    - summary: Create a database with zone redundancy enabled
      command: az sql db create -g mygroup -s myserver -n mydb -z
    - summary: Create a database with zone redundancy explicitly disabled
      command: az sql db create -g mygroup -s myserver -n mydb -z false
- command:
    name: sql db delete
    summary: Delete a database.
- command:
    name: sql db list
    summary: List databases a server or elastic pool.
- command:
    name: sql db list-editions
    summary: Show database editions available for the currently active subscription.
    description: Includes available service objectives and storage limits. In order to reduce verbosity, settings to intentionally reduce storage limits are hidden by default.
    examples:
    - summary: Show all database editions in a location.
      command: az sql db list-editions -l westus
    - summary: Show all available database service objectives for Standard edition.
      command: az sql db list-editions -l westus --edition Standard
    - summary: Show available max database sizes for P1 service objective
      command: az sql db list-editions -l westus --service-objective P1 --show-details max-size
- command:
    name: sql db rename
    summary: Rename a database.
- command:
    name: sql db show
    summary: Get the details for a database.
- command:
    name: sql db show-connection-string
    summary: Generates a connection string to a database.
    examples:
    - summary: Generate connection string for ado.net
      command: az sql db show-connection-string -s myserver -n mydb -c ado.net
- command:
    name: sql db update
    summary: Update a database.
    examples:
    - summary: Update database with zone redundancy enabled
      command: az sql db update -g mygroup -s myserver -n mypool -z
    - summary: Update database with zone redundancy explicitly disabled
      command: az sql db update -g mygroup -s myserver -n mypool -z false
- group:
    name: sql db audit-policy
    summary: Manage a database's auditing policy.
- group:
    name: sql server ad-admin
    summary: Manage a server's Active Directory administrator.
- command:
    name: sql server ad-admin create
    summary: Create a new server Active Directory administrator.
- command:
    name: sql server ad-admin update
    summary: Update an existing server Active Directory administrator.
- command:
    name: sql db audit-policy update
    summary: Update a database's auditing policy.
    description: If the policy is being enabled, `--storage-account` or both `--storage-endpoint` and `--storage-key` must be specified.
    examples:
    - summary: Enable by storage account name.
      command: az sql db audit-policy update -g mygroup -s myserver -n mydb --state Enabled --storage-account mystorage
    - summary: Enable by storage endpoint and key.
      command: |
        az sql db audit-policy update -g mygroup -s myserver -n mydb --state Enabled \
            --storage-endpoint https://mystorage.blob.core.windows.net --storage-key MYKEY==
    - summary: Set the list of audit actions.
      command: |
        az sql db audit-policy update -g mygroup -s myserver -n mydb \
            --actions FAILED_DATABASE_AUTHENTICATION_GROUP 'UPDATE on database::mydb by public'
    - summary: Add an audit action.
      command: |
        az sql db audit-policy update -g mygroup -s myserver -n mydb \
            --add auditActionsAndGroups FAILED_DATABASE_AUTHENTICATION_GROUP
    - summary: Remove an audit action by list index.
      command: az sql db audit-policy update -g mygroup -s myserver -n mydb --remove auditActionsAndGroups 0
    - summary: Disable an auditing policy.
      command: az sql db audit-policy update -g mygroup -s myserver -n mydb --state Disabled
- group:
    name: sql db op
    summary: Manage operations on a database.
- command:
    name: sql db op cancel
    examples:
    - summary: Cancel an operation.
      command: az sql db op cancel -g mygroup -s myserver -d mydb -n d2896db1-2ba8-4c84-bac1-387c430cce40
- group:
    name: sql db replica
    summary: Manage replication between databases.
- command:
    name: sql db replica create
    summary: Create a database as a readable secondary replica of an existing database.
    description: A full list of performance level options can be seen by executing `az sql db list-editions -a -o table -l LOCATION`. The secondary database must have the same edition as the primary database.
    examples:
    - summary: Create a database with performance level S0 as a secondary replica of an existing Standard database.
      command: az sql db replica create -g mygroup -s myserver -n originalDb --partner-server newDb --service-objective S0
    - summary: Create a database with GeneralPurpose edition, Gen4 hardware, and 1 vcore as a secondary replica of an existing GeneralPurpose database
      command: az sql db replica create -g mygroup -s myserver -n originalDb --partner-server newDb -f Gen4 -c 1
- command:
    name: sql db replica set-primary
    summary: Set the primary replica database by failing over from the current primary replica database.
- command:
    name: sql db replica list-links
    summary: List the replicas of a database and their replication status.
- command:
    name: sql db replica delete-link
    summary: Permanently stop data replication between two database replicas.
- command:
    name: sql db export
    summary: Export a database to a bacpac.
    examples:
    - summary: Get an SAS key for use in export operation.
      command: |
        az storage blob generate-sas --account-name myAccountName -c myContainer -n myBacpac.bacpac \
            --permissions w --expiry 2018-01-01T00:00:00Z
    - summary: Export bacpac using an SAS key.
      command: |
        az sql db export -s myserver -n mydatabase -g mygroup -p password -u login \
            --storage-key "?sr=b&sp=rw&se=2018-01-01T00%3A00%3A00Z&sig=mysignature&sv=2015-07-08" \
            --storage-key-type SharedAccessKey \
            --storage-uri https://mystorageaccount.blob.core.windows.net/bacpacs/myBacpac.bacpac
    - summary: Export bacpac using a storage account key.
      command: |
        az sql db export -s myserver -n mydatabase -g mygroup -p password -u login \
            --storage-key MYKEY== --storage-key-type StorageAccessKey \
            --storage-uri https://mystorageaccount.blob.core.windows.net/bacpacs/myBacpac.bacpac
- command:
    name: sql db import
    summary: Imports a bacpac into an existing database.
    examples:
    - summary: Get an SAS key for use in import operation.
      command: |
        az storage blob generate-sas --account-name myAccountName -c myContainer -n myBacpac.bacpac \
            --permissions r --expiry 2018-01-01T00:00:00Z
    - summary: Import bacpac into an existing database using an SAS key.
      command: |
        az sql db import -s myserver -n mydatabase -g mygroup -p password -u login \
            --storage-key "?sr=b&sp=rw&se=2018-01-01T00%3A00%3A00Z&sig=mysignature&sv=2015-07-08" \
            --storage-key-type SharedAccessKey \
            --storage-uri https://mystorageaccount.blob.core.windows.net/bacpacs/myBacpac.bacpac
    - summary: Import bacpac into an existing database using a storage account key.
      command: |
        az sql db import -s myserver -n mydatabase -g mygroup -p password -u login --storage-key MYKEY== \
            --storage-key-type StorageAccessKey \
            --storage-uri https://mystorageaccount.blob.core.windows.net/bacpacs/myBacpac.bacpac
- command:
    name: sql db restore
    summary: Create a new database by restoring from a backup.
- group:
    name: sql db threat-policy
    summary: Manage a database's threat detection policies.
- command:
    name: sql db threat-policy update
    summary: Update a database's threat detection policy.
    description: If the policy is being enabled, storage_account or both storage_endpoint and storage_account_access_key must be specified.
    examples:
    - summary: Enable by storage account name.
      command: |
        az sql db threat-policy update -g mygroup -s myserver -n mydb \
            --state Enabled --storage-account mystorage
    - summary: Enable by storage endpoint and key.
      command: |
        az sql db threat-policy update -g mygroup -s myserver -n mydb \
            --state Enabled --storage-endpoint https://mystorage.blob.core.windows.net \
            --storage-key MYKEY==
    - summary: Disable a subset of alert types.
      command: |
        az sql db threat-policy update -g mygroup -s myserver -n mydb \
            --disabled-alerts Sql_Injection_Vulnerability Access_Anomaly
    - summary: Configure email recipients for a policy.
      command: |
        az sql db threat-policy update -g mygroup -s myserver -n mydb \
            --email-addresses me@examlee.com you@example.com \
            --email-account-admins Enabled
    - summary: Disable a threat policy.
      command: az sql db threat-policy update -g mygroup -s myserver -n mydb --state Disabled
- group:
    name: sql db tde
    summary: Manage a database's transparent data encryption.
- command:
    name: sql db tde set
    summary: Sets a database's transparent data encryption configuration.
- group:
    name: sql dw
    summary: Manage data warehouses.
- command:
    name: sql dw create
    summary: Create a data warehouse.
- command:
    name: sql dw delete
    summary: Delete a data warehouse.
- command:
    name: sql dw list
    summary: List data warehouses for a server.
- command:
    name: sql dw show
    summary: Get the details for a data warehouse.
- command:
    name: sql dw update
    summary: Update a data warehouse.
- group:
    name: sql elastic-pool
    summary: Manage elastic pools.
- command:
    name: sql elastic-pool create
    summary: Create an elastic pool.
    examples:
    - summary: Create elastic pool with zone redundancy enabled
      command: az sql elastic-pool create -g mygroup -s myserver -n mypool -z
    - summary: Create elastic pool with zone redundancy explicitly disabled
      command: az sql elastic-pool create -g mygroup -s myserver -n mypool -z false
    - summary: Create a Standard 100 DTU elastic pool.
      command: az sql elastic-pool create -g mygroup -s myserver -n mydb -e Standard -c 100
    - summary: Create an elastic pool with GeneralPurpose edition, Gen4 hardware and 1 vcore.
      command: az sql elastic-pool create -g mygroup -s myserver -n mydb -e GeneralPurpose -f Gen4 -c 1
- command:
    name: sql elastic-pool list-editions
    summary: List elastic pool editions available for the active subscription.
    description: Also includes available pool DTU settings, storage limits, and per database settings. In order to reduce verbosity, additional storage limits and per database settings are hidden by default.
    examples:
    - summary: Show all elastic pool editions and pool DTU limits in the West US region.
      command: az sql elastic-pool list-editions -l westus
    - summary: Show all pool DTU limits for Standard edition in the West US region.
      command: az sql elastic-pool list-editions -l westus --edition Standard
    - summary: Show available max sizes for elastic pools with at least 100 DTUs in the West US region.
      command: az sql elastic-pool list-editions -l westus --dtu 100 --show-details max-size
    - summary: Show available per database settings for Standard 100 DTU elastic pools in the West US region.
      command: az sql elastic-pool list-editions -l westus --edition Standard --dtu 100 --show-details db-min-dtu db-max-dtu db-max-size
- command:
    name: sql elastic-pool update
    summary: Update an elastic pool.
    examples:
    - summary: Update elastic pool with zone redundancy enabled
      command: az sql elastic-pool update -g mygroup -s myserver -n mypool -z
    - summary: Update elastic pool with zone redundancy explicitly disabled
      command: az sql elastic-pool update -g mygroup -s myserver -n mypool -z false
- group:
    name: sql elastic-pool op
    summary: Manage operations on an elastic pool.
- command:
    name: sql elastic-pool op cancel
    examples:
    - summary: Cancel an operation.
      command: az sql elastic-pool op cancel -g mygroup -s myserver --elastic-pool myelasticpool -n d2896db1-2ba8-4c84-bac1-387c430cce40
- group:
    name: sql failover-group
    summary: Manage SQL Failover Groups.
- command:
    name: sql failover-group create
    summary: Creates a failover group.
- command:
    name: sql failover-group update
    summary: Updates the failover group.
- command:
    name: sql failover-group set-primary
    summary: Set the primary of the failover group by failing over all databases from the current primary server.
- group:
    name: sql server
    summary: Manage SQL servers.
- command:
    name: sql server create
    summary: Create a server.
    examples:
    - summary: Create a server.
      command: az sql server create -l westus -g mygroup -n myserver -u myadminuser -p myadminpassword
- command:
    name: sql server list
    summary: List available servers.
    examples:
    - summary: List all servers in the current subscription.
      command: az sql server list
    - summary: List all servers in a resource group.
      command: az sql server list -g mygroup
- command:
    name: sql server update
    summary: Update a server.
- group:
    name: sql server conn-policy
    summary: Manage a server's connection policy.
- command:
    name: sql server conn-policy show
    summary: Gets a server's secure connection policy.
- command:
    name: sql server conn-policy update
    summary: Updates a server's secure connection policy.
- group:
    name: sql server dns-alias
    summary: Manage a server's DNS aliases.
- command:
    name: sql server dns-alias set
    summary: Sets a server to which DNS alias should point
- group:
    name: sql server firewall-rule
    summary: Manage a server's firewall rules.
- command:
    name: sql server firewall-rule create
    summary: Create a firewall rule.
    examples:
    - summary: Create a firewall rule
      command: az sql server firewall-rule create -g mygroup -s myserver -n myrule --start-ip-address 1.2.3.4 --end-ip-address 5.6.7.8
    - summary: Create a firewall rule that allows access from Azure services
      command: az sql server firewall-rule create -g mygroup -s myserver -n myrule --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0
- command:
    name: sql server firewall-rule update
    summary: Update a firewall rule.
    examples:
    - summary: Update a firewall rule
      command: az sql server firewall-rule update -g mygroup -s myserver -n myrule --start-ip-address 9.8.7.6 --end-ip-address 5.4.3.2
- command:
    name: sql server firewall-rule show
    summary: Shows the details for a firewall rule.
    examples:
    - summary: Show a firewall rule
      command: az sql server firewall-rule show -g mygroup -s myserver -n myrule
- command:
    name: sql server firewall-rule list
    summary: List a server's firewall rules.
    examples:
    - summary: List a server's firewall rules
      command: az sql server firewall-rule list -g mygroup -s myserver
- group:
    name: sql server key
    summary: Manage a server's keys.
- command:
    name: sql server key create
    summary: Creates a server key.
- command:
    name: sql server key show
    summary: Shows a server key.
- command:
    name: sql server key delete
    summary: Deletes a server key.
- group:
    name: sql server tde-key
    summary: Manage a server's encryption protector.
- command:
    name: sql server tde-key set
    summary: Sets the server's encryption protector.
- group:
    name: sql server vnet-rule
    summary: Manage a server's virtual network rules.
- command:
    name: sql server vnet-rule update
    summary: Update a virtual network rule.
- command:
    name: sql server vnet-rule create
    summary: Create a virtual network rule to allows access to an Azure SQL server.
    examples:
    - summary: Create a vnet rule by providing the subnet id.
      command: |
        az sql server vnet-rule create --server MyAzureSqlServer --name MyVNetRule \
          -g MyResourceGroup --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/{VNETName}/subnets/{SubnetName}
    - summary: Create a vnet rule by providing the vnet and subnet name. The subnet id is created by taking the resource group name and subscription id of the SQL server.
      command: |
        az sql server vnet-rule create --server MyAzureSqlServer --name MyVNetRule \
            -g MyResourceGroup --subnet subnetName --vnet-name vnetName
- group:
    name: sql mi
    summary: Manage SQL managed instances.
- command:
    name: sql mi create
    summary: Create a managed instance.
    examples:
    - summary: Create a managed instance with specified parameters and with identity
      command: az sql mi create -g mygroup -n myinstance -l mylocation -i -u myusername -p mypassword --license-type LicenseIncluded --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/{VNETName}/subnets/{SubnetName} --capacity 8 --storage 32GB --edition GeneralPurpose --family Gen4
    - summary: Create a managed instance with minimal set of parameters
      command: az sql mi create -g mygroup -n myinstance -l mylocation -i -u myusername -p mypassword --subnet /subscriptions/{SubID}/resourceGroups/{ResourceGroup}/providers/Microsoft.Network/virtualNetworks/{VNETName}/subnets/{SubnetName}
- command:
    name: sql mi list
    summary: List available managed instances.
    examples:
    - summary: List all managed instances in the current subscription.
      command: az sql mi list
    - summary: List all managed instances in a resource group.
      command: az sql mi list -g mygroup
- command:
    name: sql mi show
    summary: Get the details for a managed instance.
    examples:
    - summary: Get the details for a managed instance
      command: az sql mi show -g mygroup -n myinstance
- command:
    name: sql mi update
    summary: Update a managed instance.
    examples:
    - summary: Updates a mi with specified parameters and with identity
      command: az sql mi update -g mygroup -n myinstance -i -p mypassword --license-type mylicensetype --capacity vcorecapacity --storage storagesize
- command:
    name: sql mi delete
    summary: Delete a managed instance.
    examples:
    - summary: Delete a managed instance
      command: az sql mi delete -g mygroup -n myinstance --yes
- group:
    name: sql midb
    summary: Manage SQL managed instance databases.
- command:
    name: sql midb create
    summary: Create a managed database.
    examples:
    - summary: Create a managed database with specified collation
      command: az sql midb create -g mygroup --mi myinstance -n mymanageddb --collation Latin1_General_100_CS_AS_SC
- command:
    name: sql midb list
    summary: List maanged databases on a managed instance.
    examples:
    - summary: List managed databases on a managed instance
      command: az sql midb list -g mygroup --mi myinstance
- command:
    name: sql midb show
    summary: Get the details for a managed database.
    examples:
    - summary: Get the details for a managed database
      command: az sql midb show -g mygroup --mi myinstance -n mymanageddb
- command:
    name: sql midb restore
    summary: Restore a managed database.
    examples:
    - summary: Restore a managed database using Point in time restore
      command: az sql midb restore -g mygroup --mi myinstance -n mymanageddb --dest-name targetmidb --time "2018-05-20T05:34:22"
- command:
    name: sql midb delete
    summary: Delete a managed database.
    examples:
    - summary: Delete a managed database
      command: az sql midb delete -g mygroup --mi myinstance -n mymanageddb --yes
