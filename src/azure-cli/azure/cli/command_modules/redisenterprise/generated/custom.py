# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from azure.cli.core.util import sdk_no_wait


def redisenterprise_operation_status_show(client,
                                          location,
                                          operation_id):
    return client.get(location=location,
                      operation_id=operation_id)


def redisenterprise_list(client,
                         resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list()


def redisenterprise_show(client,
                         resource_group_name,
                         cluster_name):
    return client.get(resource_group_name=resource_group_name,
                      cluster_name=cluster_name)


def redisenterprise_create(client,
                           resource_group_name,
                           cluster_name,
                           location,
                           sku,
                           tags=None,
                           capacity=None,
                           zones=None,
                           minimum_tls_version=None,
                           no_wait=False):
    parameters = {}
    parameters['tags'] = tags
    parameters['location'] = location
    parameters['sku'] = {}
    parameters['sku']['name'] = sku
    parameters['sku']['capacity'] = capacity
    parameters['zones'] = zones
    parameters['minimum_tls_version'] = minimum_tls_version
    return sdk_no_wait(no_wait,
                       client.begin_create,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       parameters=parameters)


def redisenterprise_update(client,
                           resource_group_name,
                           cluster_name,
                           sku=None,
                           capacity=None,
                           tags=None,
                           minimum_tls_version=None,
                           no_wait=False):
    parameters = {}
    parameters['sku'] = {}
    parameters['sku']['name'] = sku
    parameters['sku']['capacity'] = capacity
    parameters['tags'] = tags
    parameters['minimum_tls_version'] = minimum_tls_version
    return sdk_no_wait(no_wait,
                       client.begin_update,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       parameters=parameters)


def redisenterprise_delete(client,
                           resource_group_name,
                           cluster_name,
                           no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_delete,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name)


def redisenterprise_database_list(client,
                                  resource_group_name,
                                  cluster_name):
    return client.list_by_cluster(resource_group_name=resource_group_name,
                                  cluster_name=cluster_name)


def redisenterprise_database_show(client,
                                  resource_group_name,
                                  cluster_name):
    return client.get(resource_group_name=resource_group_name,
                      cluster_name=cluster_name,
                      database_name="default")


def redisenterprise_database_create(client,
                                    resource_group_name,
                                    cluster_name,
                                    client_protocol=None,
                                    port=None,
                                    clustering_policy=None,
                                    eviction_policy=None,
                                    persistence=None,
                                    modules=None,
                                    no_wait=False):
    parameters = {}
    parameters['client_protocol'] = client_protocol
    parameters['port'] = port
    parameters['clustering_policy'] = clustering_policy
    parameters['eviction_policy'] = eviction_policy
    parameters['persistence'] = persistence
    parameters['modules'] = modules
    return sdk_no_wait(no_wait,
                       client.begin_create,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default",
                       parameters=parameters)


def redisenterprise_database_update(client,
                                    resource_group_name,
                                    cluster_name,
                                    client_protocol=None,
                                    eviction_policy=None,
                                    persistence=None,
                                    no_wait=False):
    parameters = {}
    parameters['client_protocol'] = client_protocol
    parameters['eviction_policy'] = eviction_policy
    parameters['persistence'] = persistence
    return sdk_no_wait(no_wait,
                       client.begin_update,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default",
                       parameters=parameters)


def redisenterprise_database_delete(client,
                                    resource_group_name,
                                    cluster_name,
                                    no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_delete,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default")


def redisenterprise_database_export(client,
                                    resource_group_name,
                                    cluster_name,
                                    sas_uri,
                                    no_wait=False):
    parameters = {}
    parameters['sas_uri'] = sas_uri
    return sdk_no_wait(no_wait,
                       client.begin_export,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default",
                       parameters=parameters)


def redisenterprise_database_import(client,
                                    resource_group_name,
                                    cluster_name,
                                    sas_uri,
                                    no_wait=False):
    parameters = {}
    parameters['sas_uri'] = sas_uri
    return sdk_no_wait(no_wait,
                       client.begin_import_method,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default",
                       parameters=parameters)


def redisenterprise_database_list_keys(client,
                                       resource_group_name,
                                       cluster_name):
    return client.list_keys(resource_group_name=resource_group_name,
                            cluster_name=cluster_name,
                            database_name="default")


def redisenterprise_database_regenerate_key(client,
                                            resource_group_name,
                                            cluster_name,
                                            key_type,
                                            no_wait=False):
    parameters = {}
    parameters['key_type'] = key_type
    return sdk_no_wait(no_wait,
                       client.begin_regenerate_key,
                       resource_group_name=resource_group_name,
                       cluster_name=cluster_name,
                       database_name="default",
                       parameters=parameters)
