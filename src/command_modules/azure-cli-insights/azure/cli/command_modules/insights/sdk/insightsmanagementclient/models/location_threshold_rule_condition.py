# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .rule_condition import RuleCondition


class LocationThresholdRuleCondition(RuleCondition):
    """
    A rule condition based on a certain number of locations failing.

    :param odata.type: Polymorphic Discriminator
    :type odata.type: str
    :param data_source: Gets or sets the resource from which the rule
     collects its data.
    :type data_source: :class:`RuleDataSource
     <insights.models.RuleDataSource>`
    :param window_size: Gets or sets the period of time that is used to
     monitor alert activity based on the threshold. Must be between 5 minutes
     and 1 day.
    :type window_size: :class:`TimeSpan <insights.models.TimeSpan>`
    :param failed_location_count: Gets or sets the number of locations that
     must fail to activate the alert.
    :type failed_location_count: int
    """ 

    _validation = {
        'odata.type': {'required': True},
    }

    _attribute_map = {
        'odata.type': {'key': 'odata.type', 'type': 'str'},
        'data_source': {'key': 'dataSource', 'type': 'RuleDataSource'},
        'window_size': {'key': 'windowSize', 'type': 'TimeSpan'},
        'failed_location_count': {'key': 'failedLocationCount', 'type': 'int'},
    }

    def __init__(self, data_source=None, window_size=None, failed_location_count=None):
        super(LocationThresholdRuleCondition, self).__init__()
        self.data_source = data_source
        self.window_size = window_size
        self.failed_location_count = failed_location_count
        self.odata.type = 'Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition'
