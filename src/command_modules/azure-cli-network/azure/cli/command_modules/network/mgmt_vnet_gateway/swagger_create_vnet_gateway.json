{
  "swagger": "2.0", 
  "info": {
    "title": "VnetGatewayCreationClient", 
    "version": "2015-11-01"
  }, 
  "host": "management.azure.com", 
  "schemes": [
    "https"
  ], 
  "consumes": [
    "application/json"
  ], 
  "produces": [
    "application/json"
  ], 
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ], 
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2", 
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize", 
      "flow": "implicit", 
      "description": "Azure Active Directory OAuth2 Flow", 
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }, 
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "VnetGateway"
        ], 
        "operationId": "VnetGateway_CreateOrUpdate", 
        "description": "Create or update a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group. The name is case insensitive.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "deploymentName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the deployment.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "parameters", 
            "x-ms-client-flatten": true, 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/Deployment_VnetGateway"
            }, 
            "description": "Additional parameters supplied to the operation."
          }, 
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }, 
          "201": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }
  }, 
  "definitions": {
    "Deployment_VnetGateway": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties_VnetGateway", 
          "description": "Gets or sets the deployment properties.", 
          "x-ms-client-flatten": true
        }
      }, 
      "description": "Deployment operation parameters."
    }, 
    "DeploymentProperties_VnetGateway": {
      "properties": {
        "templateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink.", 
          "x-ms-client-flatten": true
        }, 
        "parameters": {
          "$ref": "#/definitions/VnetGatewayParameters", 
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink.", 
          "x-ms-client-flatten": true
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "required": [
        "templateLink", 
        "parameters", 
        "mode"
      ], 
      "description": "Deployment properties."
    }, 
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template.", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateVnetGateway_2016-08-08/azuredeploy.json"
          ]
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the template."
    }, 
    "VnetGatewayParameters": {
      "properties": {
        "enableBgp": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_enableBgp", 
          "x-ms-client-flatten": true
        }, 
        "gatewayType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_gatewayType", 
          "x-ms-client-flatten": true
        }, 
        "location": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_location", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddress": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddress", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddressType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddressType", 
          "x-ms-client-flatten": true
        }, 
        "sku": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_sku", 
          "x-ms-client-flatten": true
        }, 
        "subnetId": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnetId", 
          "x-ms-client-flatten": true
        }, 
        "tags": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_tags", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetworkGatewayName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetworkGatewayName", 
          "x-ms-client-flatten": true
        }, 
        "vpnType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_vpnType", 
          "x-ms-client-flatten": true
        }
      }, 
      "required": [
        "virtualNetworkGatewayName", 
        "subnetId", 
        "enableBgp"
      ]
    }, 
    "DeploymentParameter_enableBgp": {
      "properties": {
        "value": {
          "type": "boolean", 
          "description": "Enable BGP (Border Gateway Protocol).", 
          "x-ms-client-name": "enableBgp", 
          "default": "False"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_gatewayType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Gateway type.", 
          "x-ms-client-name": "gatewayType", 
          "enum": [
            "Vpn", 
            "ExpressRoute"
          ], 
          "x-ms-enum": {
            "name": "gatewayType", 
            "modelAsString": false
          }, 
          "default": "Vpn"
        }
      }
    }, 
    "DeploymentParameter_location": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Location for resources.", 
          "x-ms-client-name": "location"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddress": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name or ID of public IP address to use.", 
          "x-ms-client-name": "publicIpAddress"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddressType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Type of Public IP Address to associate with the load balancer.", 
          "x-ms-client-name": "publicIpAddressType", 
          "enum": [
            "existingName", 
            "existingId"
          ], 
          "x-ms-enum": {
            "name": "publicIpAddressType", 
            "modelAsString": false
          }, 
          "default": "existingId"
        }
      }
    }, 
    "DeploymentParameter_sku": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "VPN Gateway SKU.", 
          "x-ms-client-name": "sku", 
          "enum": [
            "Basic", 
            "Standard", 
            "HighPerformance"
          ], 
          "x-ms-enum": {
            "name": "sku", 
            "modelAsString": false
          }, 
          "default": "Basic"
        }
      }
    }, 
    "DeploymentParameter_subnetId": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Subnet ID for the VPN gateway. Subnet must be named GatewaySubnet.", 
          "x-ms-client-name": "subnetId"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_tags": {
      "properties": {
        "value": {
          "type": "object", 
          "description": "Tags object.", 
          "x-ms-client-name": "tags"
        }
      }
    }, 
    "DeploymentParameter_virtualNetworkGatewayName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Gateway name.", 
          "x-ms-client-name": "virtualNetworkGatewayName"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_vpnType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "VPN gateway type.", 
          "x-ms-client-name": "vpnType", 
          "enum": [
            "RouteBased", 
            "PolicyBased"
          ], 
          "x-ms-enum": {
            "name": "vpnType", 
            "modelAsString": false
          }, 
          "default": "RouteBased"
        }
      }
    }, 
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template."
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the deployment paramaters."
    }, 
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the resource type."
        }, 
        "locations": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the collection of locations where this resource type can be created in."
        }, 
        "apiVersions": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the api version."
        }, 
        "properties": {
          "type": "object", 
          "additionalProperties": {
            "type": "string"
          }, 
          "description": "Gets or sets the properties."
        }
      }, 
      "description": "Resource type managed by the resource provider."
    }, 
    "Provider": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the provider id."
        }, 
        "namespace": {
          "type": "string", 
          "description": "Gets or sets the namespace of the provider."
        }, 
        "registrationState": {
          "type": "string", 
          "description": "Gets or sets the registration state of the provider."
        }, 
        "resourceTypes": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          }, 
          "description": "Gets or sets the collection of provider resource types."
        }
      }, 
      "description": "Resource provider information."
    }, 
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/BasicDependency"
          }, 
          "description": "Gets the list of dependencies."
        }, 
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string", 
          "description": "Gets or sets the state of the provisioning."
        }, 
        "correlationId": {
          "type": "string", 
          "description": "Gets or sets the correlation ID of the deployment."
        }, 
        "timestamp": {
          "type": "string", 
          "format": "date-time", 
          "description": "Gets or sets the timestamp of the template deployment."
        }, 
        "outputs": {
          "type": "object", 
          "description": "Gets or sets key/value pairs that represent deploymentoutput."
        }, 
        "providers": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Provider"
          }, 
          "description": "Gets the list of resource providers needed for the deployment."
        }, 
        "dependencies": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Dependency"
          }, 
          "description": "Gets the list of deployment dependencies."
        }, 
        "template": {
          "type": "object", 
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        }, 
        "TemplateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        }, 
        "parameters": {
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        }, 
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink", 
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental", 
            "Complete"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Deployment properties with additional details."
    }, 
    "DeploymentExtended": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the deployment."
        }, 
        "name": {
          "type": "string", 
          "description": "Gets or sets the name of the deployment."
        }, 
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended", 
          "description": "Gets or sets deployment properties."
        }
      }, 
      "required": [
        "name"
      ], 
      "description": "Deployment information."
    }
  }, 
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId", 
      "in": "path", 
      "required": true, 
      "type": "string", 
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    }, 
    "ApiVersionParameter": {
      "name": "api-version", 
      "in": "query", 
      "required": true, 
      "type": "string", 
      "description": "Client Api Version."
    }
  }
}