Metadata-Version: 2.1
Name: azure-mgmt-deploymentmanager
Version: 0.2.0
Summary: Microsoft Azure Deployment Manager Client Library for Python
Home-page: https://github.com/Azure/azure-sdk-for-python
Author: Microsoft Corporation
Author-email: azpysdkhelp@microsoft.com
License: MIT License
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/x-rst
Requires-Dist: msrest (>=0.5.0)
Requires-Dist: msrestazure (<2.0.0,>=0.4.32)
Requires-Dist: azure-common (~=1.1)
Requires-Dist: azure-mgmt-nspkg ; python_version<'3.0'

Microsoft Azure SDK for Python
==============================

This is the Microsoft Azure Deployment Manager Client Library.

Azure Resource Manager (ARM) is the next generation of management APIs that
replace the old Azure Service Management (ASM).

This package has been tested with Python 2.7, 3.5, 3.6, 3.7 and 3.8.

For the older Azure Service Management (ASM) libraries, see
`azure-servicemanagement-legacy <https://pypi.python.org/pypi/azure-servicemanagement-legacy>`__ library.

For a more complete set of Azure libraries, see the `azure <https://pypi.python.org/pypi/azure>`__ bundle package.


Usage
=====

For code examples, see `Deployment Manager
<https://docs.microsoft.com/python/api/overview/azure/>`__
on docs.microsoft.com.


Provide Feedback
================

If you encounter any bugs or have suggestions, please file an issue in the
`Issues <https://github.com/Azure/azure-sdk-for-python/issues>`__
section of the project.


.. image::  https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fazure-mgmt-deploymentmanager%2FREADME.png


.. :changelog:

Release History
===============

0.2.0 (2019-12-31)
++++++++++++++++++

**Features**

- Added operation ServiceUnitsOperations.list
- Added operation RolloutsOperations.list
- Added operation ArtifactSourcesOperations.list
- Added operation ServiceTopologiesOperations.list
- Added operation StepsOperations.list
- Added operation ServicesOperations.list
- Added operation Operations.list

**Breaking changes**

- Parameter attributes of model WaitStepProperties is now required
- Removed operation Operations.get

**General Breaking Changes**

This version uses a next-generation code generator that might introduce breaking changes if from some import. In summary, some modules were incorrectly visible/importable and have been renamed. This fixed several issues caused by usage of classes that were not supposed to be used in the first place.
DeploymentManagerClient cannot be imported from azure.mgmt.deploymentmanager.deployment_manager_client anymore (import from azure.mgmt.deploymentmanager works like before)
DeploymentManagerClientConfiguration import has been moved from azure.mgmt.deploymentmanager.deployment_manager_client to azure.mgmt.deploymentmanager
A model MyClass from a "models" sub-module cannot be imported anymore using azure.mgmt.deploymentmanager.models.my_class (import from azure.mgmt.deploymentmanager.models works like before)
An operation class MyClassOperations from an operations sub-module cannot be imported anymore using azure.mgmt.deploymentmanager.operations.my_class_operations (import from azure.mgmt.deploymentmanager.operations works like before)
Last but not least, HTTP connection pooling is now enabled by default. You should always use a client as a context manager, or call close(), or use no more than one client per process.

0.1.0 (2019-04-15)
++++++++++++++++++

* Initial Release


