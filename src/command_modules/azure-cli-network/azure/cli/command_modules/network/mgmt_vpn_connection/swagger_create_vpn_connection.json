{
  "swagger": "2.0", 
  "info": {
    "title": "VpnConnectionCreationClient", 
    "version": "2015-11-01"
  }, 
  "host": "management.azure.com", 
  "schemes": [
    "https"
  ], 
  "consumes": [
    "application/json"
  ], 
  "produces": [
    "application/json"
  ], 
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ], 
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2", 
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize", 
      "flow": "implicit", 
      "description": "Azure Active Directory OAuth2 Flow", 
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }, 
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "VpnConnection"
        ], 
        "operationId": "VpnConnection_CreateOrUpdate", 
        "description": "Create or update a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group. The name is case insensitive.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "deploymentName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the deployment.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "parameters", 
            "x-ms-client-flatten": true, 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/Deployment_VpnConnection"
            }, 
            "description": "Additional parameters supplied to the operation."
          }, 
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }, 
          "201": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }
  }, 
  "definitions": {
    "Deployment_VpnConnection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties_VpnConnection", 
          "description": "Gets or sets the deployment properties.", 
          "x-ms-client-flatten": true
        }
      }, 
      "description": "Deployment operation parameters."
    }, 
    "DeploymentProperties_VpnConnection": {
      "properties": {
        "templateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink.", 
          "x-ms-client-flatten": true
        }, 
        "parameters": {
          "$ref": "#/definitions/VpnConnectionParameters", 
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink.", 
          "x-ms-client-flatten": true
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "required": [
        "templateLink", 
        "parameters", 
        "mode"
      ], 
      "description": "Deployment properties."
    }, 
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template.", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateVpnConnection_2016-08-08/azuredeploy.json"
          ]
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the template."
    }, 
    "VpnConnectionParameters": {
      "properties": {
        "connectionType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_connectionType", 
          "x-ms-client-flatten": true
        }, 
        "expressRouteCircuit2Id": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_expressRouteCircuit2Id", 
          "x-ms-client-flatten": true
        }, 
        "localGateway2Id": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_localGateway2Id", 
          "x-ms-client-flatten": true
        }, 
        "location": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_location", 
          "x-ms-client-flatten": true
        }, 
        "routingWeight": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_routingWeight", 
          "x-ms-client-flatten": true
        }, 
        "sharedKey": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_sharedKey", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetworkGatewayConnectionName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetworkGatewayConnectionName", 
          "x-ms-client-flatten": true
        }, 
        "vnetGateway1Id": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_vnetGateway1Id", 
          "x-ms-client-flatten": true
        }, 
        "vnetGateway2Id": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_vnetGateway2Id", 
          "x-ms-client-flatten": true
        }
      }, 
      "required": [
        "virtualNetworkGatewayConnectionName", 
        "connectionType", 
        "vnetGateway1Id"
      ]
    }, 
    "DeploymentParameter_connectionType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connection type.", 
          "x-ms-client-name": "connectionType", 
          "enum": [
            "IPSec", 
            "Vnet2Vnet", 
            "ExpressRoute"
          ], 
          "x-ms-enum": {
            "name": "connectionType", 
            "modelAsString": false
          }
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_expressRouteCircuit2Id": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connect to this express route circuit from vnet gateway 1 using connection type ExpressRoute.", 
          "x-ms-client-name": "expressRouteCircuit2Id"
        }
      }
    }, 
    "DeploymentParameter_localGateway2Id": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connect to this local gateway from vnet gateway 1 using connection type IPSec.", 
          "x-ms-client-name": "localGateway2Id"
        }
      }
    }, 
    "DeploymentParameter_location": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Location for resource.", 
          "x-ms-client-name": "location"
        }
      }
    }, 
    "DeploymentParameter_routingWeight": {
      "properties": {
        "value": {
          "type": "integer", 
          "description": "Connection routing weight.", 
          "x-ms-client-name": "routingWeight", 
          "default": "10"
        }
      }
    }, 
    "DeploymentParameter_sharedKey": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "IPSec shared key.", 
          "x-ms-client-name": "sharedKey", 
          "default": "none"
        }
      }
    }, 
    "DeploymentParameter_virtualNetworkGatewayConnectionName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connection name.", 
          "x-ms-client-name": "virtualNetworkGatewayConnectionName"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_vnetGateway1Id": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connect from this gateway to another gateway or express route circuit.", 
          "x-ms-client-name": "vnetGateway1Id"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_vnetGateway2Id": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Connect to this vnet gateway from vnet gateway 1 using connection type Vnet2Vnet.", 
          "x-ms-client-name": "vnetGateway2Id"
        }
      }
    }, 
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template."
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the deployment paramaters."
    }, 
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the resource type."
        }, 
        "locations": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the collection of locations where this resource type can be created in."
        }, 
        "apiVersions": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the api version."
        }, 
        "properties": {
          "type": "object", 
          "additionalProperties": {
            "type": "string"
          }, 
          "description": "Gets or sets the properties."
        }
      }, 
      "description": "Resource type managed by the resource provider."
    }, 
    "Provider": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the provider id."
        }, 
        "namespace": {
          "type": "string", 
          "description": "Gets or sets the namespace of the provider."
        }, 
        "registrationState": {
          "type": "string", 
          "description": "Gets or sets the registration state of the provider."
        }, 
        "resourceTypes": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          }, 
          "description": "Gets or sets the collection of provider resource types."
        }
      }, 
      "description": "Resource provider information."
    }, 
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/BasicDependency"
          }, 
          "description": "Gets the list of dependencies."
        }, 
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string", 
          "description": "Gets or sets the state of the provisioning."
        }, 
        "correlationId": {
          "type": "string", 
          "description": "Gets or sets the correlation ID of the deployment."
        }, 
        "timestamp": {
          "type": "string", 
          "format": "date-time", 
          "description": "Gets or sets the timestamp of the template deployment."
        }, 
        "outputs": {
          "type": "object", 
          "description": "Gets or sets key/value pairs that represent deploymentoutput."
        }, 
        "providers": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Provider"
          }, 
          "description": "Gets the list of resource providers needed for the deployment."
        }, 
        "dependencies": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Dependency"
          }, 
          "description": "Gets the list of deployment dependencies."
        }, 
        "template": {
          "type": "object", 
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        }, 
        "TemplateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        }, 
        "parameters": {
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        }, 
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink", 
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental", 
            "Complete"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Deployment properties with additional details."
    }, 
    "DeploymentExtended": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the deployment."
        }, 
        "name": {
          "type": "string", 
          "description": "Gets or sets the name of the deployment."
        }, 
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended", 
          "description": "Gets or sets deployment properties."
        }
      }, 
      "required": [
        "name"
      ], 
      "description": "Deployment information."
    }
  }, 
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId", 
      "in": "path", 
      "required": true, 
      "type": "string", 
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    }, 
    "ApiVersionParameter": {
      "name": "api-version", 
      "in": "query", 
      "required": true, 
      "type": "string", 
      "description": "Client Api Version."
    }
  }
}