# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.operations import Operations
from .operations.mediaservices_operations import MediaservicesOperations
from .operations.providers_operations import ProvidersOperations
from .operations.assets_operations import AssetsOperations
from .operations.transforms_operations import TransformsOperations
from .operations.jobs_operations import JobsOperations
from . import models


class AzureMediaServicesConfiguration(AzureConfiguration):
    """Configuration for AzureMediaServices
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The subscription ID.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if subscription_id is None:
            raise ValueError("Parameter 'subscription_id' must not be None.")
        if not base_url:
            base_url = 'http://localhost'

        super(AzureMediaServicesConfiguration, self).__init__(base_url)

        self.add_user_agent('azuremediaservices/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials
        self.subscription_id = subscription_id


class AzureMediaServices(object):
    """This Swagger was generated by the API Framework.

    :ivar config: Configuration for client.
    :vartype config: AzureMediaServicesConfiguration

    :ivar operations: Operations operations
    :vartype operations: accounts.operations.Operations
    :ivar mediaservices: Mediaservices operations
    :vartype mediaservices: accounts.operations.MediaservicesOperations
    :ivar providers: Providers operations
    :vartype providers: accounts.operations.ProvidersOperations
    :ivar assets: Assets operations
    :vartype assets: accounts.operations.AssetsOperations
    :ivar transforms: Transforms operations
    :vartype transforms: accounts.operations.TransformsOperations
    :ivar jobs: Jobs operations
    :vartype jobs: accounts.operations.JobsOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The subscription ID.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = AzureMediaServicesConfiguration(credentials, subscription_id, base_url)
        self._client = ServiceClient(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2018-02-01-privatepreview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.mediaservices = MediaservicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.providers = ProvidersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.assets = AssetsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.transforms = TransformsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.jobs = JobsOperations(
            self._client, self.config, self._serialize, self._deserialize)
