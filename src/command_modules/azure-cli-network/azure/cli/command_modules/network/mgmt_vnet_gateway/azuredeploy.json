{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "addressPrefixes": {
      "type": "array",
      "defaultValue": [ ],
      "metadata": {
        "description": "Space separated list of address prefixes to associate with the VNET gateway."
      }
    },
    "asn": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Autonomous System Number to use for the BGP settings."
      }
    },
    "bgpPeeringAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "IP address to use for BGP peering."
      }
    },
    "createClientConfiguration": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Flag to create VPN client configuration."
      }
    },
    "enableBgp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Flag to enable BGP settings."
      }
    },
    "gatewayType": {
      "type": "string",
      "defaultValue": "Vpn",
      "allowedValues": [
        "Vpn",
        "ExpressRoute"
      ],
      "metadata": {
        "description": "Gateway type."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for resources."
      }
    },
    "peerWeight": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Weight added to routes learned through BGP peering."
      }
    },
    "publicIpAddress": {
      "type": "string",
      "metadata": {
        "description": "Name or ID of public IP address to use."
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "existingId",
      "allowedValues": [
        "existingName",
        "existingId"
      ],
      "metadata": {
        "description": "Type of Public IP Address to associate with the VPN gateway."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "HighPerformance",
        "UltraPerformance"
      ],
      "metadata": {
        "description": "VPN Gateway SKU."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": { },
      "metadata": {
        "description": "Tags object."
      }
    },
    "virtualNetworkGatewayName": {
      "type": "string",
      "metadata": {
        "description": "Gateway name."
      }
    },
    "virtualNetwork": {
      "type": "string",
      "metadata": {
        "description": "Name or ID of a virtual network that contains a subnet named 'GatewaySubnet'."
      }
    },
    "virtualNetworkType": {
      "type": "string",
      "defaultValue": "existingId",
      "allowedValues": [
        "existingId",
        "existingName"
      ],
      "metadata": {
        "description": "Type of virtual network to supply to the VPN gateway."
      }
    },
    "vpnType": {
      "type": "string",
      "metadata": {
        "description": "VPN routing type."
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased",
        "Dedicated"
      ]
    }
  },
  "variables": {
    "bgpProperties": {
      "true": {
        "asn": "[parameters('asn')]",
        "bgpPeeringAddress": "[parameters('bgpPeeringAddress')]",
        "peerWeight": "[parameters('peerWeight')]"
      },
      "false": null
    },
    "pubIpIds": {
      "existingName": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', parameters('publicIpAddress'))]",
      "existingId": "[parameters('publicIpAddress')]"
    },
    "subnetIds": {
      "existingName": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetwork'), '/subnets/GatewaySubnet')]",
      "existingId": "[concat(parameters('virtualNetwork'), '/subnets/GatewaySubnet')]"
    },
    "vpnClientConfiguration": {
      "true": {
        "vpnClientAddressPool": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "vpnClientRevokedCertificates": [ ],
        "vpnClientRootCertificates": [ ]
      },
      "false": null
    }
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('virtualNetworkGatewayName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "bgpSettings": "[variables('bgpProperties')[concat(parameters('enableBgp'))]]",
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetIds')[parameters('virtualNetworkType')]]"
              },
              "publicIPAddress": {
                "id": "[variables('pubIpIds')[parameters('publicIpAddressType')]]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[parameters('sku')]",
          "tier": "[parameters('sku')]"
        },
        "gatewayType": "[parameters('gatewayType')]",
        "vpnType": "[parameters('vpnType')]",
        "vpnClientConfiguration": "[variables('vpnClientConfiguration')[concat(parameters('createClientConfiguration'))]]",
        "enableBgp": "[parameters('enableBgp')]"
      }
    }
  ],
  "outputs": {
    "vnetGateway": {
      "type": "object",
      "value": "[reference(parameters('virtualNetworkGatewayName'))]"
    }
  }
}