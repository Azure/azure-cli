# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .job_input_clip import JobInputClip


class JobInputHttp(JobInputClip):
    """Represents http job input.

    :param label: Label of the JobInput.  Used to match JobInputs to
     TransformInputs.  If no Label is given then the JobInputs are matched by
     index.
    :type label: str
    :param odatatype: Constant filled by server.
    :type odatatype: str
    :param files: List of files.  Required for JobInputAzureBlob. It
     optionally can be used for JobInputAsset to tell the service to only use
     the files specified from the Asset.
    :type files: list[str]
    :param base_uri: Base uri for http job input. It will be concatenated with
     provided file names.   If no base uri is given, then the provided file
     list is assumed to be fully qualified uris.
    :type base_uri: str
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'label': {'key': 'label', 'type': 'str'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
        'files': {'key': 'files', 'type': '[str]'},
        'base_uri': {'key': 'baseUri', 'type': 'str'},
    }

    def __init__(self, label=None, files=None, base_uri=None):
        super(JobInputHttp, self).__init__(label=label, files=files)
        self.base_uri = base_uri
        self.odatatype = '#Microsoft.Media.JobInputHttp'
