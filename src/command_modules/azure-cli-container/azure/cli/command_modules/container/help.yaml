version: 1
content:
- group:
    name: container
    summary: Manage Azure Container Instances.
- command:
    name: container create
    summary: Create a container group.
    examples:
    - summary: Create a container in a container group with 1 core and 1Gb of memory.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --cpu 1 --memory 1
    - summary: Create a container in a container group that runs Windows, with 2 cores and 3.5Gb of memory.
      command: az container create -g MyResourceGroup --name mywinapp --image winappimage:latest --os-type Windows --cpu 2 --memory 3.5
    - summary: Create a container in a container group with public IP address, ports and DNS name label.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --ports 80 443 --dns-name-label contoso
    - summary: Create a container in a container group that invokes a script upon start.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "/bin/sh -c '/path to/myscript.sh'"
    - summary: Create a container in a container group that runs a command and stop the container afterwards.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "echo hello" --restart-policy Never
    - summary: Create a container in a container group with environment variables.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --environment-variables key1=value1 key2=value2
    - summary: Create a container in a container group using container image from Azure Container Registry.
      command: az container create -g MyResourceGroup --name myapp --image myAcrRegistry.azurecr.io/myimage:latest --registry-password password
    - summary: Create a container in a container group that mounts an Azure File share as volume.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "cat /mnt/azfile/myfile" --azure-file-volume-share-name myshare --azure-file-volume-account-name mystorageaccount --azure-file-volume-account-key mystoragekey --azure-file-volume-mount-path /mnt/azfile
    - summary: Create a container in a container group that mounts a git repo as volume.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "cat /mnt/gitrepo" --gitrepo-url https://github.com/user/myrepo.git --gitrepo-dir ./dir1 --gitrepo-mount-path /mnt/gitrepo
    - summary: Create a container in a container group using a yaml file.
      command: az container create -g MyResourceGroup -f containerGroup.yaml
    - summary: Create a container group using Log Analytics from a workspace name.
      command: az container create -g MyResourceGroup --name myapp --log-analytics-workspace myworkspace
    - summary: Create a container group with a system assigned identity.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity
    - summary: Create a container group with a system assigned identity. The group will have a 'Contributor' role with access to a storage account.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity --scope /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1
    - summary: Create a container group with a user assigned identity.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity  /subscriptions/mySubscrpitionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID
    - summary: Create a container group with both system and user assigned identity.
      command: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity [system] /subscriptions/mySubscrpitionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID
      min_profile: latest
- command:
    name: container delete
    summary: Delete a container group.
- command:
    name: container list
    summary: List container groups.
- command:
    name: container show
    summary: Get the details of a container group.
- command:
    name: container logs
    summary: Examine the logs for a container in a container group.
- command:
    name: container export
    summary: Export a container group in yaml format.
    examples:
    - summary: Export a container group in yaml.
      command: az container export -g MyResourceGroup --name mynginx -f output.yaml
- command:
    name: container exec
    summary: Execute a command from within a running container of a container group.
    description: The most common use case is to open an interactive bash shell. See examples below. This command is currently not supported for Windows machines.
    examples:
    - summary: Stream a shell from within an nginx container.
      command: az container exec -g MyResourceGroup --name mynginx --container-name nginx --exec-command "/bin/bash"
- command:
    name: container attach
    summary: Attach local standard output and error streams to a container in a container group.
