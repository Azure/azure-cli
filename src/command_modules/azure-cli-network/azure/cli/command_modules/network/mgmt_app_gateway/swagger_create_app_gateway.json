{
  "swagger": "2.0", 
  "info": {
    "title": "AppGatewayCreationClient", 
    "version": "2015-11-01"
  }, 
  "host": "management.azure.com", 
  "schemes": [
    "https"
  ], 
  "consumes": [
    "application/json"
  ], 
  "produces": [
    "application/json"
  ], 
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ], 
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2", 
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize", 
      "flow": "implicit", 
      "description": "Azure Active Directory OAuth2 Flow", 
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }, 
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "AppGateway"
        ], 
        "operationId": "AppGateway_CreateOrUpdate", 
        "description": "Create or update a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group. The name is case insensitive.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "deploymentName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the deployment.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "parameters", 
            "x-ms-client-flatten": true, 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/Deployment_AppGateway"
            }, 
            "description": "Additional parameters supplied to the operation."
          }, 
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }, 
          "201": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }
  }, 
  "definitions": {
    "Deployment_AppGateway": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties_AppGateway", 
          "description": "Gets or sets the deployment properties.", 
          "x-ms-client-flatten": true
        }
      }, 
      "description": "Deployment operation parameters."
    }, 
    "DeploymentProperties_AppGateway": {
      "properties": {
        "templateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink.", 
          "x-ms-client-flatten": true
        }, 
        "parameters": {
          "$ref": "#/definitions/AppGatewayParameters", 
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink.", 
          "x-ms-client-flatten": true
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "required": [
        "templateLink", 
        "parameters", 
        "mode"
      ], 
      "description": "Deployment properties."
    }, 
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template.", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateAppGateway_2016-07-19/azuredeploy.json"
          ]
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the template."
    }, 
    "AppGatewayParameters": {
      "properties": {
        "_artifactsLocation": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter__artifactsLocation", 
          "x-ms-client-flatten": true
        }, 
        "applicationGatewayName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_applicationGatewayName", 
          "x-ms-client-flatten": true
        }, 
        "capacity": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_capacity", 
          "x-ms-client-flatten": true
        }, 
        "certData": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_certData", 
          "x-ms-client-flatten": true
        }, 
        "certPassword": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_certPassword", 
          "x-ms-client-flatten": true
        }, 
        "frontendPort": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_frontendPort", 
          "x-ms-client-flatten": true
        }, 
        "frontendType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_frontendType", 
          "x-ms-client-flatten": true
        }, 
        "httpListenerProtocol": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_httpListenerProtocol", 
          "x-ms-client-flatten": true
        }, 
        "httpSettingsCookieBasedAffinity": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_httpSettingsCookieBasedAffinity", 
          "x-ms-client-flatten": true
        }, 
        "httpSettingsPort": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_httpSettingsPort", 
          "x-ms-client-flatten": true
        }, 
        "httpSettingsProtocol": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_httpSettingsProtocol", 
          "x-ms-client-flatten": true
        }, 
        "location": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_location", 
          "x-ms-client-flatten": true
        }, 
        "privateIpAddress": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_privateIpAddress", 
          "x-ms-client-flatten": true
        }, 
        "privateIpAddressAllocation": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_privateIpAddressAllocation", 
          "x-ms-client-flatten": true
        }, 
        "publicIp": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIp", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddressAllocation": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddressAllocation", 
          "x-ms-client-flatten": true
        }, 
        "publicIpType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpType", 
          "x-ms-client-flatten": true
        }, 
        "routingRuleType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_routingRuleType", 
          "x-ms-client-flatten": true
        }, 
        "servers": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_servers", 
          "x-ms-client-flatten": true
        }, 
        "skuName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_skuName", 
          "x-ms-client-flatten": true
        }, 
        "skuTier": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_skuTier", 
          "x-ms-client-flatten": true
        }, 
        "subnet": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnet", 
          "x-ms-client-flatten": true
        }, 
        "subnetAddressPrefix": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnetAddressPrefix", 
          "x-ms-client-flatten": true
        }, 
        "subnetType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnetType", 
          "x-ms-client-flatten": true
        }, 
        "tags": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_tags", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetworkName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetworkName", 
          "x-ms-client-flatten": true
        }, 
        "vnetAddressPrefix": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_vnetAddressPrefix", 
          "x-ms-client-flatten": true
        }
      }, 
      "required": [
        "applicationGatewayName", 
        "_artifactsLocation"
      ]
    }, 
    "DeploymentParameter_applicationGatewayName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name of the application gateway.", 
          "x-ms-client-name": "applicationGatewayName"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_capacity": {
      "properties": {
        "value": {
          "type": "integer", 
          "description": "The number of instances to use with the application gateway.", 
          "x-ms-client-name": "capacity", 
          "default": "2"
        }
      }
    }, 
    "DeploymentParameter_certData": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The contents of the PFX certificate file.", 
          "x-ms-client-name": "certData"
        }
      }
    }, 
    "DeploymentParameter_certPassword": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The certificate password.", 
          "x-ms-client-name": "certPassword"
        }
      }
    }, 
    "DeploymentParameter_frontendPort": {
      "properties": {
        "value": {
          "type": "integer", 
          "description": "The front end port number.", 
          "x-ms-client-name": "frontendPort"
        }
      }
    }, 
    "DeploymentParameter_frontendType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Specify which kind of frontend configuration to create.", 
          "x-ms-client-name": "frontendType", 
          "enum": [
            "publicIp", 
            "privateIp"
          ], 
          "x-ms-enum": {
            "name": "frontendType", 
            "modelAsString": false
          }, 
          "default": "privateIp"
        }
      }
    }, 
    "DeploymentParameter_httpListenerProtocol": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The HTTP listener protocol.", 
          "x-ms-client-name": "httpListenerProtocol", 
          "enum": [
            "http", 
            "https"
          ], 
          "x-ms-enum": {
            "name": "httpListenerProtocol", 
            "modelAsString": false
          }, 
          "default": "http"
        }
      }
    }, 
    "DeploymentParameter_httpSettingsCookieBasedAffinity": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Enable or disable HTTP settings cookie based affinity.", 
          "x-ms-client-name": "httpSettingsCookieBasedAffinity", 
          "enum": [
            "enabled", 
            "disabled"
          ], 
          "x-ms-enum": {
            "name": "httpSettingsCookieBasedAffinity", 
            "modelAsString": false
          }, 
          "default": "disabled"
        }
      }
    }, 
    "DeploymentParameter_httpSettingsPort": {
      "properties": {
        "value": {
          "type": "integer", 
          "description": "The HTTP settings port.", 
          "x-ms-client-name": "httpSettingsPort", 
          "default": "80"
        }
      }
    }, 
    "DeploymentParameter_httpSettingsProtocol": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The HTTP settings protocol.", 
          "x-ms-client-name": "httpSettingsProtocol", 
          "enum": [
            "http", 
            "https"
          ], 
          "x-ms-enum": {
            "name": "httpSettingsProtocol", 
            "modelAsString": false
          }, 
          "default": "http"
        }
      }
    }, 
    "DeploymentParameter_location": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The location in which to create the application gateway.", 
          "x-ms-client-name": "location"
        }
      }
    }, 
    "DeploymentParameter_privateIpAddress": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The static private IP address to associate with the application gateway frontend.", 
          "x-ms-client-name": "privateIpAddress"
        }
      }
    }, 
    "DeploymentParameter_privateIpAddressAllocation": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Specify the kind of private IP allocation.", 
          "x-ms-client-name": "privateIpAddressAllocation", 
          "enum": [
            "dynamic", 
            "static"
          ], 
          "x-ms-enum": {
            "name": "privateIpAddressAllocation", 
            "modelAsString": false
          }, 
          "default": "dynamic"
        }
      }
    }, 
    "DeploymentParameter_publicIp": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name or ID of the public IP address.", 
          "x-ms-client-name": "publicIp"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddressAllocation": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Specify the kind of public IP allocation for new public IPs.", 
          "x-ms-client-name": "publicIpAddressAllocation", 
          "enum": [
            "dynamic", 
            "static"
          ], 
          "x-ms-enum": {
            "name": "publicIpAddressAllocation", 
            "modelAsString": false
          }, 
          "default": "dynamic"
        }
      }
    }, 
    "DeploymentParameter_publicIpType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Specify the type of public IP address.", 
          "x-ms-client-name": "publicIpType", 
          "enum": [
            "none", 
            "new", 
            "existingName", 
            "existingId"
          ], 
          "x-ms-enum": {
            "name": "publicIpType", 
            "modelAsString": false
          }, 
          "default": "none"
        }
      }
    }, 
    "DeploymentParameter_routingRuleType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The request routing rule type.", 
          "x-ms-client-name": "routingRuleType", 
          "enum": [
            "Basic", 
            "PathBasedRouting"
          ], 
          "x-ms-enum": {
            "name": "routingRuleType", 
            "modelAsString": false
          }, 
          "default": "Basic"
        }
      }
    }, 
    "DeploymentParameter_servers": {
      "properties": {
        "value": {
          "type": "array", 
          "items": {
            "type": "object"
          }, 
          "description": "The list of IP addresses or DNS names corresponding to backend servers.", 
          "x-ms-client-name": "servers"
        }
      }
    }, 
    "DeploymentParameter_skuName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name of the SKU. (Standard_Small, Standard_Medium, Standard_Large).", 
          "x-ms-client-name": "skuName", 
          "default": "Standard_Medium"
        }
      }
    }, 
    "DeploymentParameter_skuTier": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The SKU tier.", 
          "x-ms-client-name": "skuTier", 
          "default": "Standard"
        }
      }
    }, 
    "DeploymentParameter_subnet": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name or ID of the subnet.", 
          "x-ms-client-name": "subnet", 
          "default": "default"
        }
      }
    }, 
    "DeploymentParameter_subnetAddressPrefix": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The subnet prefix in CIDR format.", 
          "x-ms-client-name": "subnetAddressPrefix", 
          "default": "10.0.0.0/24"
        }
      }
    }, 
    "DeploymentParameter_subnetType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Use a new or existing subnet.", 
          "x-ms-client-name": "subnetType", 
          "enum": [
            "new", 
            "existingId", 
            "existingName"
          ], 
          "x-ms-enum": {
            "name": "subnetType", 
            "modelAsString": false
          }, 
          "default": "new"
        }
      }
    }, 
    "DeploymentParameter_tags": {
      "properties": {
        "value": {
          "type": "object", 
          "description": "Tags object.", 
          "x-ms-client-name": "tags"
        }
      }
    }, 
    "DeploymentParameter_virtualNetworkName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The name of the virtual network (VNet) associated with the subnet.", 
          "x-ms-client-name": "virtualNetworkName"
        }
      }
    }, 
    "DeploymentParameter_vnetAddressPrefix": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The virtual network address range in CIDR format.", 
          "x-ms-client-name": "vnetAddressPrefix", 
          "default": "10.0.0.0/16"
        }
      }
    }, 
    "DeploymentParameter__artifactsLocation": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Container URI of of the template.", 
          "x-ms-client-name": "_artifactsLocation", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateAppGateway_2016-07-19"
          ]
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template."
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the deployment paramaters."
    }, 
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the resource type."
        }, 
        "locations": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the collection of locations where this resource type can be created in."
        }, 
        "apiVersions": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the api version."
        }, 
        "properties": {
          "type": "object", 
          "additionalProperties": {
            "type": "string"
          }, 
          "description": "Gets or sets the properties."
        }
      }, 
      "description": "Resource type managed by the resource provider."
    }, 
    "Provider": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the provider id."
        }, 
        "namespace": {
          "type": "string", 
          "description": "Gets or sets the namespace of the provider."
        }, 
        "registrationState": {
          "type": "string", 
          "description": "Gets or sets the registration state of the provider."
        }, 
        "resourceTypes": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          }, 
          "description": "Gets or sets the collection of provider resource types."
        }
      }, 
      "description": "Resource provider information."
    }, 
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/BasicDependency"
          }, 
          "description": "Gets the list of dependencies."
        }, 
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string", 
          "description": "Gets or sets the state of the provisioning."
        }, 
        "correlationId": {
          "type": "string", 
          "description": "Gets or sets the correlation ID of the deployment."
        }, 
        "timestamp": {
          "type": "string", 
          "format": "date-time", 
          "description": "Gets or sets the timestamp of the template deployment."
        }, 
        "outputs": {
          "type": "object", 
          "description": "Gets or sets key/value pairs that represent deploymentoutput."
        }, 
        "providers": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Provider"
          }, 
          "description": "Gets the list of resource providers needed for the deployment."
        }, 
        "dependencies": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Dependency"
          }, 
          "description": "Gets the list of deployment dependencies."
        }, 
        "template": {
          "type": "object", 
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        }, 
        "TemplateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        }, 
        "parameters": {
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        }, 
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink", 
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental", 
            "Complete"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Deployment properties with additional details."
    }, 
    "DeploymentExtended": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the deployment."
        }, 
        "name": {
          "type": "string", 
          "description": "Gets or sets the name of the deployment."
        }, 
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended", 
          "description": "Gets or sets deployment properties."
        }
      }, 
      "required": [
        "name"
      ], 
      "description": "Deployment information."
    }
  }, 
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId", 
      "in": "path", 
      "required": true, 
      "type": "string", 
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    }, 
    "ApiVersionParameter": {
      "name": "api-version", 
      "in": "query", 
      "required": true, 
      "type": "string", 
      "description": "Client Api Version."
    }
  }
}