{
  "swagger": "2.0", 
  "info": {
    "title": "VmssCreationClient", 
    "version": "2015-11-01"
  }, 
  "host": "management.azure.com", 
  "schemes": [
    "https"
  ], 
  "consumes": [
    "application/json"
  ], 
  "produces": [
    "application/json"
  ], 
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ], 
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2", 
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize", 
      "flow": "implicit", 
      "description": "Azure Active Directory OAuth2 Flow", 
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }, 
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "Vmss"
        ], 
        "operationId": "Vmss_CreateOrUpdate", 
        "description": "Create or update a virtual machine.", 
        "parameters": [
          {
            "name": "resourceGroupName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the resource group. The name is case insensitive.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "deploymentName", 
            "in": "path", 
            "required": true, 
            "type": "string", 
            "description": "The name of the deployment.", 
            "pattern": "^[-\\w\\._]+$", 
            "minLength": 1, 
            "maxLength": 64
          }, 
          {
            "name": "parameters", 
            "x-ms-client-flatten": true, 
            "in": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/Deployment_Vmss"
            }, 
            "description": "Additional parameters supplied to the operation."
          }, 
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }, 
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ], 
        "responses": {
          "200": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }, 
          "201": {
            "description": "", 
            "schema": {
              "$ref": "#/definitions/DeploymentExtended"
            }
          }
        }, 
        "x-ms-long-running-operation": true
      }
    }
  }, 
  "definitions": {
    "Deployment_Vmss": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentProperties_Vmss", 
          "description": "Gets or sets the deployment properties.", 
          "x-ms-client-flatten": true
        }
      }, 
      "description": "Deployment operation parameters."
    }, 
    "DeploymentProperties_Vmss": {
      "properties": {
        "templateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink.", 
          "x-ms-client-flatten": true
        }, 
        "parameters": {
          "$ref": "#/definitions/VmssParameters", 
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink.", 
          "x-ms-client-flatten": true
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "required": [
        "templateLink", 
        "parameters", 
        "mode"
      ], 
      "description": "Deployment properties."
    }, 
    "TemplateLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template.", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateVmss_2016-08-04/azuredeploy.json"
          ]
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the template."
    }, 
    "VmssParameters": {
      "properties": {
        "_artifactsLocation": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter__artifactsLocation", 
          "x-ms-client-flatten": true
        }, 
        "adminPassword": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_adminPassword", 
          "x-ms-client-flatten": true
        }, 
        "adminUsername": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_adminUsername", 
          "x-ms-client-flatten": true
        }, 
        "authenticationType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_authenticationType", 
          "x-ms-client-flatten": true
        }, 
        "customOsDiskType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_customOsDiskType", 
          "x-ms-client-flatten": true
        }, 
        "customOsDiskUri": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_customOsDiskUri", 
          "x-ms-client-flatten": true
        }, 
        "dnsNameForPublicIP": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_dnsNameForPublicIP", 
          "x-ms-client-flatten": true
        }, 
        "dnsNameType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_dnsNameType", 
          "x-ms-client-flatten": true
        }, 
        "instanceCount": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_instanceCount", 
          "x-ms-client-flatten": true
        }, 
        "loadBalancer": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_loadBalancer", 
          "x-ms-client-flatten": true
        }, 
        "loadBalancerBackendPoolName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_loadBalancerBackendPoolName", 
          "x-ms-client-flatten": true
        }, 
        "loadBalancerType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_loadBalancerType", 
          "x-ms-client-flatten": true
        }, 
        "location": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_location", 
          "x-ms-client-flatten": true
        }, 
        "name": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_name", 
          "x-ms-client-flatten": true
        }, 
        "osDiskName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osDiskName", 
          "x-ms-client-flatten": true
        }, 
        "osDiskType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osDiskType", 
          "x-ms-client-flatten": true
        }, 
        "osOffer": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osOffer", 
          "x-ms-client-flatten": true
        }, 
        "osPublisher": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osPublisher", 
          "x-ms-client-flatten": true
        }, 
        "osSKU": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osSKU", 
          "x-ms-client-flatten": true
        }, 
        "osType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osType", 
          "x-ms-client-flatten": true
        }, 
        "osVersion": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_osVersion", 
          "x-ms-client-flatten": true
        }, 
        "overprovision": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_overprovision", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddress": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddress", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddressAllocation": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddressAllocation", 
          "x-ms-client-flatten": true
        }, 
        "publicIpAddressType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_publicIpAddressType", 
          "x-ms-client-flatten": true
        }, 
        "sshDestKeyPath": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_sshDestKeyPath", 
          "x-ms-client-flatten": true
        }, 
        "sshKeyValue": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_sshKeyValue", 
          "x-ms-client-flatten": true
        }, 
        "storageCaching": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_storageCaching", 
          "x-ms-client-flatten": true
        }, 
        "storageContainerName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_storageContainerName", 
          "x-ms-client-flatten": true
        }, 
        "storageType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_storageType", 
          "x-ms-client-flatten": true
        }, 
        "subnetIpAddressPrefix": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnetIpAddressPrefix", 
          "x-ms-client-flatten": true
        }, 
        "subnetName": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_subnetName", 
          "x-ms-client-flatten": true
        }, 
        "tags": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_tags", 
          "x-ms-client-flatten": true
        }, 
        "upgradePolicyMode": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_upgradePolicyMode", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetwork": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetwork", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetworkIpAddressPrefix": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetworkIpAddressPrefix", 
          "x-ms-client-flatten": true
        }, 
        "virtualNetworkType": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_virtualNetworkType", 
          "x-ms-client-flatten": true
        }, 
        "vmSku": {
          "type": "object", 
          "$ref": "#/definitions/DeploymentParameter_vmSku", 
          "x-ms-client-flatten": true
        }
      }, 
      "required": [
        "adminUsername", 
        "name"
      ]
    }, 
    "DeploymentParameter_adminPassword": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Password for the Virtual Machine.  Required if SSH (Linux only) is not specified.", 
          "x-ms-client-name": "adminPassword"
        }
      }
    }, 
    "DeploymentParameter_adminUsername": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Username for the Virtual Machine.", 
          "x-ms-client-name": "adminUsername"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_authenticationType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Password or SSH Public Key authentication.", 
          "x-ms-client-name": "authenticationType", 
          "enum": [
            "password", 
            "ssh"
          ], 
          "x-ms-enum": {
            "name": "authenticationType", 
            "modelAsString": false
          }, 
          "default": "password"
        }
      }
    }, 
    "DeploymentParameter_customOsDiskType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Custom image OS type.", 
          "x-ms-client-name": "customOsDiskType", 
          "enum": [
            "windows", 
            "linux"
          ], 
          "x-ms-enum": {
            "name": "customOsDiskType", 
            "modelAsString": false
          }, 
          "default": "windows"
        }
      }
    }, 
    "DeploymentParameter_customOsDiskUri": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "URI to a custom disk image.", 
          "x-ms-client-name": "customOsDiskUri"
        }
      }
    }, 
    "DeploymentParameter_dnsNameForPublicIP": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine.  Requires a new public IP to be created by setting Public IP Address Type to New.", 
          "x-ms-client-name": "dnsNameForPublicIP"
        }
      }
    }, 
    "DeploymentParameter_dnsNameType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Associate VMs with a public IP address to a DNS name.", 
          "x-ms-client-name": "dnsNameType", 
          "enum": [
            "none", 
            "new"
          ], 
          "x-ms-enum": {
            "name": "dnsNameType", 
            "modelAsString": false
          }, 
          "default": "none"
        }
      }
    }, 
    "DeploymentParameter_instanceCount": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Number of VMs in scale set.", 
          "x-ms-client-name": "instanceCount", 
          "default": "2"
        }
      }
    }, 
    "DeploymentParameter_loadBalancer": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name or ID of load balancer.", 
          "x-ms-client-name": "loadBalancer"
        }
      }
    }, 
    "DeploymentParameter_loadBalancerBackendPoolName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name of load balancer backend pool.", 
          "x-ms-client-name": "loadBalancerBackendPoolName"
        }
      }
    }, 
    "DeploymentParameter_loadBalancerType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Whether to use an existing load balancer, create a new one, or use no load balancer.", 
          "x-ms-client-name": "loadBalancerType", 
          "enum": [
            "new", 
            "existingName", 
            "existingId", 
            "none"
          ], 
          "x-ms-enum": {
            "name": "loadBalancerType", 
            "modelAsString": false
          }, 
          "default": "new"
        }
      }
    }, 
    "DeploymentParameter_location": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Location for VM resources.", 
          "x-ms-client-name": "location"
        }
      }
    }, 
    "DeploymentParameter_name": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The VM name.", 
          "x-ms-client-name": "name"
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "DeploymentParameter_osDiskName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name of new VM OS disk.", 
          "x-ms-client-name": "osDiskName", 
          "default": "osdiskimage"
        }
      }
    }, 
    "DeploymentParameter_osDiskType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Use a custom image URI from the OS Disk URI parameter or use a provider's image.", 
          "x-ms-client-name": "osDiskType", 
          "enum": [
            "provided", 
            "custom"
          ], 
          "x-ms-enum": {
            "name": "osDiskType", 
            "modelAsString": false
          }, 
          "default": "provided"
        }
      }
    }, 
    "DeploymentParameter_osOffer": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The OS Offer to install.", 
          "x-ms-client-name": "osOffer", 
          "default": "WindowsServer"
        }
      }
    }, 
    "DeploymentParameter_osPublisher": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The OS publisher of the OS image.", 
          "x-ms-client-name": "osPublisher", 
          "default": "MicrosoftWindowsServer"
        }
      }
    }, 
    "DeploymentParameter_osSKU": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The OS SKU to install.", 
          "x-ms-client-name": "osSKU", 
          "default": "2012-R2-Datacenter"
        }
      }
    }, 
    "DeploymentParameter_osType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Common OS choices.  Choose 'Custom' to specify an image with the osPublisher, osOffer, osSKU, and osVersion parameters.", 
          "x-ms-client-name": "osType", 
          "enum": [
            "Win2012R2Datacenter", 
            "Win2012Datacenter", 
            "Win2008R2SP1", 
            "Custom"
          ], 
          "x-ms-enum": {
            "name": "osType", 
            "modelAsString": false
          }, 
          "default": "Win2012R2Datacenter"
        }
      }
    }, 
    "DeploymentParameter_osVersion": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The OS version to install.", 
          "x-ms-client-name": "osVersion", 
          "default": "latest"
        }
      }
    }, 
    "DeploymentParameter_overprovision": {
      "properties": {
        "value": {
          "type": "boolean", 
          "description": "Overprovision option (see https://azure.microsoft.com/en-us/documentation/articles/virtual-machine-scale-sets-overview/ for details).", 
          "x-ms-client-name": "overprovision", 
          "default": "True"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddress": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name or ID of public IP address to use.", 
          "x-ms-client-name": "publicIpAddress"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddressAllocation": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Public IP address allocation method.", 
          "x-ms-client-name": "publicIpAddressAllocation", 
          "enum": [
            "dynamic", 
            "static"
          ], 
          "x-ms-enum": {
            "name": "publicIpAddressAllocation", 
            "modelAsString": false
          }, 
          "default": "dynamic"
        }
      }
    }, 
    "DeploymentParameter_publicIpAddressType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Use a public IP Address for the VM Nic.", 
          "x-ms-client-name": "publicIpAddressType", 
          "enum": [
            "none", 
            "new", 
            "existingName", 
            "existingId"
          ], 
          "x-ms-enum": {
            "name": "publicIpAddressType", 
            "modelAsString": false
          }, 
          "default": "new"
        }
      }
    }, 
    "DeploymentParameter_sshDestKeyPath": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Destination file path on VM for SSH key.", 
          "x-ms-client-name": "sshDestKeyPath"
        }
      }
    }, 
    "DeploymentParameter_sshKeyValue": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "SSH key file data.", 
          "x-ms-client-name": "sshKeyValue"
        }
      }
    }, 
    "DeploymentParameter_storageCaching": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Storage caching type.", 
          "x-ms-client-name": "storageCaching", 
          "enum": [
            "ReadOnly", 
            "ReadWrite"
          ], 
          "x-ms-enum": {
            "name": "storageCaching", 
            "modelAsString": false
          }, 
          "default": "ReadOnly"
        }
      }
    }, 
    "DeploymentParameter_storageContainerName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name of storage container for the VM OS disk.", 
          "x-ms-client-name": "storageContainerName", 
          "default": "vhds"
        }
      }
    }, 
    "DeploymentParameter_storageType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The VM storage type (Standard_LRS, Standard_GRS, Standard_RAGRS).", 
          "x-ms-client-name": "storageType", 
          "default": "Standard_LRS"
        }
      }
    }, 
    "DeploymentParameter_subnetIpAddressPrefix": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The subnet address prefix in CIDR format.", 
          "x-ms-client-name": "subnetIpAddressPrefix", 
          "default": "10.0.0.0/24"
        }
      }
    }, 
    "DeploymentParameter_subnetName": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The subnet name.", 
          "x-ms-client-name": "subnetName"
        }
      }
    }, 
    "DeploymentParameter_tags": {
      "properties": {
        "value": {
          "type": "object", 
          "description": "Tags object.", 
          "x-ms-client-name": "tags"
        }
      }
    }, 
    "DeploymentParameter_upgradePolicyMode": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Manual or Automatic upgrade mode.", 
          "x-ms-client-name": "upgradePolicyMode", 
          "enum": [
            "manual", 
            "automatic"
          ], 
          "x-ms-enum": {
            "name": "upgradePolicyMode", 
            "modelAsString": false
          }, 
          "default": "manual"
        }
      }
    }, 
    "DeploymentParameter_virtualNetwork": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Name or ID of virtual network.", 
          "x-ms-client-name": "virtualNetwork"
        }
      }
    }, 
    "DeploymentParameter_virtualNetworkIpAddressPrefix": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "The virtual network IP address prefix in CIDR format.", 
          "x-ms-client-name": "virtualNetworkIpAddressPrefix", 
          "default": "10.0.0.0/16"
        }
      }
    }, 
    "DeploymentParameter_virtualNetworkType": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Whether to use an existing VNet or create a new one.", 
          "x-ms-client-name": "virtualNetworkType", 
          "enum": [
            "new", 
            "existingName", 
            "existingId"
          ], 
          "x-ms-enum": {
            "name": "virtualNetworkType", 
            "modelAsString": false
          }, 
          "default": "new"
        }
      }
    }, 
    "DeploymentParameter_vmSku": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Size of VMs in the VM Scale Set.  See https://azure.microsoft.com/en-us/pricing/details/virtual-machines/ for size info.", 
          "x-ms-client-name": "vmSku", 
          "default": "Standard_D1_v2"
        }
      }
    }, 
    "DeploymentParameter__artifactsLocation": {
      "properties": {
        "value": {
          "type": "string", 
          "description": "Container URI of of the template.", 
          "x-ms-client-name": "_artifactsLocation", 
          "enum": [
            "https://azuresdkci.blob.core.windows.net/templatehost/CreateVmss_2016-08-04"
          ]
        }
      }, 
      "required": [
        "value"
      ]
    }, 
    "ParametersLink": {
      "properties": {
        "uri": {
          "type": "string", 
          "description": "URI referencing the template."
        }, 
        "contentVersion": {
          "type": "string", 
          "description": "If included it must match the ContentVersion in the template."
        }
      }, 
      "required": [
        "uri"
      ], 
      "description": "Entity representing the reference to the deployment paramaters."
    }, 
    "ProviderResourceType": {
      "properties": {
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the resource type."
        }, 
        "locations": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the collection of locations where this resource type can be created in."
        }, 
        "apiVersions": {
          "type": "array", 
          "items": {
            "type": "string"
          }, 
          "description": "Gets or sets the api version."
        }, 
        "properties": {
          "type": "object", 
          "additionalProperties": {
            "type": "string"
          }, 
          "description": "Gets or sets the properties."
        }
      }, 
      "description": "Resource type managed by the resource provider."
    }, 
    "Provider": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the provider id."
        }, 
        "namespace": {
          "type": "string", 
          "description": "Gets or sets the namespace of the provider."
        }, 
        "registrationState": {
          "type": "string", 
          "description": "Gets or sets the registration state of the provider."
        }, 
        "resourceTypes": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/ProviderResourceType"
          }, 
          "description": "Gets or sets the collection of provider resource types."
        }
      }, 
      "description": "Resource provider information."
    }, 
    "BasicDependency": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "Dependency": {
      "properties": {
        "dependsOn": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/BasicDependency"
          }, 
          "description": "Gets the list of dependencies."
        }, 
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the dependency."
        }, 
        "resourceType": {
          "type": "string", 
          "description": "Gets or sets the dependency resource type."
        }, 
        "resourceName": {
          "type": "string", 
          "description": "Gets or sets the dependency resource name."
        }
      }, 
      "description": "Deployment dependency information."
    }, 
    "DeploymentPropertiesExtended": {
      "properties": {
        "provisioningState": {
          "type": "string", 
          "description": "Gets or sets the state of the provisioning."
        }, 
        "correlationId": {
          "type": "string", 
          "description": "Gets or sets the correlation ID of the deployment."
        }, 
        "timestamp": {
          "type": "string", 
          "format": "date-time", 
          "description": "Gets or sets the timestamp of the template deployment."
        }, 
        "outputs": {
          "type": "object", 
          "description": "Gets or sets key/value pairs that represent deploymentoutput."
        }, 
        "providers": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Provider"
          }, 
          "description": "Gets the list of resource providers needed for the deployment."
        }, 
        "dependencies": {
          "type": "array", 
          "items": {
            "$ref": "#/definitions/Dependency"
          }, 
          "description": "Gets the list of deployment dependencies."
        }, 
        "template": {
          "type": "object", 
          "description": "Gets or sets the template content. Use only one of Template or TemplateLink."
        }, 
        "TemplateLink": {
          "$ref": "#/definitions/TemplateLink", 
          "description": "Gets or sets the URI referencing the template. Use only one of Template or TemplateLink."
        }, 
        "parameters": {
          "type": "object", 
          "description": "Deployment parameters. Use only one of Parameters or ParametersLink."
        }, 
        "parametersLink": {
          "$ref": "#/definitions/ParametersLink", 
          "description": "Gets or sets the URI referencing the parameters. Use only one of Parameters or ParametersLink."
        }, 
        "mode": {
          "type": "string", 
          "description": "Gets or sets the deployment mode.", 
          "enum": [
            "Incremental", 
            "Complete"
          ], 
          "x-ms-enum": {
            "name": "DeploymentMode", 
            "modelAsString": false
          }
        }
      }, 
      "description": "Deployment properties with additional details."
    }, 
    "DeploymentExtended": {
      "properties": {
        "id": {
          "type": "string", 
          "description": "Gets or sets the ID of the deployment."
        }, 
        "name": {
          "type": "string", 
          "description": "Gets or sets the name of the deployment."
        }, 
        "properties": {
          "$ref": "#/definitions/DeploymentPropertiesExtended", 
          "description": "Gets or sets deployment properties."
        }
      }, 
      "required": [
        "name"
      ], 
      "description": "Deployment information."
    }
  }, 
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId", 
      "in": "path", 
      "required": true, 
      "type": "string", 
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    }, 
    "ApiVersionParameter": {
      "name": "api-version", 
      "in": "query", 
      "required": true, 
      "type": "string", 
      "description": "Client Api Version."
    }
  }
}