# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Overlay(Model):
    """Base type for all overlays.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: AudioOverlay, VideoOverlay

    :param input_label: Gets or sets the label of the Input used for the
     Overlay.   The Input must specify exactly one file to use.
    :type input_label: str
    :param input_loop: Gets or sets a value indicating whether the overlay is
     looped to match the duration of the input media.
    :type input_loop: bool
    :param start: Gets or sets the duration in the video at which the overlay
     starts. This is relative to the clip start if one is specified in a job.
     Default is from the beginning of the video.
    :type start: timedelta
    :param end: Gets or sets the duration in the video at which the overlay
     ends.  This is relative to the clip start if specified in a job. Default
     is till the end of the video if InputLoop is  true. else the duration of
     the overlay.
    :type end: timedelta
    :param fade_in_duration: Gets or sets the duration for how long the fade
     in happens. Default is no fade in.
    :type fade_in_duration: timedelta
    :param fade_out_duration: Gets or sets the duration for how long the fade
     out happens. Default is no fade out.
    :type fade_out_duration: timedelta
    :param audio_gain_level: Gets or sets the gain level of audio in the
     overlay. Defaults to a value of 1.0.
    :type audio_gain_level: float
    :param odatatype: Constant filled by server.
    :type odatatype: str
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'input_label': {'key': 'inputLabel', 'type': 'str'},
        'input_loop': {'key': 'inputLoop', 'type': 'bool'},
        'start': {'key': 'start', 'type': 'duration'},
        'end': {'key': 'end', 'type': 'duration'},
        'fade_in_duration': {'key': 'fadeInDuration', 'type': 'duration'},
        'fade_out_duration': {'key': 'fadeOutDuration', 'type': 'duration'},
        'audio_gain_level': {'key': 'audioGainLevel', 'type': 'float'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
    }

    _subtype_map = {
        'odatatype': {'#Microsoft.Media.AudioOverlay': 'AudioOverlay', '#Microsoft.Media.VideoOverlay': 'VideoOverlay'}
    }

    def __init__(self, input_label=None, input_loop=None, start=None, end=None, fade_in_duration=None, fade_out_duration=None, audio_gain_level=None):
        super(Overlay, self).__init__()
        self.input_label = input_label
        self.input_loop = input_loop
        self.start = start
        self.end = end
        self.fade_in_duration = fade_in_duration
        self.fade_out_duration = fade_out_duration
        self.audio_gain_level = audio_gain_level
        self.odatatype = None
