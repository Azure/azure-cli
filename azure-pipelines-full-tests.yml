resources:
- repo: self

trigger:
  batch: true
  branches:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'

variables:
- template: ${{ variables.Pipeline.Workspace }}/.azure-pipelines/templates/variables.yml

jobs:
- job: AutomationTest20200901
  displayName: Automation Test (Profile 2020-09-01)
  timeoutInMinutes: 120
  pool:
    name: ${{ variables.ubuntu_pool }}
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
      Python311:
        python.version: '3.11'
  steps:
  - template: .azure-pipelines/templates/automation_test.yml
    parameters:
      pythonVersion: '$(python.version)'
      profile: '2020-09-01-hybrid'
      fullTest: true
      jobName: 'FullTest'

- job: AutomationTest20190301
  displayName: Automation Test (Profile 2019-03-01)
  timeoutInMinutes: 120
  pool:
    name: ${{ variables.ubuntu_pool }}
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
      Python311:
        python.version: '3.11'
  steps:
  - template: .azure-pipelines/templates/automation_test.yml
    parameters:
      pythonVersion: '$(python.version)'
      profile: '2019-03-01-hybrid'
      fullTest: true
      jobName: 'FullTest'

- job: AutomationTest20180301
  displayName: Automation Test (Profile 2018-03-01)
  timeoutInMinutes: 120
  pool:
    name: ${{ variables.ubuntu_pool }}
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
      Python311:
        python.version: '3.11'
  steps:
  - template: .azure-pipelines/templates/automation_test.yml
    parameters:
      pythonVersion: '$(python.version)'
      profile: '2018-03-01-hybrid'
      fullTest: true
      jobName: 'FullTest'

- job: AutomationFullTestPython39ProfileLatest
  displayName: Automation Full Test Python39 Profile Latest
  timeoutInMinutes: 9999
  strategy:
    maxParallel: 8
    matrix:
      instance1:
        Instance_idx: 1
      instance2:
        Instance_idx: 2
      instance3:
        Instance_idx: 3
      instance4:
        Instance_idx: 4
      instance5:
        Instance_idx: 5
      instance6:
        Instance_idx: 6
      instance7:
        Instance_idx: 7
      instance8:
        Instance_idx: 8
  pool:
    name: ${{ variables.ubuntu_pool }}
  steps:
  - template: .azure-pipelines/templates/automation_test.yml
    parameters:
      pythonVersion: '3.9'
      profile: 'latest'
      instance_cnt: '8'
      instance_idx: '$(Instance_idx)'
      fullTest: true
      jobName: 'FullTest'

- job: AutomationFullTestPython311ProfileLatest
  displayName: Automation Full Test Python311 Profile Latest
  timeoutInMinutes: 9999
  strategy:
    maxParallel: 8
    matrix:
      instance1:
        Instance_idx: 1
      instance2:
        Instance_idx: 2
      instance3:
        Instance_idx: 3
      instance4:
        Instance_idx: 4
      instance5:
        Instance_idx: 5
      instance6:
        Instance_idx: 6
      instance7:
        Instance_idx: 7
      instance8:
        Instance_idx: 8
  pool:
    name: ${{ variables.ubuntu_pool }}
  steps:
  - template: .azure-pipelines/templates/automation_test.yml
    parameters:
      pythonVersion: '3.11'
      profile: 'latest'
      instance_cnt: '8'
      instance_idx: '$(Instance_idx)'
      fullTest: true
      jobName: 'FullTest'

- job: NotifyCIErrors
  dependsOn:
    - AutomationTest20200901
    - AutomationTest20190301
    - AutomationTest20180301
    - AutomationFullTestPython39ProfileLatest
    - AutomationFullTestPython311ProfileLatest
  condition: and(failed(), in(variables['Build.Reason'], 'BatchedCI'))
  displayName: Notify CI Errors
  pool:
    name: ${{ variables.ubuntu_pool }}
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.11'
    inputs:
      versionSpec: 3.11
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Azure CLI'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        pip install requests
        teams_api_url=$(az keyvault secret show --vault-name $(TEAMS_BOT_VAULT_NAME) --name $(TEAMS_BOT_API_URL_SECRET_NAME) --query value -otsv)
        teams_api_key=$(az keyvault secret show --vault-name $(TEAMS_BOT_VAULT_NAME) --name $(TEAMS_BOT_API_KEY_SECRET_NAME) --query value -otsv)
        echo "If any task fails, notify to teams channel"
        python scripts/ci/notify_ci_errors.py $teams_api_url $teams_api_key $(TEAMS_CHANNEL_ID)
    displayName: 'Notify To Teams Channel'
    env:
      BASE_URI: $(System.CollectionUri)
      PROJECT_TYPE: $(System.TeamProject)
      BUILD_ID: $(Build.BuildId)
      JOB_ID: $(System.JobId)
