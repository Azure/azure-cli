version: 1
content:
- group:
    name: acs
    summary: Manage Azure Container Services.
    description: |
      ACS will be retired as a standalone service on January 31, 2020.

      If you use the Kubernetes orchestrator, please migrate to AKS by January 31, 2020.
- command:
    name: acs browse
    summary: Show the dashboard for a service container's orchestrator in a web browser.
- command:
    name: acs create
    summary: Create a new container service.
    arguments:
    - name: --service-principal
      summary: Service principal used for authentication to Azure APIs.
      description: If not specified, a new service principal with the contributor role is created and cached at $HOME/.azure/acsServicePrincipal.json to be used by subsequent `az acs` commands.
    - name: --client-secret
      summary: Secret associated with the service principal. This argument is required if `--service-principal` is specified.
    - name: --agent-count
      summary: Set the default number of agents for the agent pools.
      description: Note that DC/OS clusters will have 1 or 2 additional public agents.
    examples:
    - summary: Create a DCOS cluster with an existing SSH key.
      command: |-
        az acs create --orchestrator-type DCOS -g MyResourceGroup -n MyContainerService \
          --ssh-key-value /path/to/publickey
    - summary: Create a DCOS cluster with two agent pools.
      command: |-
        az acs create -g MyResourceGroup -n MyContainerService --agent-profiles '[ \
          { \
            "name": "agentpool1" \
          }, \
          { \
            "name": "agentpool2" \
          }]'
    - summary: Create a DCOS cluster where the second agent pool has a vmSize specified.
      command: |-
        az acs create -g MyResourceGroup -n MyContainerService --agent-profiles '[ \
          { \
            "name": "agentpool1" \
          }, \
          { \
            "name": "agentpool2", \
            "vmSize": "Standard_D2" \
          }]'
    - summary: Create a DCOS cluster with agent-profiles specified from a file.
      command: az acs create -g MyResourceGroup -n MyContainerService --agent-profiles MyAgentProfiles.json
- group:
    name: acs dcos
    summary: Commands to manage a DC/OS-orchestrated Azure Container Service.
- command:
    name: acs dcos install-cli
    summary: Download and install the DC/OS command-line tool for a cluster.
- command:
    name: acs kubernetes install-cli
    summary: Download and install the Kubernetes command-line tool for a cluster.
- group:
    name: acs kubernetes
    summary: Commands to manage a Kubernetes-orchestrated Azure Container Service.
- command:
    name: acs kubernetes get-credentials
    summary: Download and install credentials to access a cluster.  This command requires the same private-key used to create the cluster.
- command:
    name: acs list-locations
    summary: List locations where Azure Container Service is in preview and in production.
- command:
    name: acs scale
    summary: Change the private agent count of a container service.
    arguments:
    - name: --new-agent-count
      summary: The number of agents for the container service.
- command:
    name: acs show
    summary: Show the details for a container service.
- command:
    name: acs wait
    summary: Wait for a container service to reach a desired state.
    description: If an operation on a container service was interrupted or was started with `--no-wait`, use this command to wait for it to complete.
- group:
    name: aks
    summary: Manage Azure Kubernetes Services.
- command:
    name: aks browse
    summary: Show the dashboard for a Kubernetes cluster in a web browser.
    arguments:
    - name: --disable-browser
      summary: Don't launch a web browser after establishing port-forwarding.
      description: Add this argument when launching a web browser manually, or for automated testing.
    - name: --listen-port
      summary: The listening port for the dashboard.
- command:
    name: aks create
    summary: Create a new managed Kubernetes cluster.
    arguments:
    - name: --generate-ssh-keys
      summary: Generate SSH public and private key files if missing.
    - name: --service-principal
      summary: Service principal used for authentication to Azure APIs.
      description: If not specified, a new service principal is created and cached at $HOME/.azure/aksServicePrincipal.json to be used by subsequent `az aks` commands.
    - name: --skip-subnet-role-assignment
      summary: Skip role assignment for subnet (advanced networking).
      description: If specified, please make sure your service principal has the access to your subnet.
    - name: --client-secret
      summary: Secret associated with the service principal. This argument is required if `--service-principal` is specified.
    - name: --node-vm-size
      summary: Size of Virtual Machines to create as Kubernetes nodes.
    - name: --dns-name-prefix
      summary: Prefix for hostnames that are created. If not specified, generate a hostname using the managed cluster and resource group names.
    - name: --node-count
      summary: Number of nodes in the Kubernetes node pool. After creating a cluster, you can change the size of its node pool with `az aks scale`.
    - name: --node-osdisk-size
      summary: Size in GB of the OS disk for each node in the node pool. Minimum 30 GB.
    - name: --kubernetes-version
      summary: Version of Kubernetes to use for creating the cluster, such as "1.7.12" or "1.8.7".
      value-sources:
      - link:
          command: '`az aks get-versions`'
    - name: --ssh-key-value
      summary: Public key path or key contents to install on node VMs for SSH access. For example, 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'.
    - name: --admin-username
      summary: User account to create on node VMs for SSH access.
    - name: --aad-client-app-id
      summary: The ID of an Azure Active Directory client application of type "Native". This application is for user login via kubectl.
    - name: --aad-server-app-id
      summary: The ID of an Azure Active Directory server application of type "Web app/API". This application represents the managed cluster's apiserver (Server application).
    - name: --aad-server-app-secret
      summary: The secret of an Azure Active Directory server application.
    - name: --aad-tenant-id
      summary: The ID of an Azure Active Directory tenant.
    - name: --dns-service-ip
      summary: An IP address assigned to the Kubernetes DNS service.
      description: This address must be within the Kubernetes service address range specified by "--service-cidr". For example, 10.0.0.10.
    - name: --docker-bridge-address
      summary: A specific IP address and netmask for the Docker bridge, using standard CIDR notation.
      description: This address must not be in any Subnet IP ranges, or the Kubernetes service address range. For example, 172.17.0.1/16.
    - name: --enable-addons
      summary: Enable the Kubernetes addons in a comma-separated list.
      description: |-
        These addons are available:
            http_application_routing - configure ingress with automatic public DNS name creation.
            monitoring - turn on Log Analytics monitoring. Uses the Log Analytics Default Workspace if it exists, else creates one. Specify "--workspace-resource-id" to use an existing workspace.
            virtual-node - enable AKS Virtual Node (PREVIEW). Requires --subnet_name to provide the name of an existing subnet for the Virtual Node to use.
    - name: --disable-rbac
      summary: Disable Kubernetes Role-Based Access Control.
    - name: --enable-rbac
      summary: 'Enable Kubernetes Role-Based Access Control. Default: enabled.'
    - name: --max-pods
      summary: The maximum number of pods deployable to a node.
      description: If not specified, defaults to 110, or 30 for advanced networking configurations.
    - name: --network-plugin
      summary: The Kubernetes network plugin to use.
      description: Specify "azure" for advanced networking configurations. Defaults to "kubenet".
    - name: --network-policy
      summary: (PREVIEW) The Kubernetes network policy to use.
      description: |
        Using together with "azure" network plugin.
        Specify "azure" for Azure network policy manager and "calico" for calico network policy controller.
        Defaults to "" (network policy disabled).
    - name: --no-ssh-key
      summary: Do not use or create a local SSH key.
      description: To access nodes after creating a cluster with this option, use the Azure Portal.
    - name: --pod-cidr
      summary: A CIDR notation IP range from which to assign pod IPs when kubenet is used.
      description: This range must not overlap with any Subnet IP ranges. For example, 172.244.0.0/16.
    - name: --service-cidr
      summary: A CIDR notation IP range from which to assign service cluster IPs.
      description: This range must not overlap with any Subnet IP ranges. For example, 10.0.0.0/16.
    - name: --vnet-subnet-id
      summary: The ID of a subnet in an existing VNet into which to deploy the cluster.
    - name: --workspace-resource-id
      summary: The resource ID of an existing Log Analytics Workspace to use for storing monitoring data. If not specified, uses the default Log Analytics Workspace if it exists, otherwise creates one.
    examples:
    - summary: Create a Kubernetes cluster with an existing SSH public key.
      command: az aks create -g MyResourceGroup -n MyManagedCluster --ssh-key-value /path/to/publickey
    - summary: Create a Kubernetes cluster with a specific version.
      command: az aks create -g MyResourceGroup -n MyManagedCluster --kubernetes-version 1.8.7
    - summary: Create a Kubernetes cluster with a larger node pool.
      command: az aks create -g MyResourceGroup -n MyManagedCluster --node-count 7
- command:
    name: aks delete
    summary: Delete a managed Kubernetes cluster.
- command:
    name: aks update-credentials
    summary: Update credentials for a managed Kubernetes cluster, like service principal.
    arguments:
    - name: --reset-service-principal
      summary: Reset service principal for a managed cluster.
    - name: --service-principal
      summary: Service principal used for authentication to Azure APIs.
    - name: --client-secret
      summary: Secret associated with the service principal. This argument is required if `--service-principal` is specified.
- command:
    name: aks disable-addons
    summary: Disable Kubernetes addons.
    arguments:
    - name: --addons
      summary: Disable the Kubernetes addons in a comma-separated list.
- command:
    name: aks enable-addons
    summary: Enable Kubernetes addons.
    description: |-
      These addons are available:
          http_application_routing - configure ingress with automatic public DNS name creation.
          monitoring - turn on Log Analytics monitoring. Requires "--workspace-resource-id".
          virtual-node - enable AKS Virtual Node (PREVIEW). Requires --subnet_name to provide the name of an existing subnet for the Virtual Node to use.
    arguments:
    - name: --addons
      summary: Enable the Kubernetes addons in a comma-separated list.
    - name: --workspace-resource-id
      summary: The resource ID of an existing Log Analytics Workspace to use for storing monitoring data.
- command:
    name: aks get-credentials
    summary: Get access credentials for a managed Kubernetes cluster.
    arguments:
    - name: --admin
      summary: 'Get cluster administrator credentials.  Default: cluster user credentials.'
    - name: --file
      summary: Kubernetes configuration file to update. Use "-" to print YAML to stdout instead.
    - name: --overwrite-existing
      summary: Overwrite any existing cluster entry with the same name.
- command:
    name: aks get-upgrades
    summary: Get the upgrade versions available for a managed Kubernetes cluster.
- command:
    name: aks get-versions
    summary: Get the versions available for creating a managed Kubernetes cluster.
- command:
    name: aks install-cli
    summary: Download and install kubectl, the Kubernetes command-line tool.
- command:
    name: aks install-connector
    summary: (PREVIEW) Install the ACI Connector on a managed Kubernetes cluster.
    arguments:
    - name: --chart-url
      summary: URL of a Helm chart that installs ACI Connector.
    - name: --connector-name
      summary: Name of the ACI Connector.
    - name: --os-type
      summary: Install support for deploying ACIs of this operating system type.
    - name: --service-principal
      summary: Service principal used for authentication to Azure APIs.
      description: If not specified, use the AKS service principal defined in the file /etc/kubernetes/azure.json on the node which runs the virtual kubelet pod.
    - name: --client-secret
      summary: Secret associated with the service principal. This argument is required if `--service-principal` is specified.
    - name: --image-tag
      summary: The image tag of the virtual kubelet. Use 'latest' if it is not specified
    - name: --aci-resource-group
      summary: The resource group to create the ACI container groups. Use the MC_* resource group if it is not specified.
    - name: --location
      summary: The location to create the ACI container groups. Use the location of the MC_* resource group if it is not specified.
    examples:
    - summary: Install the ACI Connector for Linux to a managed Kubernetes cluster.
      command: |-
        az aks install-connector --name MyManagedCluster --resource-group MyResourceGroup
    - summary: Install the ACI Connector for Windows to a managed Kubernetes cluster.
      command: |-
        az aks install-connector --name MyManagedCluster --resource-group MyResourceGroup \
           --connector-name aci-connector --os-type Windows
    - summary: Install the ACI Connector for both Windows and Linux to a managed Kubernetes cluster.
      command: |-
        az aks install-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --os-type Both
    - summary: Install the ACI Connector using a specific service principal in a specific resource group.
      command: |-
        az aks install-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --service-principal <SPN_ID> --client-secret <SPN_SECRET> \
          --aci-resource-group ACI-resource-group
    - summary: Install the ACI Connector from a custom Helm chart with custom tag.
      command: |-
        az aks install-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --chart-url <CustomURL> --image-tag <VirtualKubeletImageTag>
- command:
    name: aks list
    summary: List managed Kubernetes clusters.
- command:
    name: aks remove-connector
    summary: (PREVIEW) Remove the ACI Connector from a managed Kubernetes cluster.
    arguments:
    - name: --connector-name
      summary: Name of the ACI Connector.
    - name: --graceful
      summary: Use a "cordon and drain" strategy to evict pods safely before removing the ACI node.
    - name: --os-type
      summary: Remove support for deploying ACIs of this operating system type.
    examples:
    - summary: Remove the ACI Connector from a cluster using the graceful mode.
      command: |-
        az aks remove-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name MyConnector --graceful
- command:
    name: aks scale
    summary: Scale the node pool in a managed Kubernetes cluster.
    arguments:
    - name: --node-count
      summary: Number of nodes in the Kubernetes node pool.
- command:
    name: aks show
    summary: Show the details for a managed Kubernetes cluster.
- command:
    name: aks upgrade
    summary: Upgrade a managed Kubernetes cluster to a newer version.
    description: Kubernetes will be unavailable during cluster upgrades.
    arguments:
    - name: --kubernetes-version
      summary: Version of Kubernetes to upgrade the cluster to, such as "1.7.12" or "1.8.7".
      value-sources:
      - link:
          command: '`az aks get-upgrades`'
- command:
    name: aks upgrade-connector
    summary: (PREVIEW) Upgrade the ACI Connector on a managed Kubernetes cluster.
    arguments:
    - name: --chart-url
      summary: URL of a Helm chart that installs ACI Connector.
    - name: --connector-name
      summary: Name of the ACI Connector.
    - name: --os-type
      summary: Install support for deploying ACIs of this operating system type.
    - name: --service-principal
      summary: Service principal used for authentication to Azure APIs.
      description: If not specified, use the AKS service principal defined in the file /etc/kubernetes/azure.json on the node which runs the virtual kubelet pod.
    - name: --client-secret
      summary: Secret associated with the service principal. This argument is required if `--service-principal` is specified.
    - name: --image-tag
      summary: The image tag of the virtual kubelet. Use 'latest' if it is not specified
    - name: --aci-resource-group
      summary: The resource group to create the ACI container groups. Use the MC_* resource group if it is not specified.
    - name: --location
      summary: The location to create the ACI container groups. Use the location of the MC_* resource group if it is not specified.
    examples:
    - summary: Upgrade the ACI Connector for Linux to a managed Kubernetes cluster.
      command: |-
        az aks upgrade-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector
    - summary: Upgrade the ACI Connector for Windows to a managed Kubernetes cluster.
      command: |-
        az aks upgrade-connector --name MyManagedCluster --resource-group MyResourceGroup \
           --connector-name aci-connector --os-type Windows
    - summary: Upgrade the ACI Connector for both Windows and Linux to a managed Kubernetes cluster.
      command: |-
        az aks upgrade-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --os-type Both
    - summary: Upgrade the ACI Connector to use a specific service principal in a specific resource group.
      command: |-
        az aks upgrade-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --service-principal <SPN_ID> --client-secret <SPN_SECRET> \
          --aci-resource-group ACI-resource-group
    - summary: Upgrade the ACI Connector from a custom Helm chart with custom tag.
      command: |-
        az aks upgrade-connector --name MyManagedCluster --resource-group MyResourceGroup \
          --connector-name aci-connector --chart-url <CustomURL> --image-tag <VirtualKubeletImageTag>
- command:
    name: aks use-dev-spaces
    summary: (PREVIEW) Use Azure Dev Spaces with a managed Kubernetes cluster.
    arguments:
    - name: --update
      summary: Update to the latest Azure Dev Spaces client components.
    - name: --space
      summary: Name of the new or existing dev space to select. Defaults to an interactive selection experience.
    examples:
    - summary: Use Azure Dev Spaces with a managed Kubernetes cluster, interactively selecting a dev space.
      command: |-
        az aks use-dev-spaces -g my-aks-group -n my-aks
    - summary: Use Azure Dev Spaces with a managed Kubernetes cluster, updating to the latest Azure Dev Spaces         client components and selecting a new or existing dev space 'my-space'.
      command: |-
        az aks use-dev-spaces -g my-aks-group -n my-aks --update --space my-space
    - summary: Use Azure Dev Spaces with a managed Kubernetes cluster, selecting a new or existing dev space         'develop/my-space' without prompting for confirmation.
      command: |-
        az aks use-dev-spaces -g my-aks-group -n my-aks -s develop/my-space -y
- command:
    name: aks remove-dev-spaces
    summary: (PREVIEW) Remove Azure Dev Spaces from a managed Kubernetes cluster.
    examples:
    - summary: Remove Azure Dev Spaces from a managed Kubernetes cluster.
      command: |-
        az aks remove-dev-spaces -g my-aks-group -n my-aks
    - summary: Remove Azure Dev Spaces from a managed Kubernetes cluster without prompting.
      command: |-
        az aks remove-dev-spaces -g my-aks-group -n my-aks --yes
- command:
    name: aks wait
    summary: Wait for a managed Kubernetes cluster to reach a desired state.
    description: If an operation on a cluster was interrupted or was started with `--no-wait`, use this command to wait for it to complete.
    examples:
    - summary: Wait for a cluster to be upgraded, polling every minute for up to thirty minutes.
      command: |-
        az aks wait -g MyResourceGroup -n MyManagedCluster --updated --interval 60 --timeout 1800
- group:
    name: openshift
    summary: (PREVIEW) Manage Azure OpenShift Services.
- command:
    name: openshift create
    summary: (PREVIEW) Create a new managed OpenShift cluster.
    arguments:
    - name: --compute-vm-size
      summary: Size of Virtual Machines to create as OpenShift nodes.
    - name: --compute-count
      summary: Number of nodes in the OpenShift node pool.
    - name: --fqdn
      summary: FQDN for OpenShift API server loadbalancer internal hostname. For example myopenshiftcluster.eastus.cloudapp.azure.com
    - name: --aad-client-app-id
      summary: The ID of an Azure Active Directory client application. If not specified, a new Azure Active Directory client is created.
    - name: --aad-client-app-secret
      summary: The secret of an Azure Active Directory client application.
    - name: --aad-tenant-id
      summary: The ID of an Azure Active Directory tenant.
    - name: --vnet-peer
      summary: The ID or the name of a subnet in an existing VNet into which to peer the cluster.
    - name: --vnet-prefix
      summary: The CIDR used on the VNet into which to deploy the cluster.
    - name: --subnet-prefix
      summary: The CIDR used on the Subnet into which to deploy the cluster.
    examples:
    - summary: Create an OpenShift cluster and auto create an AAD Client
      command: az openshift create -g MyResourceGroup -n MyManagedCluster --fqdn {FQDN}
    - summary: Create an OpenShift cluster with 5 compute nodes and a custom AAD Client.
      command: az openshift create -g MyResourceGroup -n MyManagedCluster --fqdn {FQDN} --aad-client-app-id {APP_ID} --aad-client-app-secret {APP_SECRET} --aad-tenant-id {TENANT_ID} --compute-count 5
    - summary: Create an Openshift cluster using a custom vnet
      command: az openshift create -g MyResourceGroup -n MyManagedCluster --fqdn {FQDN} --vnet-peer "/subscriptions/0000000-0000-0000-0000-000000000000/resourceGroups/openshift-vnet/providers/Microsoft.Network/virtualNetworks/test"
- command:
    name: openshift scale
    summary: (PREVIEW) Scale the compute pool in a managed OpenShift cluster.
    arguments:
    - name: --compute-count
      summary: Number of nodes in the OpenShift compute pool.
- command:
    name: openshift show
    summary: (PREVIEW) Show the details for a managed OpenShift cluster.
- command:
    name: openshift delete
    summary: (PREVIEW) Delete a managed OpenShift cluster.
- command:
    name: openshift list
    summary: (PREVIEW) List managed OpenShift clusters.
- command:
    name: openshift wait
    summary: (PREVIEW) Wait for a managed OpenShift cluster to reach a desired state.
    description: If an operation on a cluster was interrupted or was started with `--no-wait`, use this command to wait for it to complete.
    examples:
    - summary: Wait for a cluster to be upgraded, polling every minute for up to thirty minutes.
      command: |-
        az openshift wait -g MyResourceGroup -n MyManagedCluster --updated --interval 60 --timeout 1800
