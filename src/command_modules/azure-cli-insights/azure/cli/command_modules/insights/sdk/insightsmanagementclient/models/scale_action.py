#---------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#---------------------------------------------------------------------------------------------
#pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ScaleAction(Model):
    """The parameters for the scaling action.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param direction: the scale direction. Whether the scaling action
     increases or decreases the number of instances. Possible values include:
     'None', 'Increase', 'Decrease'
    :type direction: str or :class:`ScaleDirection
     <azure.insights.models.ScaleDirection>`
    :ivar type: the type of action that should occur, this must be set to
     ChangeCount. Default value: "ChangeCount" .
    :vartype type: str
    :param value: the number of instances that are involved in the scaling
     action. This value must be 1 or greater. The default value is 1. Default
     value: "1" .
    :type value: str
    :param cooldown: the amount of time to wait since the last scaling action
     before this action occurs. It must be between 1 week and 1 minute.
    :type cooldown: timedelta
    """ 

    _validation = {
        'direction': {'required': True},
        'type': {'required': True, 'constant': True},
        'cooldown': {'required': True},
    }

    _attribute_map = {
        'direction': {'key': 'direction', 'type': 'ScaleDirection'},
        'type': {'key': 'type', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
        'cooldown': {'key': 'cooldown', 'type': 'duration'},
    }

    type = "ChangeCount"

    def __init__(self, direction, cooldown, value="1"):
        self.direction = direction
        self.value = value
        self.cooldown = cooldown
