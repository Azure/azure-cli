# Variable 'KeyVaultName' and 'ADOTokenName' was defined in the Variables tab


#schedules:
#- cron: "50 15 * * *"
#  displayName: 11:50 PM (UTC + 8:00) China Daily Run
#  branches:
#    include:
#    - main

trigger:
  - bernard-auto-update-service-owner

# The 'resources' and 'uses' below are used to resolve the error 'Repository associated with wiki ID <WikiId> does not exist or you do not have permissions for the operation you are attempting.'
resources:
  repositories:
  - repository: ServiceContactList
    type: git
    name: internal.wiki

jobs:
- job: UpdateYaml
  displayName: Update resourceManagement.yml
  pool: pool-windows-2019
  uses:
    repositories:
    - ServiceContactList

  steps:
  - task: UseDotNet@2
    displayName: Install .NET 8 SDK
    inputs:
      packageType: sdk
      version: 8.0.x

  - pwsh: |
      dotnet --version
      dotnet new tool-manifest --force
      dotnet tool install powershell --version 7.4.*
    displayName: Install PowerShell 7.4.x

  - pwsh: |
      dotnet tool run pwsh -NoLogo -NoProfile -NonInteractive -File ./tools/Github/ParseServiceContactsList.ps1 -AccessToken $env:SYSTEM_ACCESSTOKEN
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    displayName: Update resourceManagement.yml file locally

  - pwsh: |
      $hasChanges = git diff --name-only .github/policies
      if ($null -eq $hasChanges) {
          Write-Host "The wiki has no changes."
          Write-Host "##vso[task.setvariable variable=ChangesDetected]false"
      } else {
          Write-Host "There are changes in the repository."
          Write-Host "##vso[task.setvariable variable=ChangesDetected]true"
      }
    displayName: Check if Wiki table has any changes

  - task: AzurePowerShell@5
    inputs:
      pwsh: true
      azureSubscription: '$(AZURE_SDK_INFRA_SUB_CONNECTED_SERVICE)'
      ScriptType: 'InlineScript'
      Inline: |
        $GithubToken = Get-AzKeyVaultSecret -VaultName $(GithubPATKeyVaultName) -Name $(GithubPATKeyVaultAccount) -AsPlainText
        Write-Host "##vso[task.setvariable variable=GithubToken;issecret=true]$GithubToken"
      azurePowerShellVersion: 'LatestVersion'
    displayName: Get Github PAT from Key Vault

  - pwsh: |
      git config --global user.email "AzPyCLI@microsoft.com"
      git config --global user.name "Azure CLI Team"
      git checkout -b "sync_alias_$env:Build.BuildId"

      git add .github/policies
      git commit -m "Sync resourceManagement.yml"

      git remote set-url origin https://azclibot:$(GithubToken)@github.com/Azure/azure-cli.git;
      git push origin "sync_alias_$env:Build.BuildId" --force
    displayName: Git commit and push
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))

  - pwsh: |
      $Title = "Sync resourceManagement.yml according To ADO Wiki Page - Service Contact List"
      $HeadBranch = "sync_alias_$env:Build.BuildId"
      $BaseBranch = "dev"
      $Description = "This PR synchronizes the task: 'Triage issues to the service team' part of resourceManagement.yml from table of Service Contact List in ADO wiki page"
      Invoke-RestMethod -Uri "https://api.github.com/repos/Azure/azure-cli/pulls" `
        -Method Post `
        -Headers @{ "Authorization" = "token $GithubToken" } `
        -Body (@{ title = $pr_title; body = $pr_body; head = $pr_head; base = "dev" } | ConvertTo-Json) `
        -ContentType "application/json"
    displayName: Create PR to main branch
    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))

#
#  - task: AzureCLI@1
#    displayName: Git commit and push
#    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
#    inputs:
#      azureSubscription: $(AZURE_SDK_INFRA_SUB_CONNECTED_SERVICE)
#      scriptLocation: inlineScript
#      inlineScript: |
#        set -ev
#
#        GITHUB_TOKEN=$(az keyvault secret show --vault-name kv-azuresdk --name azclibot-pat --query value -otsv)
#        git config --global user.email "AzPyCLI@microsoft.com"
#        git config --global user.name "Azure CLI Team"
#        git remote add azclibot https://azclibot:$GITHUB_TOKEN@github.com/azclibot/azure-cli.git
#
#        git checkout -b sync_alias_$(Build.BuildId)
#
#        git add .github/policies
#        git commit -m "Sync resourceManagement.yml"
#
#        git push --set-upstream azclibot sync_alias_$(Build.BuildId)
#
#  - task: AzureCLI@1
#    displayName: 'Create PR to dev branch'
#    condition: and(succeeded(), eq(variables['ChangesDetected'], 'true'))
#    inputs:
#      azureSubscription: $(AZURE_SDK_INFRA_SUB_CONNECTED_SERVICE)
#      scriptLocation: inlineScript
#      inlineScript: |
#        set -ev
#        GITHUB_TOKEN=$(az keyvault secret show --vault-name kv-azuresdk --name azclibot-pat --query value -otsv)
#        pr_title="Sync resourceManagement.yml according To ADO Wiki Page - Service Contact List"
#        pr_body="This PR synchronizes the task: 'Triage issues to the service team' part of resourceManagement.yml from table of Service Contact List in ADO wiki page"
#        pr_head="azclibot:sync_alias_$(Build.BuildId)"
#
#        curl \
#        -H "Authorization: token $GITHUB_TOKEN" \
#        -d "{\"title\": \"${pr_title}\", \"body\": \"${pr_body}\", \"head\": \"${pr_head}\", \"base\": \"dev\"}" \
#        https://api.github.com/repos/Azure/azure-cli/pulls
