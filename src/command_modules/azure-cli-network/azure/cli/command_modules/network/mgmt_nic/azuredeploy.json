{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "enableIpForwarding": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable IP forwarding."
      }
    },
    "internalDnsNameLabel": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The internal DNS name label."
      }
    },
    "loadBalancerBackendAddressPoolIds": {
      "type": "array",
      "defaultValue": [ ],
      "metadata": {
        "description": "Array of load balancer backend address pool IDs."
      }
    },
    "loadBalancerInboundNatRuleIds": {
      "type": "array",
      "defaultValue": [ ],
      "metadata": {
        "description": "Array of load balancer inbound NAT rule IDs."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for NIC resource."
      }
    },
    "networkInterfaceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the new NIC."
      }
    },
    "networkSecurityGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name or ID of an existing network security group to associate with the NIC."
      }
    },
    "networkSecurityGroupType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [ "none", "existingName", "existingId" ],
      "metadata": {
        "description": "Identifies whether to use an existing NSG."
      }
    },
    "privateIpAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Static private IP address to use."
      }
    },
    "privateIpAddressAllocation": {
      "type": "string",
      "defaultValue": "dynamic",
      "allowedValues": [ "dynamic", "static" ],
      "metadata": {
        "description": "Private IP address allocation method."
      }
    },
    "privateIpAddressVersion": {
      "type": "string",
      "defaultValue": "ipv4",
      "allowedValues": [
        "ipv4",
        "ipv6"
      ],
      "metadata": {
        "description": "The private IP address version to use."
      }
    },
    "publicIpAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name or ID an existing public IP address to associate with the NIC."
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [ "none", "existingName", "existingId" ],
      "metadata": {
        "description": "Specify whether to associate an existing public IP address with the NIC."
      }
    },
    "subnet": {
      "type": "string",
      "metadata": {
        "description": "Name or ID of an existing subnet to associate with the NIC."
      }
    },
    "subnetType": {
      "type": "string",
      "defaultValue": "existingName",
      "allowedValues": [ "existingName", "existingId" ],
      "metadata": {
        "description": "Specify whether supplied subnet is by name or ID."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": { },
      "metadata": {
        "description": "Tags object."
      }
    },
    "useDnsSettings": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [ "true", "false" ],
      "metadata": {
        "description": "Flag to specify whether to use DNS settings."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual network to associate with the NIC."
      }
    }
  },
  "variables": {
    "nicPropertiesKey": "[concat('nsg_',variables('simplifiedTypeNames')[parameters('networkSecurityGroupType')],'_pub_ip_',variables('simplifiedTypeNames')[parameters('publicIpAddressType')])]",
    "name": "[parameters('networkInterfaceName')]",
    "dnsProperties": {
      "true": {
        "internalDnsNameLabel": "[parameters('internalDnsNameLabel')]"
      },
      "false": null
    },
    "publicIpAddressIds": {
      "none": null,
      "existingName": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/publicIPAddresses/',parameters('publicIpAddress'))]",
      "existingId": "[parameters('publicIpAddress')]"
    },
    "networkSecurityGroupIds": {
      "none": null,
      "existingName": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup'))]",
      "existingId": "[parameters('networkSecurityGroup')]"
    },
    "nicProperties": {
      "nsg_none_pub_ip_none": {
        "enableIPForwarding": "[parameters('enableIpForwarding')]",
        "dnsSettings": "[variables('dnsProperties')[parameters('useDnsSettings')]]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": "[parameters('loadBalancerBackendAddressPoolIds')]",
              "loadBalancerInboundNatRules": "[parameters('loadBalancerInboundNatRuleIds')]",
              "privateIPAllocationMethod": "[parameters('privateIpAddressAllocation')]",
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "privateIPAddressVersion": "[parameters('privateIpAddressVersion')]",
              "subnet": {
                "id": "[variables('subnetIds')[parameters('subnetType')]]"
              }
            }
          }
        ]
      },
      "nsg_none_pub_ip_existing": {
        "enableIPForwarding": "[parameters('enableIpForwarding')]",
        "dnsSettings": "[variables('dnsProperties')[parameters('useDnsSettings')]]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": "[parameters('loadBalancerBackendAddressPoolIds')]",
              "loadBalancerInboundNatRules": "[parameters('loadBalancerInboundNatRuleIds')]",
              "publicIpAddress": {
                "id": "[variables('publicIpAddressIds')[parameters('publicIpAddressType')]]"
              },
              "privateIPAllocationMethod": "[parameters('privateIpAddressAllocation')]",
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "privateIPAddressVersion": "[parameters('privateIpAddressVersion')]",
              "subnet": {
                "id": "[variables('subnetIds')[parameters('subnetType')]]"
              }
            }
          }
        ]
      },
      "nsg_existing_pub_ip_none": {
        "enableIPForwarding": "[parameters('enableIpForwarding')]",
        "dnsSettings": "[variables('dnsProperties')[parameters('useDnsSettings')]]",
        "networkSecurityGroup": {
          "id": "[variables('networkSecurityGroupIds')[parameters('networkSecurityGroupType')]]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": "[parameters('loadBalancerBackendAddressPoolIds')]",
              "loadBalancerInboundNatRules": "[parameters('loadBalancerInboundNatRuleIds')]",
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "privateIPAddressVersion": "[parameters('privateIpAddressVersion')]",
              "privateIPAllocationMethod": "[parameters('privateIpAddressAllocation')]",
              "subnet": {
                "id": "[variables('subnetIds')[parameters('subnetType')]]"
              }
            }
          }
        ]
      },
      "nsg_existing_pub_ip_existing": {
        "enableIPForwarding": "[parameters('enableIpForwarding')]",
        "dnsSettings": "[variables('dnsProperties')[parameters('useDnsSettings')]]",
        "networkSecurityGroup": {
          "id": "[variables('networkSecurityGroupIds')[parameters('networkSecurityGroupType')]]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": "[parameters('loadBalancerBackendAddressPoolIds')]",
              "loadBalancerInboundNatRules": "[parameters('loadBalancerInboundNatRuleIds')]",
              "publicIpAddress": {
                "id": "[variables('publicIpAddressIds')[parameters('publicIpAddressType')]]"
              },
              "privateIPAllocationMethod": "[parameters('privateIpAddressAllocation')]",
              "privateIPAddress": "[parameters('privateIpAddress')]",
              "privateIPAddressVersion": "[parameters('privateIpAddressVersion')]",
              "subnet": {
                "id": "[variables('subnetIds')[parameters('subnetType')]]"
              }
            }
          }
        ]
      }
    },
    "simplifiedTypeNames": {
      "none": "none",
      "existingName": "existing",
      "existingId": "existing"
    },
    "subnetIds": {
      "existingId": "[parameters('subnet')]",
      "existingName": "[concat(variables('vnetId'),'/subnets/',parameters('subnet'))]",
      "none": null
    },
    "vnetId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "location": "[parameters('location')]",
      "name": "[variables('name')]",
      "tags": "[parameters('tags')]",
      "properties": "[variables('nicProperties')[variables('nicPropertiesKey')]]",
      "type": "Microsoft.Network/networkInterfaces"
    }
  ],
  "outputs": {
    "NewNIC": {
      "type": "object",
      "value": "[reference(variables('name'))]"
    }
  }
}
