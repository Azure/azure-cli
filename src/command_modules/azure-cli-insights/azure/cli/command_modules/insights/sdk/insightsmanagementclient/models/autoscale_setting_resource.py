# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AutoscaleSettingResource(Model):
    """
    The autoscale setting resource.

    :param id: Gets or sets the resource identifier of the autoscale setting.
    :type id: str
    :param name: Gets or sets the name of the autoscale setting.
    :type name: str
    :param location: Gets or sets the location of the autoscale setting.
    :type location: str
    :param tags: Gets or sets the tags of the rule.
    :type tags: dict
    :param profiles: Gets or sets the collection of automatic scaling
     profiles that specify different scaling parameters for different time
     periods. A maximum of 20 profiles can be specified.
    :type profiles: list of :class:`AutoscaleProfile
     <insights.models.AutoscaleProfile>`
    :param notifications: Gets or sets the collection of notifications.
    :type notifications: list of :class:`AutoscaleNotification
     <insights.models.AutoscaleNotification>`
    :param enabled: Gets or sets the enabled flag.Specifies whether automatic
     scaling is enabled for the resource.
    :type enabled: bool
    :param autoscale_setting_name: Gets or sets the name of the autoscale
     setting.
    :type autoscale_setting_name: str
    :param target_resource_uri: Gets or sets the resource identifier of the
     resource that the autoscale setting should be added to.
    :type target_resource_uri: str
    """ 

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'profiles': {'key': 'properties.profiles', 'type': '[AutoscaleProfile]'},
        'notifications': {'key': 'properties.notifications', 'type': '[AutoscaleNotification]'},
        'enabled': {'key': 'properties.enabled', 'type': 'bool'},
        'autoscale_setting_name': {'key': 'properties.name', 'type': 'str'},
        'target_resource_uri': {'key': 'properties.targetResourceUri', 'type': 'str'},
    }

    def __init__(self, id=None, name=None, location=None, tags=None, profiles=None, notifications=None, enabled=None, autoscale_setting_name=None, target_resource_uri=None):
        self.id = id
        self.name = name
        self.location = location
        self.tags = tags
        self.profiles = profiles
        self.notifications = notifications
        self.enabled = enabled
        self.autoscale_setting_name = autoscale_setting_name
        self.target_resource_uri = target_resource_uri
