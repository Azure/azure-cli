{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://azuretemplatehost.blob.core.windows.net/templatehost/CreateVM",
      "metadata": {
        "description": "Container URI of of the template."
      }
    },
    "addToAvailabilitySet": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "existing"
      ],
      "metadata": {
        "description": "Flag to add the VM to an existing availability set."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationMethod": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshkey"
      ],
      "metadata": {
        "description": "Authentication method: password-only or add ssh-keys (Linux-only)."
      }
    },
    "availabilitySetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Existing availability set for the VM."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for VM resources."
      }
    },
    "newOrExistingStorageAccount": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing storage account or create a new one."
      }
    },
    "newOrExistingVNet": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to use an existing VNet or create a new one."
      }
    },
    "os": {
      "type": "string",
      "defaultValue": "WinServer 2012 R2",
      "allowedValues": [
        "Ubuntu 14.04",
        "Ubuntu 15.10",
        "WinServer 2012 R2",
        "Custom"
      ],
      "metadata": {
        "description": "Common OS choices.  Choose 'Custom' to specify an image with the osPublisher, osOffer, osSKU, and osVersion parameters."
      }
    },
    "osDiskName": {
      "type": "string",
      "defaultValue": "osdiskimage",
      "metadata": {
        "description": "Name of storage VHD for the VM OS disk."
      }
    },
    "osOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The OS Offer to install."
      }
    },
    "osPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The OS publisher of the OS image."
      }
    },
    "osSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "The OS SKU to install."
      }
    },
    "osVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The OS version to install."
      }
    },
    "publicIpAddressAllocation": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Dynamic or Static IP address allocation."
      }
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Use a public IP Address for the VM Nic. (new, existing or none)."
      }
    },
    "publicIpDNSEntryType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "new"
      ],
      "metadata": {
        "description": "Associate VMs with a public IP address to a DNS name (new or none)."
      }
    },
    "size": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The VM Size that should be created."
      }
    },
    "sshKeyPath": {
      "type": "string",
      "defaultValue": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "metadata": {
        "description": "VM file path for SSH key."
      }
    },
    "sshKeyValue": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH key file data."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('vhdstorage', uniqueString(parameters('VirtualMachineName')))]",
      "metadata": {
        "description": "Name of storage account for the VM OS disk."
      }
    },
    "storageContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "Name of storage container for the VM OS disk."
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The VM storage type."
      }
    },
    "subnetIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet address type."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[concat('Subnet', parameters('virtualMachineName'))]",
      "metadata": {
        "description": "The subnet name."
      }
    },
    "virtualMachineName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The VM resource name."
      }
    },
    "virtualNetworkIpAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The IP address prefix."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat('VNET', parameters('VirtualMachineName'))]",
      "metadata": {
        "description": "Name of virtual network to add VM to."
      }
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[concat('PublicIP', parameters('VirtualMachineName'))]",
      "metadata": {
        "description": "Name of public IP address to use."
      }
    }
  },
  "variables": {
    "imagePublishers": {
      "Ubuntu 14.04": "Canonical",
      "Ubuntu 15.10": "Canonical",
      "WinServer 2012 R2": "MicrosoftWindowsServer",
      "Custom": "[parameters('osPublisher')]"
    },
    "imageOffers": {
      "Ubuntu 14.04": "UbuntuServer",
      "Ubuntu 15.10": "UbuntuServer",
      "WinServer 2012 R2": "WindowsServer",
      "Custom": "[parameters('osOffer')]"
    },
    "imageSkus": {
      "Ubuntu 14.04": "14.04.4-DAILY-LTS",
      "Ubuntu 15.10": "15.10",
      "WinServer 2012 R2": "2012-R2-Datacenter",
      "Custom": "[parameters('osSKU')]"
    },
    "imageVersions": {
      "Ubuntu 14.04": "14.04.201603140",
      "Ubuntu 15.10": "15.10.201603290",
      "WinServer 2012 R2": "latest",
      "Custom": "[parameters('osVersion')]"
    },
    "vnetDeploymentName": "[concat('VNet', variables('vmName'))]",
    "nicName": "[concat('VMNic', parameters('VirtualMachineName'))]",
    "vnetAddressPrefix": "[parameters('virtualNetworkIpAddressPrefix')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetAddressPrefix": "[parameters('subnetIpAddressPrefix')]",
    "vhdStorageType": "[parameters('storageType')]",
    "publicIPName": "[parameters('publicIpAddressName')]",
    "publicIpAddressAllocation": "[parameters('publicIpAddressAllocation')]",
    "vhdStorageContainerName": "vhds",
    "vmName": "[parameters('virtualMachineName')]",
    "vmSize": "[parameters('size')]",
    "vmDeploymentName": "[concat('VM', variables('vmName'))]",
    "nicDeploymentName": "[concat('NicIp', variables('vmName'))]",
    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "storageAccountTemplateFilePaths": {
      "new": "nested_templates/NewStorageAccount.json",
      "existing": "nested_templates/ExistingStorageAccount.json"
    },
    "storageDeploymentName": "[concat(parameters('storageAccountName'), variables('vmName'))]",
    "availSetId": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetId'))]",
    "vnetTemplateFilePaths": {
      "new": "nested_templates/NewVNet.json",
      "existing": "nested_templates/ExistingVNet.json"
    },
    "nicTemplateFilePaths": {
      "none": "[concat('/nested_templates/nic_ip_none_dns_', parameters('publicIpDNSEntryType'), '.json')]",
      "new": "[concat('/nested_templates/nic_ip_new_dns_', parameters('publicIpDNSEntryType'), '.json')]",
      "existing": "[concat('/nested_templates/nic_ip_existing_dns_', parameters('publicIpDNSEntryType'), '.json')]"
    }
  },
  "resources": [
    {
      "name": "[variables('storageDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('storageAccountTemplateFilePaths')[parameters('newOrExistingStorageAccount')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "location": { "value": "[parameters('location')]" },
          "vhdStorageType": { "value": "[variables('vhdStorageType')]" }
        }
      }
    },
    {
      "name": "[variables('nicDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('vnetDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), variables('nicTemplateFilePaths')[parameters('publicIpAddressType')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "VirtualMachineName": { "value": "[parameters('VirtualMachineName')]" },
          "publicIPAddressName": { "value": "[variables('publicIPName')]" },
          "publicIpAddressAllocation": { "value": "[variables('publicIpAddressAllocation')]" },
          "nicName": { "value": "[variables('nicName')]" },
          "subnetRef": { "value": "[variables('subnetRef')]" }
        }
      }
    },
    {
      "name": "[variables('vnetDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('vnetTemplateFilePaths')[parameters('newOrExistingVNet')])]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[variables('vnetName')]" },
          "vnetIpAddressType": { "value": "[parameters('publicIpAddressAllocation')]" },
          "vnetIpAddressPrefix": { "value": "[variables('vnetAddressPrefix')]" },
          "subnetIpAddressPrefix": { "value": "[variables('subnetAddressPrefix')]" },
          "subnetName": { "value": "[variables('subnetName')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    },
    {
      "name": "[variables('vmDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('storageDeploymentName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('nicDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/nested_templates/vm_', parameters('addToAvailabilitySet'), '_', parameters('authenticationMethod'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "virtualMachineName": { "value": "[variables('vmName')]" },
          "osPublisher": { "value": "[variables('imagePublishers')[parameters('os')]]" },
          "osOffer": { "value": "[variables('imageOffers')[parameters('os')]]" },
          "osSKU": { "value": "[variables('imageSkus')[parameters('os')]]" },
          "osVersion": { "value": "[variables('imageVersions')[parameters('os')]]" },
          "size": { "value": "[variables('vmSize')]" },
          "storageType": { "value": "[variables('vhdStorageType')]" },
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "storageContainerName": { "value": "[parameters('storageContainerName')]" },
          "osDiskName": { "value": "[parameters('osDiskName')]" },
          "sshKeyValue": { "value": "[parameters('sshKeyValue')]" },
          "sshKeyPath": { "value": "[parameters('sshKeyPath')]" },
          "availabilitySetId": { "value": "[variables('availSetId')]" },
          "location": { "value": "[parameters('location')]" }
        }
      }
    }
  ],
  "outputs": {
  }
}
