# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .video_layer import VideoLayer


class H264Layer(VideoLayer):
    """A H.264 video layer.

    :param width: Gets or sets width of video in pixels for this layer.
    :type width: str
    :param height: Gets or sets height of video in pixels for this layer.
    :type height: str
    :param condition: Gets or sets the predicate to be evaluated before
     encoding this layer.
    :type condition: str
    :param label: Gets or sets the label for this layer.
    :type label: str
    :param odatatype: Constant filled by server.
    :type odatatype: str
    :param bitrate: Gets or sets the layer bitrate.
    :type bitrate: int
    :param max_bitrate: Gets or sets the maximum rate the VBV buffer should be
     assumed to refill at.
    :type max_bitrate: int
    :param b_frames: Gets or sets the number of B-frames to be used when
     encoding this layer.
    :type b_frames: int
    :param frame_rate: Gets or sets the frame rate for encoding this layer.
    :type frame_rate: str
    :param slices: Gets or sets the number of slice to be used when encoding
     this layer.
    :type slices: int
    :param adaptive_bframe: Gets or sets a value indicating whether adaptive
     b-frames are used for this layer.
    :type adaptive_bframe: bool
    :param profile: Gets or sets the video profile for this layer. Possible
     values include: 'Auto', 'Baseline', 'Main', 'High', 'High10', 'High422',
     'High444'
    :type profile: str or ~accounts.models.H264VideoProfile
    :param level: Gets or sets the video level for this layer.
    :type level: str
    :param buffer_window: Gets or sets the VBV buffer Window length.
    :type buffer_window: timedelta
    :param reference_frames: Gets or sets the number of reference frames to be
     used when encoding this layer.
    :type reference_frames: int
    :param entropy_mode: Gets or sets the entropy mode to be used for this
     layer. Possible values include: 'Cabac', 'Cavlc'
    :type entropy_mode: str or ~accounts.models.EntropyMode
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'width': {'key': 'width', 'type': 'str'},
        'height': {'key': 'height', 'type': 'str'},
        'condition': {'key': 'condition', 'type': 'str'},
        'label': {'key': 'label', 'type': 'str'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
        'bitrate': {'key': 'bitrate', 'type': 'int'},
        'max_bitrate': {'key': 'maxBitrate', 'type': 'int'},
        'b_frames': {'key': 'bFrames', 'type': 'int'},
        'frame_rate': {'key': 'frameRate', 'type': 'str'},
        'slices': {'key': 'slices', 'type': 'int'},
        'adaptive_bframe': {'key': 'adaptiveBFrame', 'type': 'bool'},
        'profile': {'key': 'profile', 'type': 'H264VideoProfile'},
        'level': {'key': 'level', 'type': 'str'},
        'buffer_window': {'key': 'bufferWindow', 'type': 'duration'},
        'reference_frames': {'key': 'referenceFrames', 'type': 'int'},
        'entropy_mode': {'key': 'entropyMode', 'type': 'EntropyMode'},
    }

    def __init__(self, width=None, height=None, condition=None, label=None, bitrate=None, max_bitrate=None, b_frames=None, frame_rate=None, slices=None, adaptive_bframe=None, profile=None, level=None, buffer_window=None, reference_frames=None, entropy_mode=None):
        super(H264Layer, self).__init__(width=width, height=height, condition=condition, label=label, bitrate=bitrate, max_bitrate=max_bitrate, b_frames=b_frames, frame_rate=frame_rate, slices=slices, adaptive_bframe=adaptive_bframe)
        self.profile = profile
        self.level = level
        self.buffer_window = buffer_window
        self.reference_frames = reference_frames
        self.entropy_mode = entropy_mode
        self.odatatype = '#Microsoft.Media.H264Layer'
