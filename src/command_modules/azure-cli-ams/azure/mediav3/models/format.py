# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
# pylint: skip-file
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Format(Model):
    """Base class for output.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: MultiBitrateFormat, ImageFormat, Mp4Format

    :param filename_pattern: Gets or sets the pattern of the filename to use
     excluding the extension. REVIEW: List "macros" that can be used and give
     examples.
    :type filename_pattern: str
    :param odatatype: Constant filled by server.
    :type odatatype: str
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'filename_pattern': {'key': 'filenamePattern', 'type': 'str'},
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
    }

    _subtype_map = {
        'odatatype': {'#Microsoft.Media.MultiBitrateFormat': 'MultiBitrateFormat', '#Microsoft.Media.ImageFormat': 'ImageFormat', '#Microsoft.Media.Mp4Format': 'Mp4Format'}
    }

    def __init__(self, filename_pattern=None):
        super(Format, self).__init__()
        self.filename_pattern = filename_pattern
        self.odatatype = None
